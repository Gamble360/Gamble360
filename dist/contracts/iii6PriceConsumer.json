{
  "contractName": "iii6PriceConsumer",
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "WethUsdPrice",
      "outputs": [
        {
          "internalType": "int256",
          "name": "priceFull",
          "type": "int256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "CoinUsdPrice",
      "outputs": [
        {
          "internalType": "int256",
          "name": "priceFull",
          "type": "int256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_oracle",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_digits",
          "type": "uint256"
        }
      ],
      "name": "setX",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "XUsdPrice",
      "outputs": [
        {
          "internalType": "int256",
          "name": "priceFull",
          "type": "int256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_oracle",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_digits",
          "type": "uint256"
        }
      ],
      "name": "setY",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "YUsdPrice",
      "outputs": [
        {
          "internalType": "int256",
          "name": "priceFull",
          "type": "int256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"CoinUsdPrice\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"priceFull\",\"type\":\"int256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"WethUsdPrice\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"priceFull\",\"type\":\"int256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"XUsdPrice\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"priceFull\",\"type\":\"int256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"YUsdPrice\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"priceFull\",\"type\":\"int256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_oracle\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_digits\",\"type\":\"uint256\"}],\"name\":\"setX\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_oracle\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_digits\",\"type\":\"uint256\"}],\"name\":\"setY\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"CoinUsdPrice()\":{\"details\":\"Divides between two values substracting the remainder from the dividend\",\"returns\":{\"priceFull\":\"gascoin price in usd\"}},\"WethUsdPrice()\":{\"details\":\"Divides between two values substracting the remainder from the dividend\",\"returns\":{\"priceFull\":\"eth price in usd\"}},\"XUsdPrice()\":{\"details\":\"Divides between two values substracting the remainder from the dividend\",\"returns\":{\"priceFull\":\"custom token x price in usd\"}},\"YUsdPrice()\":{\"details\":\"Divides between two values substracting the remainder from the dividend\",\"returns\":{\"priceFull\":\"custom token x price in usd\"}},\"setX(address,uint256)\":{\"details\":\"sets custom token x new oracle address\",\"params\":{\"_digits\":\"number of decimals the oracle passes\",\"_oracle\":\"address of the oracle\"},\"returns\":{\"_0\":\"exit in bool true\"}},\"setY(address,uint256)\":{\"details\":\"sets custom token y new oracle address\",\"params\":{\"_digits\":\"number of decimals the oracle passes\",\"_oracle\":\"address of the oracle\"},\"returns\":{\"_0\":\"exit in bool true\"}}},\"stateVariables\":{\"ethUSDagg\":{\"details\":\"this contract is a price consumer contract with all possible networks integrated\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/iii6Utils/Oracles/iii6PriceConsumer.sol\":\"iii6PriceConsumer\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"keccak256\":\"0xf2b6c9adb3552254df1445b73563cf014434ff5e78663e9b961b6c059506ceb5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c1f59e0c7334c22fb54288728fc32546bdc9c8133d6db0d60223e3c28f52120\",\"dweb:/ipfs/QmeuxawUVBhMWQJXaEhhnubCTc4Jwn5wYK8gbhq6NjrpfG\"]},\"@chainlink/contracts/src/v0.8/interfaces/LinkTokenInterface.sol\":{\"keccak256\":\"0xc7d7cd730d36825485ef4107d93c3ff18b9f3a5a00ea3d5988ba9a0bd70b10c5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8cb1064885ecbcd9c3adba779e190cb4a538e5d4d15aeccb67d3376bdffc94bd\",\"dweb:/ipfs/QmcQHK6ewve7tFi4XXK65JthQg4kQzApQikWcURJjGt4iQ\"]},\"project:/contracts/iii6Utils/Oracles/iii6PriceConsumer.sol\":{\"keccak256\":\"0x8f13a07554d75ead83b94eb5fca8dab244d701d530b31e39a47fd0f7e1ecca89\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://450b607becc252584949b5058d66c7677a5129ae05e6558063e4ac393d18e25b\",\"dweb:/ipfs/QmRpqWJYyRWH83UTq4JyPhBfoZ1MtfMkXNfvJe1PG9wrxR\"]}},\"version\":1}",
  "bytecode": "0x60806040523480156200001157600080fd5b5060014603620000ca57735f4ec3df9cbd43714fe2740f5e3616155c5b84196000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550735f4ec3df9cbd43714fe2740f5e3616155c5b8419600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555062000d21565b60054603620001825773d4a33860578de61dbabdc8bfdb98fd742fa7028e6000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555073d4a33860578de61dbabdc8bfdb98fd742fa7028e600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555062000d20565b61a86946036200023b577386d67c3d38d2bcee722e601025c25a575021c6ea6000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550735498bb86bc934c8d34fda08e81d444153d0d06ad600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555062000d1f565b61a86a4603620002f45773976b3d034e162d8bd72d6b9c989d545b839003b06000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550730a77230d17318075983913bc2145db16c7366156600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555062000d1e565b610fa24603620003ad5773b8c458c957a6e6ca7cc53ed95bea548c52afaa246000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555073e04676b9a9a2973bcb0d1478b5e1e9098bbb7f3d600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555062000d1d565b60fa460362000465577311ddd3d147e5b83d01cee7070027092397d636586000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555073f4766552d15ae4d256ad41b6cf2933482b0680dc600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555062000d1c565b6201388146036200051f57730715a7794a1dc8e42615f059dd6e406a6594651a6000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555073d0d5e3db44de05e9f294bb0a3beeaf030de24ada600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555062000d1b565b60894603620005d75773f9680d99d6c9589e2a93a78a04a279e5092059456000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555073ab594600376ec9fd91f8e885dadf0ce036862de0600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555062000d1a565b608946036200068f57739ef1b8c0e4f7dc8bf5719ea496883dc6401d5b2e6000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550730567f2323251f0aab15c8dfb1967e4e8a7d42aee600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555062000d19565b60894603620007475773143db3ceefbdfe5631add3e50f7614b6ba708ba76000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550732514895c72f50d8bd4b4f9b1110f0d6bd2c97526600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555062000d18565b60644603620007ff5773a767f745331d267c7751297d982b050c939856276000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555073678df3415fc31947da4324ec63212874be5a82f8600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555062000d17565b61a4b14603620008b85773b1f70a229fe7cced0428245db8b1f6c48c7ea82a6000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555073b1f70a229fe7cced0428245db8b1f6c48c7ea82a600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555062000d16565b62066eed460362000972577362cae0fa2da220f43a51f86db2edb36dca9a5a086000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507362cae0fa2da220f43a51f86db2edb36dca9a5a08600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555062000d15565b600a460362000a2a577313e3ee699d1909e989722e753853ae30b17e08c56000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507313e3ee699d1909e989722e753853ae30b17e08c5600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555062000d14565b62066eed460362000ae4577357241a37733983f97c4ab06448f244a1e0ca0ba86000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507357241a37733983f97c4ab06448f244a1e0ca0ba8600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555062000d13565b610505460362000b9d5773c3cf399566220dc5ed6c8cfbf8247214af103c726000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550733f8bfbdc1e79777511c00ad8591cef888c2113c1600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555062000d12565b610504460362000c5657739ce2388a1696e22f870341c3fc1e89710c7569b56000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550734497b606be93e773bba5eacfcb2ac5e2214220eb600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555062000d11565b610440460362000d0f57733bbe70e2f96c87aece7f67a2b0178052f62e37fe6000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555073d4a5bb03b5d66d9bf81507379302ac2c2dfdfa6d600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555062000d10565b5b5b5b5b5b5b5b5b5b5b5b5b5b5b5b5b5b5b6109958062000d316000396000f3fe608060405234801561001057600080fd5b50600436106100625760003560e01c8063414641df146100675780634a2ad99f1461008557806396722fe5146100b55780639a18c795146100d3578063e9f38fc5146100f1578063f2e9bd7a14610121575b600080fd5b61006f61013f565b60405161007c9190610514565b60405180910390f35b61009f600480360381019061009a91906105c8565b6101f9565b6040516100ac9190610623565b60405180910390f35b6100bd61020d565b6040516100ca9190610514565b60405180910390f35b6100db6102c7565b6040516100e89190610514565b60405180910390f35b61010b600480360381019061010691906105c8565b610376565b6040516101189190610623565b60405180910390f35b61012961038a565b6040516101369190610514565b60405180910390f35b600080600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a060405180830381865afa1580156101af573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101d391906106c1565b505050915050600454600a6101e8919061089e565b816101f391906108e9565b91505090565b6000610205838361043b565b905092915050565b600080600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a060405180830381865afa15801561027d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102a191906106c1565b505050915050600554600a6102b6919061089e565b816102c191906108e9565b91505090565b60008060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a060405180830381865afa158015610335573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061035991906106c1565b5050509150506402540be4008161037091906108e9565b91505090565b6000610382838361049b565b905092915050565b600080600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a060405180830381865afa1580156103fa573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061041e91906106c1565b5050509150506402540be4008161043591906108e9565b91505090565b600082600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555081601261048b919061092b565b6004819055506001905092915050565b600082600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508160126104eb919061092b565b6005819055506001905092915050565b6000819050919050565b61050e816104fb565b82525050565b60006020820190506105296000830184610505565b92915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061055f82610534565b9050919050565b61056f81610554565b811461057a57600080fd5b50565b60008135905061058c81610566565b92915050565b6000819050919050565b6105a581610592565b81146105b057600080fd5b50565b6000813590506105c28161059c565b92915050565b600080604083850312156105df576105de61052f565b5b60006105ed8582860161057d565b92505060206105fe858286016105b3565b9150509250929050565b60008115159050919050565b61061d81610608565b82525050565b60006020820190506106386000830184610614565b92915050565b600069ffffffffffffffffffff82169050919050565b61065d8161063e565b811461066857600080fd5b50565b60008151905061067a81610654565b92915050565b610689816104fb565b811461069457600080fd5b50565b6000815190506106a681610680565b92915050565b6000815190506106bb8161059c565b92915050565b600080600080600060a086880312156106dd576106dc61052f565b5b60006106eb8882890161066b565b95505060206106fc88828901610697565b945050604061070d888289016106ac565b935050606061071e888289016106ac565b925050608061072f8882890161066b565b9150509295509295909350565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60008160011c9050919050565b6000808291508390505b60018511156107c25780860481111561079e5761079d61073c565b5b60018516156107ad5780820291505b80810290506107bb8561076b565b9450610782565b94509492505050565b6000826107db5760019050610897565b816107e95760009050610897565b81600181146107ff576002811461080957610838565b6001915050610897565b60ff84111561081b5761081a61073c565b5b8360020a9150848211156108325761083161073c565b5b50610897565b5060208310610133831016604e8410600b841016171561086d5782820a9050838111156108685761086761073c565b5b610897565b61087a8484846001610778565b925090508184048111156108915761089061073c565b5b81810290505b9392505050565b60006108a982610592565b91506108b483610592565b92506108e17fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff84846107cb565b905092915050565b60006108f482610592565b91506108ff83610592565b925082820261090d81610592565b915082820484148315176109245761092361073c565b5b5092915050565b600061093682610592565b915061094183610592565b92508282039050818111156109595761095861073c565b5b9291505056fea26469706673582212202d2feafd671c453c8fc29222af2dc8ae9dcd038175827e44dd4d3dce96be94c264736f6c63430008110033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100625760003560e01c8063414641df146100675780634a2ad99f1461008557806396722fe5146100b55780639a18c795146100d3578063e9f38fc5146100f1578063f2e9bd7a14610121575b600080fd5b61006f61013f565b60405161007c9190610514565b60405180910390f35b61009f600480360381019061009a91906105c8565b6101f9565b6040516100ac9190610623565b60405180910390f35b6100bd61020d565b6040516100ca9190610514565b60405180910390f35b6100db6102c7565b6040516100e89190610514565b60405180910390f35b61010b600480360381019061010691906105c8565b610376565b6040516101189190610623565b60405180910390f35b61012961038a565b6040516101369190610514565b60405180910390f35b600080600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a060405180830381865afa1580156101af573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101d391906106c1565b505050915050600454600a6101e8919061089e565b816101f391906108e9565b91505090565b6000610205838361043b565b905092915050565b600080600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a060405180830381865afa15801561027d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102a191906106c1565b505050915050600554600a6102b6919061089e565b816102c191906108e9565b91505090565b60008060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a060405180830381865afa158015610335573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061035991906106c1565b5050509150506402540be4008161037091906108e9565b91505090565b6000610382838361049b565b905092915050565b600080600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a060405180830381865afa1580156103fa573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061041e91906106c1565b5050509150506402540be4008161043591906108e9565b91505090565b600082600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555081601261048b919061092b565b6004819055506001905092915050565b600082600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508160126104eb919061092b565b6005819055506001905092915050565b6000819050919050565b61050e816104fb565b82525050565b60006020820190506105296000830184610505565b92915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061055f82610534565b9050919050565b61056f81610554565b811461057a57600080fd5b50565b60008135905061058c81610566565b92915050565b6000819050919050565b6105a581610592565b81146105b057600080fd5b50565b6000813590506105c28161059c565b92915050565b600080604083850312156105df576105de61052f565b5b60006105ed8582860161057d565b92505060206105fe858286016105b3565b9150509250929050565b60008115159050919050565b61061d81610608565b82525050565b60006020820190506106386000830184610614565b92915050565b600069ffffffffffffffffffff82169050919050565b61065d8161063e565b811461066857600080fd5b50565b60008151905061067a81610654565b92915050565b610689816104fb565b811461069457600080fd5b50565b6000815190506106a681610680565b92915050565b6000815190506106bb8161059c565b92915050565b600080600080600060a086880312156106dd576106dc61052f565b5b60006106eb8882890161066b565b95505060206106fc88828901610697565b945050604061070d888289016106ac565b935050606061071e888289016106ac565b925050608061072f8882890161066b565b9150509295509295909350565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60008160011c9050919050565b6000808291508390505b60018511156107c25780860481111561079e5761079d61073c565b5b60018516156107ad5780820291505b80810290506107bb8561076b565b9450610782565b94509492505050565b6000826107db5760019050610897565b816107e95760009050610897565b81600181146107ff576002811461080957610838565b6001915050610897565b60ff84111561081b5761081a61073c565b5b8360020a9150848211156108325761083161073c565b5b50610897565b5060208310610133831016604e8410600b841016171561086d5782820a9050838111156108685761086761073c565b5b610897565b61087a8484846001610778565b925090508184048111156108915761089061073c565b5b81810290505b9392505050565b60006108a982610592565b91506108b483610592565b92506108e17fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff84846107cb565b905092915050565b60006108f482610592565b91506108ff83610592565b925082820261090d81610592565b915082820484148315176109245761092361073c565b5b5092915050565b600061093682610592565b915061094183610592565b92508282039050818111156109595761095861073c565b5b9291505056fea26469706673582212202d2feafd671c453c8fc29222af2dc8ae9dcd038175827e44dd4d3dce96be94c264736f6c63430008110033",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:7445:55",
        "statements": [
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "51:32:55",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "61:16:55",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "72:5:55"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "61:7:55"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_int256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "33:5:55",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "43:7:55",
                "type": ""
              }
            ],
            "src": "7:76:55"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "152:52:55",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "169:3:55"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "191:5:55"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_int256",
                          "nodeType": "YulIdentifier",
                          "src": "174:16:55"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "174:23:55"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "162:6:55"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "162:36:55"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "162:36:55"
                }
              ]
            },
            "name": "abi_encode_t_int256_to_t_int256_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "140:5:55",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "147:3:55",
                "type": ""
              }
            ],
            "src": "89:115:55"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "306:122:55",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "316:26:55",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "328:9:55"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "339:2:55",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "324:3:55"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "324:18:55"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "316:4:55"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "394:6:55"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "407:9:55"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "418:1:55",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "403:3:55"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "403:17:55"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_int256_to_t_int256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "352:41:55"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "352:69:55"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "352:69:55"
                }
              ]
            },
            "name": "abi_encode_tuple_t_int256__to_t_int256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "278:9:55",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "290:6:55",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "301:4:55",
                "type": ""
              }
            ],
            "src": "210:218:55"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "474:35:55",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "484:19:55",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "500:2:55",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "494:5:55"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "494:9:55"
                  },
                  "variableNames": [
                    {
                      "name": "memPtr",
                      "nodeType": "YulIdentifier",
                      "src": "484:6:55"
                    }
                  ]
                }
              ]
            },
            "name": "allocate_unbounded",
            "nodeType": "YulFunctionDefinition",
            "returnVariables": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "467:6:55",
                "type": ""
              }
            ],
            "src": "434:75:55"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "604:28:55",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "621:1:55",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "624:1:55",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "614:6:55"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "614:12:55"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "614:12:55"
                }
              ]
            },
            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
            "nodeType": "YulFunctionDefinition",
            "src": "515:117:55"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "727:28:55",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "744:1:55",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "747:1:55",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "737:6:55"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "737:12:55"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "737:12:55"
                }
              ]
            },
            "name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
            "nodeType": "YulFunctionDefinition",
            "src": "638:117:55"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "806:81:55",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "816:65:55",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "831:5:55"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "838:42:55",
                        "type": "",
                        "value": "0xffffffffffffffffffffffffffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "827:3:55"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "827:54:55"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "816:7:55"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint160",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "788:5:55",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "798:7:55",
                "type": ""
              }
            ],
            "src": "761:126:55"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "938:51:55",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "948:35:55",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "977:5:55"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "959:17:55"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "959:24:55"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "948:7:55"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "920:5:55",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "930:7:55",
                "type": ""
              }
            ],
            "src": "893:96:55"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1038:79:55",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1095:16:55",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1104:1:55",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1107:1:55",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1097:6:55"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1097:12:55"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1097:12:55"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "1061:5:55"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "1086:5:55"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_address",
                              "nodeType": "YulIdentifier",
                              "src": "1068:17:55"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1068:24:55"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "1058:2:55"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1058:35:55"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "1051:6:55"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1051:43:55"
                  },
                  "nodeType": "YulIf",
                  "src": "1048:63:55"
                }
              ]
            },
            "name": "validator_revert_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1031:5:55",
                "type": ""
              }
            ],
            "src": "995:122:55"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1175:87:55",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1185:29:55",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "1207:6:55"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1194:12:55"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1194:20:55"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "1185:5:55"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "1250:5:55"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "1223:26:55"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1223:33:55"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1223:33:55"
                }
              ]
            },
            "name": "abi_decode_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "1153:6:55",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "1161:3:55",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1169:5:55",
                "type": ""
              }
            ],
            "src": "1123:139:55"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1313:32:55",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1323:16:55",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "1334:5:55"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "1323:7:55"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1295:5:55",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "1305:7:55",
                "type": ""
              }
            ],
            "src": "1268:77:55"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1394:79:55",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1451:16:55",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1460:1:55",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1463:1:55",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1453:6:55"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1453:12:55"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1453:12:55"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "1417:5:55"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "1442:5:55"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_uint256",
                              "nodeType": "YulIdentifier",
                              "src": "1424:17:55"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1424:24:55"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "1414:2:55"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1414:35:55"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "1407:6:55"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1407:43:55"
                  },
                  "nodeType": "YulIf",
                  "src": "1404:63:55"
                }
              ]
            },
            "name": "validator_revert_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1387:5:55",
                "type": ""
              }
            ],
            "src": "1351:122:55"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1531:87:55",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1541:29:55",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "1563:6:55"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1550:12:55"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1550:20:55"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "1541:5:55"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "1606:5:55"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "1579:26:55"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1579:33:55"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1579:33:55"
                }
              ]
            },
            "name": "abi_decode_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "1509:6:55",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "1517:3:55",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1525:5:55",
                "type": ""
              }
            ],
            "src": "1479:139:55"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1707:391:55",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1753:83:55",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                            "nodeType": "YulIdentifier",
                            "src": "1755:77:55"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1755:79:55"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1755:79:55"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1728:7:55"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1737:9:55"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1724:3:55"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1724:23:55"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1749:2:55",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1720:3:55"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1720:32:55"
                  },
                  "nodeType": "YulIf",
                  "src": "1717:119:55"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "1846:117:55",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "1861:15:55",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1875:1:55",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "1865:6:55",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "1890:63:55",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1925:9:55"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "1936:6:55"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1921:3:55"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1921:22:55"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1945:7:55"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "1900:20:55"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1900:53:55"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "1890:6:55"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "1973:118:55",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "1988:16:55",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2002:2:55",
                        "type": "",
                        "value": "32"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "1992:6:55",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "2018:63:55",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "2053:9:55"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "2064:6:55"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2049:3:55"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2049:22:55"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2073:7:55"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "2028:20:55"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2028:53:55"
                      },
                      "variableNames": [
                        {
                          "name": "value1",
                          "nodeType": "YulIdentifier",
                          "src": "2018:6:55"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1669:9:55",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1680:7:55",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1692:6:55",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "1700:6:55",
                "type": ""
              }
            ],
            "src": "1624:474:55"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2146:48:55",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2156:32:55",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "2181:5:55"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "2174:6:55"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2174:13:55"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "2167:6:55"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2167:21:55"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "2156:7:55"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_bool",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "2128:5:55",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "2138:7:55",
                "type": ""
              }
            ],
            "src": "2104:90:55"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2259:50:55",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "2276:3:55"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "2296:5:55"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_bool",
                          "nodeType": "YulIdentifier",
                          "src": "2281:14:55"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2281:21:55"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2269:6:55"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2269:34:55"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2269:34:55"
                }
              ]
            },
            "name": "abi_encode_t_bool_to_t_bool_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "2247:5:55",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "2254:3:55",
                "type": ""
              }
            ],
            "src": "2200:109:55"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2407:118:55",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2417:26:55",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2429:9:55"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2440:2:55",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2425:3:55"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2425:18:55"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2417:4:55"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "2491:6:55"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2504:9:55"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2515:1:55",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2500:3:55"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2500:17:55"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_bool_to_t_bool_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "2453:37:55"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2453:65:55"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2453:65:55"
                }
              ]
            },
            "name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2379:9:55",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2391:6:55",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2402:4:55",
                "type": ""
              }
            ],
            "src": "2315:210:55"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2575:61:55",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2585:45:55",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "2600:5:55"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2607:22:55",
                        "type": "",
                        "value": "0xffffffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "2596:3:55"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2596:34:55"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "2585:7:55"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint80",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "2557:5:55",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "2567:7:55",
                "type": ""
              }
            ],
            "src": "2531:105:55"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2684:78:55",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2740:16:55",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2749:1:55",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2752:1:55",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2742:6:55"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2742:12:55"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2742:12:55"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "2707:5:55"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "2731:5:55"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_uint80",
                              "nodeType": "YulIdentifier",
                              "src": "2714:16:55"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2714:23:55"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "2704:2:55"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2704:34:55"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "2697:6:55"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2697:42:55"
                  },
                  "nodeType": "YulIf",
                  "src": "2694:62:55"
                }
              ]
            },
            "name": "validator_revert_t_uint80",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "2677:5:55",
                "type": ""
              }
            ],
            "src": "2642:120:55"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2830:79:55",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2840:22:55",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "2855:6:55"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "2849:5:55"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2849:13:55"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "2840:5:55"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "2897:5:55"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_uint80",
                      "nodeType": "YulIdentifier",
                      "src": "2871:25:55"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2871:32:55"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2871:32:55"
                }
              ]
            },
            "name": "abi_decode_t_uint80_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "2808:6:55",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "2816:3:55",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "2824:5:55",
                "type": ""
              }
            ],
            "src": "2768:141:55"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2957:78:55",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3013:16:55",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3022:1:55",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3025:1:55",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "3015:6:55"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3015:12:55"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3015:12:55"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "2980:5:55"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "3004:5:55"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_int256",
                              "nodeType": "YulIdentifier",
                              "src": "2987:16:55"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2987:23:55"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "2977:2:55"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2977:34:55"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "2970:6:55"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2970:42:55"
                  },
                  "nodeType": "YulIf",
                  "src": "2967:62:55"
                }
              ]
            },
            "name": "validator_revert_t_int256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "2950:5:55",
                "type": ""
              }
            ],
            "src": "2915:120:55"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3103:79:55",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3113:22:55",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "3128:6:55"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "3122:5:55"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3122:13:55"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "3113:5:55"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "3170:5:55"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_int256",
                      "nodeType": "YulIdentifier",
                      "src": "3144:25:55"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3144:32:55"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3144:32:55"
                }
              ]
            },
            "name": "abi_decode_t_int256_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "3081:6:55",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "3089:3:55",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "3097:5:55",
                "type": ""
              }
            ],
            "src": "3041:141:55"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3251:80:55",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3261:22:55",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "3276:6:55"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "3270:5:55"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3270:13:55"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "3261:5:55"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "3319:5:55"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "3292:26:55"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3292:33:55"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3292:33:55"
                }
              ]
            },
            "name": "abi_decode_t_uint256_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "3229:6:55",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "3237:3:55",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "3245:5:55",
                "type": ""
              }
            ],
            "src": "3188:143:55"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3479:829:55",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3526:83:55",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                            "nodeType": "YulIdentifier",
                            "src": "3528:77:55"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3528:79:55"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3528:79:55"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "3500:7:55"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3509:9:55"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "3496:3:55"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3496:23:55"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3521:3:55",
                        "type": "",
                        "value": "160"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "3492:3:55"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3492:33:55"
                  },
                  "nodeType": "YulIf",
                  "src": "3489:120:55"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "3619:127:55",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "3634:15:55",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3648:1:55",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "3638:6:55",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "3663:73:55",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "3708:9:55"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "3719:6:55"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "3704:3:55"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3704:22:55"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "3728:7:55"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint80_fromMemory",
                          "nodeType": "YulIdentifier",
                          "src": "3673:30:55"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3673:63:55"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "3663:6:55"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "3756:128:55",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "3771:16:55",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3785:2:55",
                        "type": "",
                        "value": "32"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "3775:6:55",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "3801:73:55",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "3846:9:55"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "3857:6:55"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "3842:3:55"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3842:22:55"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "3866:7:55"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_int256_fromMemory",
                          "nodeType": "YulIdentifier",
                          "src": "3811:30:55"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3811:63:55"
                      },
                      "variableNames": [
                        {
                          "name": "value1",
                          "nodeType": "YulIdentifier",
                          "src": "3801:6:55"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "3894:129:55",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "3909:16:55",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3923:2:55",
                        "type": "",
                        "value": "64"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "3913:6:55",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "3939:74:55",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "3985:9:55"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "3996:6:55"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "3981:3:55"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3981:22:55"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "4005:7:55"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint256_fromMemory",
                          "nodeType": "YulIdentifier",
                          "src": "3949:31:55"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3949:64:55"
                      },
                      "variableNames": [
                        {
                          "name": "value2",
                          "nodeType": "YulIdentifier",
                          "src": "3939:6:55"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "4033:129:55",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "4048:16:55",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4062:2:55",
                        "type": "",
                        "value": "96"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "4052:6:55",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "4078:74:55",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "4124:9:55"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "4135:6:55"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "4120:3:55"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4120:22:55"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "4144:7:55"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint256_fromMemory",
                          "nodeType": "YulIdentifier",
                          "src": "4088:31:55"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4088:64:55"
                      },
                      "variableNames": [
                        {
                          "name": "value3",
                          "nodeType": "YulIdentifier",
                          "src": "4078:6:55"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "4172:129:55",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "4187:17:55",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4201:3:55",
                        "type": "",
                        "value": "128"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "4191:6:55",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "4218:73:55",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "4263:9:55"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "4274:6:55"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "4259:3:55"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4259:22:55"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "4283:7:55"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint80_fromMemory",
                          "nodeType": "YulIdentifier",
                          "src": "4228:30:55"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4228:63:55"
                      },
                      "variableNames": [
                        {
                          "name": "value4",
                          "nodeType": "YulIdentifier",
                          "src": "4218:6:55"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint80t_int256t_uint256t_uint256t_uint80_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3417:9:55",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "3428:7:55",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3440:6:55",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "3448:6:55",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "3456:6:55",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "3464:6:55",
                "type": ""
              },
              {
                "name": "value4",
                "nodeType": "YulTypedName",
                "src": "3472:6:55",
                "type": ""
              }
            ],
            "src": "3337:971:55"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4342:152:55",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4359:1:55",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4362:77:55",
                        "type": "",
                        "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4352:6:55"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4352:88:55"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4352:88:55"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4456:1:55",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4459:4:55",
                        "type": "",
                        "value": "0x11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4449:6:55"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4449:15:55"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4449:15:55"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4480:1:55",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4483:4:55",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "4473:6:55"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4473:15:55"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4473:15:55"
                }
              ]
            },
            "name": "panic_error_0x11",
            "nodeType": "YulFunctionDefinition",
            "src": "4314:180:55"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4551:51:55",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "4561:34:55",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4586:1:55",
                        "type": "",
                        "value": "1"
                      },
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "4589:5:55"
                      }
                    ],
                    "functionName": {
                      "name": "shr",
                      "nodeType": "YulIdentifier",
                      "src": "4582:3:55"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4582:13:55"
                  },
                  "variableNames": [
                    {
                      "name": "newValue",
                      "nodeType": "YulIdentifier",
                      "src": "4561:8:55"
                    }
                  ]
                }
              ]
            },
            "name": "shift_right_1_unsigned",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "4532:5:55",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "newValue",
                "nodeType": "YulTypedName",
                "src": "4542:8:55",
                "type": ""
              }
            ],
            "src": "4500:102:55"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4681:775:55",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "4691:15:55",
                  "value": {
                    "name": "_power",
                    "nodeType": "YulIdentifier",
                    "src": "4700:6:55"
                  },
                  "variableNames": [
                    {
                      "name": "power",
                      "nodeType": "YulIdentifier",
                      "src": "4691:5:55"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4715:14:55",
                  "value": {
                    "name": "_base",
                    "nodeType": "YulIdentifier",
                    "src": "4724:5:55"
                  },
                  "variableNames": [
                    {
                      "name": "base",
                      "nodeType": "YulIdentifier",
                      "src": "4715:4:55"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "4773:677:55",
                    "statements": [
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "4861:22:55",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [],
                                "functionName": {
                                  "name": "panic_error_0x11",
                                  "nodeType": "YulIdentifier",
                                  "src": "4863:16:55"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4863:18:55"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "4863:18:55"
                            }
                          ]
                        },
                        "condition": {
                          "arguments": [
                            {
                              "name": "base",
                              "nodeType": "YulIdentifier",
                              "src": "4839:4:55"
                            },
                            {
                              "arguments": [
                                {
                                  "name": "max",
                                  "nodeType": "YulIdentifier",
                                  "src": "4849:3:55"
                                },
                                {
                                  "name": "base",
                                  "nodeType": "YulIdentifier",
                                  "src": "4854:4:55"
                                }
                              ],
                              "functionName": {
                                "name": "div",
                                "nodeType": "YulIdentifier",
                                "src": "4845:3:55"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "4845:14:55"
                            }
                          ],
                          "functionName": {
                            "name": "gt",
                            "nodeType": "YulIdentifier",
                            "src": "4836:2:55"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4836:24:55"
                        },
                        "nodeType": "YulIf",
                        "src": "4833:50:55"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "4928:419:55",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "5308:25:55",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "power",
                                    "nodeType": "YulIdentifier",
                                    "src": "5321:5:55"
                                  },
                                  {
                                    "name": "base",
                                    "nodeType": "YulIdentifier",
                                    "src": "5328:4:55"
                                  }
                                ],
                                "functionName": {
                                  "name": "mul",
                                  "nodeType": "YulIdentifier",
                                  "src": "5317:3:55"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5317:16:55"
                              },
                              "variableNames": [
                                {
                                  "name": "power",
                                  "nodeType": "YulIdentifier",
                                  "src": "5308:5:55"
                                }
                              ]
                            }
                          ]
                        },
                        "condition": {
                          "arguments": [
                            {
                              "name": "exponent",
                              "nodeType": "YulIdentifier",
                              "src": "4903:8:55"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4913:1:55",
                              "type": "",
                              "value": "1"
                            }
                          ],
                          "functionName": {
                            "name": "and",
                            "nodeType": "YulIdentifier",
                            "src": "4899:3:55"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4899:16:55"
                        },
                        "nodeType": "YulIf",
                        "src": "4896:451:55"
                      },
                      {
                        "nodeType": "YulAssignment",
                        "src": "5360:23:55",
                        "value": {
                          "arguments": [
                            {
                              "name": "base",
                              "nodeType": "YulIdentifier",
                              "src": "5372:4:55"
                            },
                            {
                              "name": "base",
                              "nodeType": "YulIdentifier",
                              "src": "5378:4:55"
                            }
                          ],
                          "functionName": {
                            "name": "mul",
                            "nodeType": "YulIdentifier",
                            "src": "5368:3:55"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "5368:15:55"
                        },
                        "variableNames": [
                          {
                            "name": "base",
                            "nodeType": "YulIdentifier",
                            "src": "5360:4:55"
                          }
                        ]
                      },
                      {
                        "nodeType": "YulAssignment",
                        "src": "5396:44:55",
                        "value": {
                          "arguments": [
                            {
                              "name": "exponent",
                              "nodeType": "YulIdentifier",
                              "src": "5431:8:55"
                            }
                          ],
                          "functionName": {
                            "name": "shift_right_1_unsigned",
                            "nodeType": "YulIdentifier",
                            "src": "5408:22:55"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "5408:32:55"
                        },
                        "variableNames": [
                          {
                            "name": "exponent",
                            "nodeType": "YulIdentifier",
                            "src": "5396:8:55"
                          }
                        ]
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "exponent",
                        "nodeType": "YulIdentifier",
                        "src": "4749:8:55"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4759:1:55",
                        "type": "",
                        "value": "1"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "4746:2:55"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4746:15:55"
                  },
                  "nodeType": "YulForLoop",
                  "post": {
                    "nodeType": "YulBlock",
                    "src": "4762:2:55",
                    "statements": []
                  },
                  "pre": {
                    "nodeType": "YulBlock",
                    "src": "4742:3:55",
                    "statements": []
                  },
                  "src": "4738:712:55"
                }
              ]
            },
            "name": "checked_exp_helper",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "_power",
                "nodeType": "YulTypedName",
                "src": "4636:6:55",
                "type": ""
              },
              {
                "name": "_base",
                "nodeType": "YulTypedName",
                "src": "4644:5:55",
                "type": ""
              },
              {
                "name": "exponent",
                "nodeType": "YulTypedName",
                "src": "4651:8:55",
                "type": ""
              },
              {
                "name": "max",
                "nodeType": "YulTypedName",
                "src": "4661:3:55",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "power",
                "nodeType": "YulTypedName",
                "src": "4669:5:55",
                "type": ""
              },
              {
                "name": "base",
                "nodeType": "YulTypedName",
                "src": "4676:4:55",
                "type": ""
              }
            ],
            "src": "4608:848:55"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5522:1013:55",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "5717:20:55",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "5719:10:55",
                        "value": {
                          "kind": "number",
                          "nodeType": "YulLiteral",
                          "src": "5728:1:55",
                          "type": "",
                          "value": "1"
                        },
                        "variableNames": [
                          {
                            "name": "power",
                            "nodeType": "YulIdentifier",
                            "src": "5719:5:55"
                          }
                        ]
                      },
                      {
                        "nodeType": "YulLeave",
                        "src": "5730:5:55"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "exponent",
                        "nodeType": "YulIdentifier",
                        "src": "5707:8:55"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "5700:6:55"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5700:16:55"
                  },
                  "nodeType": "YulIf",
                  "src": "5697:40:55"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "5762:20:55",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "5764:10:55",
                        "value": {
                          "kind": "number",
                          "nodeType": "YulLiteral",
                          "src": "5773:1:55",
                          "type": "",
                          "value": "0"
                        },
                        "variableNames": [
                          {
                            "name": "power",
                            "nodeType": "YulIdentifier",
                            "src": "5764:5:55"
                          }
                        ]
                      },
                      {
                        "nodeType": "YulLeave",
                        "src": "5775:5:55"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "base",
                        "nodeType": "YulIdentifier",
                        "src": "5756:4:55"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "5749:6:55"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5749:12:55"
                  },
                  "nodeType": "YulIf",
                  "src": "5746:36:55"
                },
                {
                  "cases": [
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "5892:20:55",
                        "statements": [
                          {
                            "nodeType": "YulAssignment",
                            "src": "5894:10:55",
                            "value": {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "5903:1:55",
                              "type": "",
                              "value": "1"
                            },
                            "variableNames": [
                              {
                                "name": "power",
                                "nodeType": "YulIdentifier",
                                "src": "5894:5:55"
                              }
                            ]
                          },
                          {
                            "nodeType": "YulLeave",
                            "src": "5905:5:55"
                          }
                        ]
                      },
                      "nodeType": "YulCase",
                      "src": "5885:27:55",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5890:1:55",
                        "type": "",
                        "value": "1"
                      }
                    },
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "5936:176:55",
                        "statements": [
                          {
                            "body": {
                              "nodeType": "YulBlock",
                              "src": "5971:22:55",
                              "statements": [
                                {
                                  "expression": {
                                    "arguments": [],
                                    "functionName": {
                                      "name": "panic_error_0x11",
                                      "nodeType": "YulIdentifier",
                                      "src": "5973:16:55"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "5973:18:55"
                                  },
                                  "nodeType": "YulExpressionStatement",
                                  "src": "5973:18:55"
                                }
                              ]
                            },
                            "condition": {
                              "arguments": [
                                {
                                  "name": "exponent",
                                  "nodeType": "YulIdentifier",
                                  "src": "5956:8:55"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "5966:3:55",
                                  "type": "",
                                  "value": "255"
                                }
                              ],
                              "functionName": {
                                "name": "gt",
                                "nodeType": "YulIdentifier",
                                "src": "5953:2:55"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "5953:17:55"
                            },
                            "nodeType": "YulIf",
                            "src": "5950:43:55"
                          },
                          {
                            "nodeType": "YulAssignment",
                            "src": "6006:25:55",
                            "value": {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "6019:1:55",
                                  "type": "",
                                  "value": "2"
                                },
                                {
                                  "name": "exponent",
                                  "nodeType": "YulIdentifier",
                                  "src": "6022:8:55"
                                }
                              ],
                              "functionName": {
                                "name": "exp",
                                "nodeType": "YulIdentifier",
                                "src": "6015:3:55"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "6015:16:55"
                            },
                            "variableNames": [
                              {
                                "name": "power",
                                "nodeType": "YulIdentifier",
                                "src": "6006:5:55"
                              }
                            ]
                          },
                          {
                            "body": {
                              "nodeType": "YulBlock",
                              "src": "6062:22:55",
                              "statements": [
                                {
                                  "expression": {
                                    "arguments": [],
                                    "functionName": {
                                      "name": "panic_error_0x11",
                                      "nodeType": "YulIdentifier",
                                      "src": "6064:16:55"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "6064:18:55"
                                  },
                                  "nodeType": "YulExpressionStatement",
                                  "src": "6064:18:55"
                                }
                              ]
                            },
                            "condition": {
                              "arguments": [
                                {
                                  "name": "power",
                                  "nodeType": "YulIdentifier",
                                  "src": "6050:5:55"
                                },
                                {
                                  "name": "max",
                                  "nodeType": "YulIdentifier",
                                  "src": "6057:3:55"
                                }
                              ],
                              "functionName": {
                                "name": "gt",
                                "nodeType": "YulIdentifier",
                                "src": "6047:2:55"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "6047:14:55"
                            },
                            "nodeType": "YulIf",
                            "src": "6044:40:55"
                          },
                          {
                            "nodeType": "YulLeave",
                            "src": "6097:5:55"
                          }
                        ]
                      },
                      "nodeType": "YulCase",
                      "src": "5921:191:55",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5926:1:55",
                        "type": "",
                        "value": "2"
                      }
                    }
                  ],
                  "expression": {
                    "name": "base",
                    "nodeType": "YulIdentifier",
                    "src": "5842:4:55"
                  },
                  "nodeType": "YulSwitch",
                  "src": "5835:277:55"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "6244:123:55",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "6258:28:55",
                        "value": {
                          "arguments": [
                            {
                              "name": "base",
                              "nodeType": "YulIdentifier",
                              "src": "6271:4:55"
                            },
                            {
                              "name": "exponent",
                              "nodeType": "YulIdentifier",
                              "src": "6277:8:55"
                            }
                          ],
                          "functionName": {
                            "name": "exp",
                            "nodeType": "YulIdentifier",
                            "src": "6267:3:55"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "6267:19:55"
                        },
                        "variableNames": [
                          {
                            "name": "power",
                            "nodeType": "YulIdentifier",
                            "src": "6258:5:55"
                          }
                        ]
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "6317:22:55",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [],
                                "functionName": {
                                  "name": "panic_error_0x11",
                                  "nodeType": "YulIdentifier",
                                  "src": "6319:16:55"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6319:18:55"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "6319:18:55"
                            }
                          ]
                        },
                        "condition": {
                          "arguments": [
                            {
                              "name": "power",
                              "nodeType": "YulIdentifier",
                              "src": "6305:5:55"
                            },
                            {
                              "name": "max",
                              "nodeType": "YulIdentifier",
                              "src": "6312:3:55"
                            }
                          ],
                          "functionName": {
                            "name": "gt",
                            "nodeType": "YulIdentifier",
                            "src": "6302:2:55"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "6302:14:55"
                        },
                        "nodeType": "YulIf",
                        "src": "6299:40:55"
                      },
                      {
                        "nodeType": "YulLeave",
                        "src": "6352:5:55"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "base",
                                "nodeType": "YulIdentifier",
                                "src": "6147:4:55"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "6153:2:55",
                                "type": "",
                                "value": "11"
                              }
                            ],
                            "functionName": {
                              "name": "lt",
                              "nodeType": "YulIdentifier",
                              "src": "6144:2:55"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "6144:12:55"
                          },
                          {
                            "arguments": [
                              {
                                "name": "exponent",
                                "nodeType": "YulIdentifier",
                                "src": "6161:8:55"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "6171:2:55",
                                "type": "",
                                "value": "78"
                              }
                            ],
                            "functionName": {
                              "name": "lt",
                              "nodeType": "YulIdentifier",
                              "src": "6158:2:55"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "6158:16:55"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "6140:3:55"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6140:35:55"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "base",
                                "nodeType": "YulIdentifier",
                                "src": "6196:4:55"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "6202:3:55",
                                "type": "",
                                "value": "307"
                              }
                            ],
                            "functionName": {
                              "name": "lt",
                              "nodeType": "YulIdentifier",
                              "src": "6193:2:55"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "6193:13:55"
                          },
                          {
                            "arguments": [
                              {
                                "name": "exponent",
                                "nodeType": "YulIdentifier",
                                "src": "6211:8:55"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "6221:2:55",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "lt",
                              "nodeType": "YulIdentifier",
                              "src": "6208:2:55"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "6208:16:55"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "6189:3:55"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6189:36:55"
                      }
                    ],
                    "functionName": {
                      "name": "or",
                      "nodeType": "YulIdentifier",
                      "src": "6124:2:55"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6124:111:55"
                  },
                  "nodeType": "YulIf",
                  "src": "6121:246:55"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6377:57:55",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6411:1:55",
                        "type": "",
                        "value": "1"
                      },
                      {
                        "name": "base",
                        "nodeType": "YulIdentifier",
                        "src": "6414:4:55"
                      },
                      {
                        "name": "exponent",
                        "nodeType": "YulIdentifier",
                        "src": "6420:8:55"
                      },
                      {
                        "name": "max",
                        "nodeType": "YulIdentifier",
                        "src": "6430:3:55"
                      }
                    ],
                    "functionName": {
                      "name": "checked_exp_helper",
                      "nodeType": "YulIdentifier",
                      "src": "6392:18:55"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6392:42:55"
                  },
                  "variableNames": [
                    {
                      "name": "power",
                      "nodeType": "YulIdentifier",
                      "src": "6377:5:55"
                    },
                    {
                      "name": "base",
                      "nodeType": "YulIdentifier",
                      "src": "6384:4:55"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "6473:22:55",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "6475:16:55"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "6475:18:55"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "6475:18:55"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "power",
                        "nodeType": "YulIdentifier",
                        "src": "6450:5:55"
                      },
                      {
                        "arguments": [
                          {
                            "name": "max",
                            "nodeType": "YulIdentifier",
                            "src": "6461:3:55"
                          },
                          {
                            "name": "base",
                            "nodeType": "YulIdentifier",
                            "src": "6466:4:55"
                          }
                        ],
                        "functionName": {
                          "name": "div",
                          "nodeType": "YulIdentifier",
                          "src": "6457:3:55"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6457:14:55"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "6447:2:55"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6447:25:55"
                  },
                  "nodeType": "YulIf",
                  "src": "6444:51:55"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6504:25:55",
                  "value": {
                    "arguments": [
                      {
                        "name": "power",
                        "nodeType": "YulIdentifier",
                        "src": "6517:5:55"
                      },
                      {
                        "name": "base",
                        "nodeType": "YulIdentifier",
                        "src": "6524:4:55"
                      }
                    ],
                    "functionName": {
                      "name": "mul",
                      "nodeType": "YulIdentifier",
                      "src": "6513:3:55"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6513:16:55"
                  },
                  "variableNames": [
                    {
                      "name": "power",
                      "nodeType": "YulIdentifier",
                      "src": "6504:5:55"
                    }
                  ]
                }
              ]
            },
            "name": "checked_exp_unsigned",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "base",
                "nodeType": "YulTypedName",
                "src": "5492:4:55",
                "type": ""
              },
              {
                "name": "exponent",
                "nodeType": "YulTypedName",
                "src": "5498:8:55",
                "type": ""
              },
              {
                "name": "max",
                "nodeType": "YulTypedName",
                "src": "5508:3:55",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "power",
                "nodeType": "YulTypedName",
                "src": "5516:5:55",
                "type": ""
              }
            ],
            "src": "5462:1073:55"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6607:219:55",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "6617:31:55",
                  "value": {
                    "arguments": [
                      {
                        "name": "base",
                        "nodeType": "YulIdentifier",
                        "src": "6643:4:55"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "6625:17:55"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6625:23:55"
                  },
                  "variableNames": [
                    {
                      "name": "base",
                      "nodeType": "YulIdentifier",
                      "src": "6617:4:55"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6657:39:55",
                  "value": {
                    "arguments": [
                      {
                        "name": "exponent",
                        "nodeType": "YulIdentifier",
                        "src": "6687:8:55"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "6669:17:55"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6669:27:55"
                  },
                  "variableNames": [
                    {
                      "name": "exponent",
                      "nodeType": "YulIdentifier",
                      "src": "6657:8:55"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6706:113:55",
                  "value": {
                    "arguments": [
                      {
                        "name": "base",
                        "nodeType": "YulIdentifier",
                        "src": "6736:4:55"
                      },
                      {
                        "name": "exponent",
                        "nodeType": "YulIdentifier",
                        "src": "6742:8:55"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6752:66:55",
                        "type": "",
                        "value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "checked_exp_unsigned",
                      "nodeType": "YulIdentifier",
                      "src": "6715:20:55"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6715:104:55"
                  },
                  "variableNames": [
                    {
                      "name": "power",
                      "nodeType": "YulIdentifier",
                      "src": "6706:5:55"
                    }
                  ]
                }
              ]
            },
            "name": "checked_exp_t_uint256_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "base",
                "nodeType": "YulTypedName",
                "src": "6582:4:55",
                "type": ""
              },
              {
                "name": "exponent",
                "nodeType": "YulTypedName",
                "src": "6588:8:55",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "power",
                "nodeType": "YulTypedName",
                "src": "6601:5:55",
                "type": ""
              }
            ],
            "src": "6541:285:55"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6880:362:55",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "6890:25:55",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "6913:1:55"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "6895:17:55"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6895:20:55"
                  },
                  "variableNames": [
                    {
                      "name": "x",
                      "nodeType": "YulIdentifier",
                      "src": "6890:1:55"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6924:25:55",
                  "value": {
                    "arguments": [
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "6947:1:55"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "6929:17:55"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6929:20:55"
                  },
                  "variableNames": [
                    {
                      "name": "y",
                      "nodeType": "YulIdentifier",
                      "src": "6924:1:55"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "6958:28:55",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "6981:1:55"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "6984:1:55"
                      }
                    ],
                    "functionName": {
                      "name": "mul",
                      "nodeType": "YulIdentifier",
                      "src": "6977:3:55"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6977:9:55"
                  },
                  "variables": [
                    {
                      "name": "product_raw",
                      "nodeType": "YulTypedName",
                      "src": "6962:11:55",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6995:41:55",
                  "value": {
                    "arguments": [
                      {
                        "name": "product_raw",
                        "nodeType": "YulIdentifier",
                        "src": "7024:11:55"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "7006:17:55"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7006:30:55"
                  },
                  "variableNames": [
                    {
                      "name": "product",
                      "nodeType": "YulIdentifier",
                      "src": "6995:7:55"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "7213:22:55",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "7215:16:55"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "7215:18:55"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "7215:18:55"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "x",
                                "nodeType": "YulIdentifier",
                                "src": "7146:1:55"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "7139:6:55"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "7139:9:55"
                          },
                          {
                            "arguments": [
                              {
                                "name": "y",
                                "nodeType": "YulIdentifier",
                                "src": "7169:1:55"
                              },
                              {
                                "arguments": [
                                  {
                                    "name": "product",
                                    "nodeType": "YulIdentifier",
                                    "src": "7176:7:55"
                                  },
                                  {
                                    "name": "x",
                                    "nodeType": "YulIdentifier",
                                    "src": "7185:1:55"
                                  }
                                ],
                                "functionName": {
                                  "name": "div",
                                  "nodeType": "YulIdentifier",
                                  "src": "7172:3:55"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7172:15:55"
                              }
                            ],
                            "functionName": {
                              "name": "eq",
                              "nodeType": "YulIdentifier",
                              "src": "7166:2:55"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "7166:22:55"
                          }
                        ],
                        "functionName": {
                          "name": "or",
                          "nodeType": "YulIdentifier",
                          "src": "7119:2:55"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7119:83:55"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "7099:6:55"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7099:113:55"
                  },
                  "nodeType": "YulIf",
                  "src": "7096:139:55"
                }
              ]
            },
            "name": "checked_mul_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "6863:1:55",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "6866:1:55",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "product",
                "nodeType": "YulTypedName",
                "src": "6872:7:55",
                "type": ""
              }
            ],
            "src": "6832:410:55"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7293:149:55",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "7303:25:55",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "7326:1:55"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "7308:17:55"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7308:20:55"
                  },
                  "variableNames": [
                    {
                      "name": "x",
                      "nodeType": "YulIdentifier",
                      "src": "7303:1:55"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7337:25:55",
                  "value": {
                    "arguments": [
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "7360:1:55"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "7342:17:55"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7342:20:55"
                  },
                  "variableNames": [
                    {
                      "name": "y",
                      "nodeType": "YulIdentifier",
                      "src": "7337:1:55"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7371:17:55",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "7383:1:55"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "7386:1:55"
                      }
                    ],
                    "functionName": {
                      "name": "sub",
                      "nodeType": "YulIdentifier",
                      "src": "7379:3:55"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7379:9:55"
                  },
                  "variableNames": [
                    {
                      "name": "diff",
                      "nodeType": "YulIdentifier",
                      "src": "7371:4:55"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "7413:22:55",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "7415:16:55"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "7415:18:55"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "7415:18:55"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "diff",
                        "nodeType": "YulIdentifier",
                        "src": "7404:4:55"
                      },
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "7410:1:55"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "7401:2:55"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7401:11:55"
                  },
                  "nodeType": "YulIf",
                  "src": "7398:37:55"
                }
              ]
            },
            "name": "checked_sub_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "7279:1:55",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "7282:1:55",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "diff",
                "nodeType": "YulTypedName",
                "src": "7288:4:55",
                "type": ""
              }
            ],
            "src": "7248:194:55"
          }
        ]
      },
      "contents": "{\n\n    function cleanup_t_int256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_int256_to_t_int256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_int256(value))\n    }\n\n    function abi_encode_tuple_t_int256__to_t_int256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_int256_to_t_int256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_uint80(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffff)\n    }\n\n    function validator_revert_t_uint80(value) {\n        if iszero(eq(value, cleanup_t_uint80(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint80_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint80(value)\n    }\n\n    function validator_revert_t_int256(value) {\n        if iszero(eq(value, cleanup_t_int256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_int256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_int256(value)\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint80t_int256t_uint256t_uint256t_uint80_fromMemory(headStart, dataEnd) -> value0, value1, value2, value3, value4 {\n        if slt(sub(dataEnd, headStart), 160) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint80_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_int256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 128\n\n            value4 := abi_decode_t_uint80_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function shift_right_1_unsigned(value) -> newValue {\n        newValue :=\n\n        shr(1, value)\n\n    }\n\n    function checked_exp_helper(_power, _base, exponent, max) -> power, base {\n        power := _power\n        base  := _base\n        for { } gt(exponent, 1) {}\n        {\n            // overflow check for base * base\n            if gt(base, div(max, base)) { panic_error_0x11() }\n            if and(exponent, 1)\n            {\n                // No checks for power := mul(power, base) needed, because the check\n                // for base * base above is sufficient, since:\n                // |power| <= base (proof by induction) and thus:\n                // |power * base| <= base * base <= max <= |min| (for signed)\n                // (this is equally true for signed and unsigned exp)\n                power := mul(power, base)\n            }\n            base := mul(base, base)\n            exponent := shift_right_1_unsigned(exponent)\n        }\n    }\n\n    function checked_exp_unsigned(base, exponent, max) -> power {\n        // This function currently cannot be inlined because of the\n        // \"leave\" statements. We have to improve the optimizer.\n\n        // Note that 0**0 == 1\n        if iszero(exponent) { power := 1 leave }\n        if iszero(base) { power := 0 leave }\n\n        // Specializations for small bases\n        switch base\n        // 0 is handled above\n        case 1 { power := 1 leave }\n        case 2\n        {\n            if gt(exponent, 255) { panic_error_0x11() }\n            power := exp(2, exponent)\n            if gt(power, max) { panic_error_0x11() }\n            leave\n        }\n        if or(\n            and(lt(base, 11), lt(exponent, 78)),\n            and(lt(base, 307), lt(exponent, 32))\n        )\n        {\n            power := exp(base, exponent)\n            if gt(power, max) { panic_error_0x11() }\n            leave\n        }\n\n        power, base := checked_exp_helper(1, base, exponent, max)\n\n        if gt(power, div(max, base)) { panic_error_0x11() }\n        power := mul(power, base)\n    }\n\n    function checked_exp_t_uint256_t_uint256(base, exponent) -> power {\n        base := cleanup_t_uint256(base)\n        exponent := cleanup_t_uint256(exponent)\n\n        power := checked_exp_unsigned(base, exponent, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        let product_raw := mul(x, y)\n        product := cleanup_t_uint256(product_raw)\n\n        // overflow, if x != 0 and y != product/x\n        if iszero(\n            or(\n                iszero(x),\n                eq(y, div(product, x))\n            )\n        ) { panic_error_0x11() }\n\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        diff := sub(x, y)\n\n        if gt(diff, x) { panic_error_0x11() }\n\n    }\n\n}\n",
      "id": 55,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "8842:36034:46:-:0;;;10888:28326;;;;;;;;;;12049:1;12032:13;:18;12028:24971;;12142:42;12091:9;;:107;;;;;;;;;;;;;;;;;;12264:42;12212:10;;:108;;;;;;;;;;;;;;;;;;12028:24971;;;13230:1;13213:13;:18;13209:23790;;13320:42;13269:9;;:107;;;;;;;;;;;;;;;;;;13442:42;13390:10;;:108;;;;;;;;;;;;;;;;;;13209:23790;;;14120:5;14103:13;:22;14099:22900;;14217:42;14166:9;;:107;;;;;;;;;;;;;;;;;;14339:42;14287:10;;:108;;;;;;;;;;;;;;;;;;14099:22900;;;15107:5;15090:13;:22;15086:21913;;15207:42;15156:9;;:107;;;;;;;;;;;;;;;;;;15329:42;15277:10;;:108;;;;;;;;;;;;;;;;;;15086:21913;;;17123:4;17106:13;:21;17102:19897;;17224:42;17173:9;;:107;;;;;;;;;;;;;;;;;;17346:42;17294:10;;:108;;;;;;;;;;;;;;;;;;17102:19897;;;18474:3;18457:13;:20;18453:18546;;18574:42;18523:9;;:107;;;;;;;;;;;;;;;;;;18696:42;18644:10;;:108;;;;;;;;;;;;;;;;;;18453:18546;;;19776:5;19759:13;:22;19755:17244;;19878:42;19827:9;;:107;;;;;;;;;;;;;;;;;;20000:42;19948:10;;:108;;;;;;;;;;;;;;;;;;19755:17244;;;21236:3;21219:13;:20;21215:15784;;21337:42;21286:9;;:107;;;;;;;;;;;;;;;;;;21459:42;21407:10;;:108;;;;;;;;;;;;;;;;;;21215:15784;;;22065:3;22048:13;:20;22044:14955;;22166:42;22115:9;;:107;;;;;;;;;;;;;;;;;;22288:42;22236:10;;:108;;;;;;;;;;;;;;;;;;22044:14955;;;23344:3;23327:13;:20;23323:13676;;23445:42;23394:9;;:107;;;;;;;;;;;;;;;;;;23567:42;23515:10;;:108;;;;;;;;;;;;;;;;;;23323:13676;;;24551:3;24534:13;:20;24530:12469;;24651:42;24600:9;;:107;;;;;;;;;;;;;;;;;;24773:42;24721:10;;:108;;;;;;;;;;;;;;;;;;24530:12469;;;25919:5;25902:13;:22;25898:11101;;26027:42;25976:9;;:107;;;;;;;;;;;;;;;;;;26149:42;26097:10;;:108;;;;;;;;;;;;;;;;;;25898:11101;;;27637:6;27620:13;:23;27616:9383;;27749:42;27698:9;;:107;;;;;;;;;;;;;;;;;;27871:42;27819:10;;:108;;;;;;;;;;;;;;;;;;27616:9383;;;29143:2;29126:13;:19;29122:7877;;29244:42;29193:9;;:107;;;;;;;;;;;;;;;;;;29366:42;29314:10;;:108;;;;;;;;;;;;;;;;;;29122:7877;;;30692:6;30675:13;:23;30671:6328;;30797:42;30746:9;;:107;;;;;;;;;;;;;;;;;;30919:42;30867:10;;:108;;;;;;;;;;;;;;;;;;30671:6328;;;32533:4;32516:13;:21;32512:4487;;32637:42;32586:9;;:107;;;;;;;;;;;;;;;;;;32759:42;32707:10;;:108;;;;;;;;;;;;;;;;;;32512:4487;;;34211:4;34194:13;:21;34190:2809;;34306:42;34255:9;;:107;;;;;;;;;;;;;;;;;;34428:42;34376:10;;:108;;;;;;;;;;;;;;;;;;34190:2809;;;35304:4;35287:13;:21;35283:1716;;35408:42;35357:9;;:107;;;;;;;;;;;;;;;;;;35530:42;35478:10;;:108;;;;;;;;;;;;;;;;;;35283:1716;;;;34190:2809;32512:4487;30671:6328;29122:7877;27616:9383;25898:11101;24530:12469;23323:13676;22044:14955;21215:15784;19755:17244;18453:18546;17102:19897;15086:21913;14099:22900;13209:23790;12028:24971;8842:36034;;;;;;",
  "deployedSourceMap": "8842:36034:46:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;43969:184;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;43691:119;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;44690:184;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;42955:187;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;44362:119;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;43294:188;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;43969:184;44013:16;44044:12;44066:7;;;;;;;;;;;:23;;;:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;44041:50;;;;;;44141:4;;44137:2;:8;;;;:::i;:::-;44128:5;44120:25;;;;:::i;:::-;44101:45;;44031:122;43969:184;:::o;43691:119::-;43757:4;43780:23;43786:7;43795;43780:5;:23::i;:::-;43773:30;;43691:119;;;;:::o;44690:184::-;44734:16;44765:12;44787:7;;;;;;;;;;;:23;;;:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;44762:50;;;;;;44862:4;;44858:2;:8;;;;:::i;:::-;44849:5;44841:25;;;;:::i;:::-;44822:45;;44752:122;44690:184;:::o;42955:187::-;43002:16;43033:12;43055:9;;;;;;;;;;:25;;;:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;43030:52;;;;;;43128:6;43119:5;43111:23;;;;:::i;:::-;43092:43;;43020:122;42955:187;:::o;44362:119::-;44428:4;44451:23;44457:7;44466;44451:5;:23::i;:::-;44444:30;;44362:119;;;;:::o;43294:188::-;43341:16;43372:12;43394:10;;;;;;;;;;;:26;;;:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;43369:53;;;;;;43468:6;43459:5;43451:23;;;;:::i;:::-;43432:43;;43359:123;43294:188;:::o;40912:180::-;40979:4;41027:7;40995;;:40;;;;;;;;;;;;;;;;;;41057:7;41052:2;:12;;;;:::i;:::-;41045:4;:19;;;;41081:4;41074:11;;40912:180;;;;:::o;41301:::-;41368:4;41416:7;41384;;:40;;;;;;;;;;;;;;;;;;41446:7;41441:2;:12;;;;:::i;:::-;41434:4;:19;;;;41470:4;41463:11;;41301:180;;;;:::o;7:76:55:-;43:7;72:5;61:16;;7:76;;;:::o;89:115::-;174:23;191:5;174:23;:::i;:::-;169:3;162:36;89:115;;:::o;210:218::-;301:4;339:2;328:9;324:18;316:26;;352:69;418:1;407:9;403:17;394:6;352:69;:::i;:::-;210:218;;;;:::o;515:117::-;624:1;621;614:12;761:126;798:7;838:42;831:5;827:54;816:65;;761:126;;;:::o;893:96::-;930:7;959:24;977:5;959:24;:::i;:::-;948:35;;893:96;;;:::o;995:122::-;1068:24;1086:5;1068:24;:::i;:::-;1061:5;1058:35;1048:63;;1107:1;1104;1097:12;1048:63;995:122;:::o;1123:139::-;1169:5;1207:6;1194:20;1185:29;;1223:33;1250:5;1223:33;:::i;:::-;1123:139;;;;:::o;1268:77::-;1305:7;1334:5;1323:16;;1268:77;;;:::o;1351:122::-;1424:24;1442:5;1424:24;:::i;:::-;1417:5;1414:35;1404:63;;1463:1;1460;1453:12;1404:63;1351:122;:::o;1479:139::-;1525:5;1563:6;1550:20;1541:29;;1579:33;1606:5;1579:33;:::i;:::-;1479:139;;;;:::o;1624:474::-;1692:6;1700;1749:2;1737:9;1728:7;1724:23;1720:32;1717:119;;;1755:79;;:::i;:::-;1717:119;1875:1;1900:53;1945:7;1936:6;1925:9;1921:22;1900:53;:::i;:::-;1890:63;;1846:117;2002:2;2028:53;2073:7;2064:6;2053:9;2049:22;2028:53;:::i;:::-;2018:63;;1973:118;1624:474;;;;;:::o;2104:90::-;2138:7;2181:5;2174:13;2167:21;2156:32;;2104:90;;;:::o;2200:109::-;2281:21;2296:5;2281:21;:::i;:::-;2276:3;2269:34;2200:109;;:::o;2315:210::-;2402:4;2440:2;2429:9;2425:18;2417:26;;2453:65;2515:1;2504:9;2500:17;2491:6;2453:65;:::i;:::-;2315:210;;;;:::o;2531:105::-;2567:7;2607:22;2600:5;2596:34;2585:45;;2531:105;;;:::o;2642:120::-;2714:23;2731:5;2714:23;:::i;:::-;2707:5;2704:34;2694:62;;2752:1;2749;2742:12;2694:62;2642:120;:::o;2768:141::-;2824:5;2855:6;2849:13;2840:22;;2871:32;2897:5;2871:32;:::i;:::-;2768:141;;;;:::o;2915:120::-;2987:23;3004:5;2987:23;:::i;:::-;2980:5;2977:34;2967:62;;3025:1;3022;3015:12;2967:62;2915:120;:::o;3041:141::-;3097:5;3128:6;3122:13;3113:22;;3144:32;3170:5;3144:32;:::i;:::-;3041:141;;;;:::o;3188:143::-;3245:5;3276:6;3270:13;3261:22;;3292:33;3319:5;3292:33;:::i;:::-;3188:143;;;;:::o;3337:971::-;3440:6;3448;3456;3464;3472;3521:3;3509:9;3500:7;3496:23;3492:33;3489:120;;;3528:79;;:::i;:::-;3489:120;3648:1;3673:63;3728:7;3719:6;3708:9;3704:22;3673:63;:::i;:::-;3663:73;;3619:127;3785:2;3811:63;3866:7;3857:6;3846:9;3842:22;3811:63;:::i;:::-;3801:73;;3756:128;3923:2;3949:64;4005:7;3996:6;3985:9;3981:22;3949:64;:::i;:::-;3939:74;;3894:129;4062:2;4088:64;4144:7;4135:6;4124:9;4120:22;4088:64;:::i;:::-;4078:74;;4033:129;4201:3;4228:63;4283:7;4274:6;4263:9;4259:22;4228:63;:::i;:::-;4218:73;;4172:129;3337:971;;;;;;;;:::o;4314:180::-;4362:77;4359:1;4352:88;4459:4;4456:1;4449:15;4483:4;4480:1;4473:15;4500:102;4542:8;4589:5;4586:1;4582:13;4561:34;;4500:102;;;:::o;4608:848::-;4669:5;4676:4;4700:6;4691:15;;4724:5;4715:14;;4738:712;4759:1;4749:8;4746:15;4738:712;;;4854:4;4849:3;4845:14;4839:4;4836:24;4833:50;;;4863:18;;:::i;:::-;4833:50;4913:1;4903:8;4899:16;4896:451;;;5328:4;5321:5;5317:16;5308:25;;4896:451;5378:4;5372;5368:15;5360:23;;5408:32;5431:8;5408:32;:::i;:::-;5396:44;;4738:712;;;4608:848;;;;;;;:::o;5462:1073::-;5516:5;5707:8;5697:40;;5728:1;5719:10;;5730:5;;5697:40;5756:4;5746:36;;5773:1;5764:10;;5775:5;;5746:36;5842:4;5890:1;5885:27;;;;5926:1;5921:191;;;;5835:277;;5885:27;5903:1;5894:10;;5905:5;;;5921:191;5966:3;5956:8;5953:17;5950:43;;;5973:18;;:::i;:::-;5950:43;6022:8;6019:1;6015:16;6006:25;;6057:3;6050:5;6047:14;6044:40;;;6064:18;;:::i;:::-;6044:40;6097:5;;;5835:277;;6221:2;6211:8;6208:16;6202:3;6196:4;6193:13;6189:36;6171:2;6161:8;6158:16;6153:2;6147:4;6144:12;6140:35;6124:111;6121:246;;;6277:8;6271:4;6267:19;6258:28;;6312:3;6305:5;6302:14;6299:40;;;6319:18;;:::i;:::-;6299:40;6352:5;;6121:246;6392:42;6430:3;6420:8;6414:4;6411:1;6392:42;:::i;:::-;6377:57;;;;6466:4;6461:3;6457:14;6450:5;6447:25;6444:51;;;6475:18;;:::i;:::-;6444:51;6524:4;6517:5;6513:16;6504:25;;5462:1073;;;;;;:::o;6541:285::-;6601:5;6625:23;6643:4;6625:23;:::i;:::-;6617:31;;6669:27;6687:8;6669:27;:::i;:::-;6657:39;;6715:104;6752:66;6742:8;6736:4;6715:104;:::i;:::-;6706:113;;6541:285;;;;:::o;6832:410::-;6872:7;6895:20;6913:1;6895:20;:::i;:::-;6890:25;;6929:20;6947:1;6929:20;:::i;:::-;6924:25;;6984:1;6981;6977:9;7006:30;7024:11;7006:30;:::i;:::-;6995:41;;7185:1;7176:7;7172:15;7169:1;7166:22;7146:1;7139:9;7119:83;7096:139;;7215:18;;:::i;:::-;7096:139;6880:362;6832:410;;;;:::o;7248:194::-;7288:4;7308:20;7326:1;7308:20;:::i;:::-;7303:25;;7342:20;7360:1;7342:20;:::i;:::-;7337:25;;7386:1;7383;7379:9;7371:17;;7410:1;7404:4;7401:11;7398:37;;;7415:18;;:::i;:::-;7398:37;7248:194;;;;:::o",
  "source": "// SPDX-License-Identifier: GPL-3.0\n// // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // //\n//\n//      MMWKd:..                                                                                    ..:dKWMM\n//      MKl.                                                                                            .lKW\n//      O'       ..''''''''''''.     .''''''.     .'''''.      .''''''''''''''.     .''''''''''''..       'O\n//      '     .ckKNNWNWWWWWWWWWk.   .xNWWNWNl    ,0WWWWW0,     lNWWWWWWWWWNWNk'    ;0NNNWWWWWWWWNNKkc.     '\n//           ,OWMMMMMMMMMMMMMMMO.   .kMMMMMWl    ,KMMMMMK,     lWMMMMMMMMMMM0,    ;KMMMMMMMMMMMMMMMMWO,\n//          .kMMMMMMMMMMMMMMMMMO.   .kMMMMMWl    ,KMMMMMK,     lWMMMMMMMMMM0,    ;KMMMMMMMMMMMMMMMMMMMk.\n//          '0MMMMMMMMMMMMMMMMMO.   .kMMMMMWl    ,KMMMMMK,     lWMMMMMMMMM0,    :KMMMMMMMMMMMMMMMMMMMM0'\n//          '0MMMMMMMMMMMMMMMMMO.   .kMMMMMWl    ,KMMMMMK,     lWMMMMMMMM0,    :KMMMMMMMMMMMMMMMMMMMMM0'\n//          '0MMMMMMMMMMMMMMMMMO.   .kMMMMMWl    ,KMMMMMK,     lWMMMMMMM0,    ;0NNWWMMMMMMMMMMMMMMMMMM0'\n//          '0MMMMMMMMMMMMMMMMMO.   .kMMMMMWl    ,KMMMMMK,     lWMMMMMM0,     .'.',;lkNMMMMMMMMMMMMMMM0'\n//          '0MMMMMMMMMMMMMMMMMO.   .kMMMMMWl    ,KMMMMMK,     lWMMMMMK;              ,kWMMMMMMMMMMMMM0'\n//          '0MMMMMMMMMMMMMMMMMO.   .kMMMMMWl    ,KMMMMMK,     lWMMMMX:    .:oxxdc'    .dWMMMMMMMMMMMM0'\n//          '0MMMMMMMMMMMMMMMMMO.   .kMMMMMWl    ,KMMMMMK,     lWMMMWd.   ,OWMMMMMXl.   '0MMMMMMMMMMMM0'\n//          '0MMMMMMMMMMMMMMMMMO.   .kMMMMMWl    ,KMMMMMK,     lWMMMX;   .kMMMMMMMMK,   .xMMMMMMMMMMMM0'\n//          '0MMMMMMMMMMMMMMMMMO.   .kMMMMMWl    ,KMMMMMK,     lWMMM0'   .OMMMMMMMMX;   .xMMMMMMMMMMMM0'\n//          .OMMMMMMMMMMMMMMMMMO.   .kMMMMMWl    ,KMMMMMK,     lWMMMK,    lNMMMMMMWx.   '0MMMMMMMMMMMMO.\n//           lNMMMMMMMMMMMMMMMMO.   .kMMMMMWl    ,KMMMMMK,     lWMMMWd.   .:x0KKKkc.   .dWMMMMMMMMMMMNl\n//      .    .c0WMMMMMMMMMMMMMMO.   .kMMMMMWo    ,KMMMMMK,     lWMMMMNd.     ....     .xNMMMMMMMMMMW0c.    .\n//      l      .,lddxxxxxxxxxxxc.    :xxxxxd,    .lxxxxxl.     ,dxxxxxd:.            .cdxxxxxxxxddl,.      l\n//      No.                                                                                              .oN\n//      MW0l'                                                                                          'l0WM\n//      MMMWKd;.                                                                                    .;dKWMMM\n//\n// // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // //\n//                                                                                                                                                                                  //\n//      @dev            ::              Aron Mauritala Ayuk                                                                                                                                          //\n//      @msg            ::              stereo@iii6.xyz                                                                                                                                   //\n//      @github         ::              @stereoIII6\n//      @twitter        ::              @stereoIII6                                                                                                                                              //\n//                                                                                                                                                                                  //\n// // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // //\n//                                                                                                                                                                                  //\n//      @dev            ::              Juan Xavier Valverde                                                                                                                                    //\n//      @msg            ::              juanxavier@iii6.xyz                                                                                                                               //\n//      @twitter        ::              @JuanXavier                                                                                                                                             //\n//      @github         ::              @JuanXavier                                                                                                                                             //\n//                                                                                                                                                                                  //                                                                                                                                                                                 //\n// // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // //\n//  *   *   *   *   *   *   *   *   *   *   *   *   *   *   *   *   *   *   *   *   *   *   *   *   *   *   *   *   *   *   *   *   *   *   *   *   *   *   *   *   *   *   *   *   //\n// // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // //\n//                                                                                                                                                                                  //\n//      @company        ::              Fractio Holding                                                                                                                                                                       //\n//      @title          ::              iii6 Price Consumer                                                                                                                            //\n//      @description    ::              Fractio Holding Price Oracle Contract                                                                                                                           //\n//      @version        ::              0.0.1                                                                                                                                       //\n//      @purpose        ::              Multinet Oracle Price Feed                                                                                                           //\n//                                                                                                                                                                                  //\n//                                                                                                                                                                                  //\n//                                                                                                                                                                                  //\n//                                                                                                                                                                                  //\n//                                                                                                                                                                                  //\n// // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // //\n//  *   *   *   *   *   *   *   *   *   *   *   *   *   *   *   *   *   *   *   *   *   *   *   *   *   *   *   *   *   *   *   *   *   *   *   *   *   *   *   *   *   *   *   *   //\n// // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // //\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\npragma solidity ^0.8.7;\n\nimport \"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\";\nimport \"@chainlink/contracts/src/v0.8/interfaces/LinkTokenInterface.sol\";\n\ncontract iii6PriceConsumer {\n    /**\n     * @dev this contract is a price consumer contract with all possible networks integrated\n     */\n    // ██╗███╗░░██╗██╗████████╗██╗░█████╗░██╗░░░░░██╗░██████╗░█████╗░████████╗██╗░█████╗░███╗░░██╗\n    // ██║████╗░██║██║╚══██╔══╝██║██╔══██╗██║░░░░░██║██╔════╝██╔══██╗╚══██╔══╝██║██╔══██╗████╗░██║\n    // ██║██╔██╗██║██║░░░██║░░░██║███████║██║░░░░░██║╚█████╗░███████║░░░██║░░░██║██║░░██║██╔██╗██║\n    // ██║██║╚████║██║░░░██║░░░██║██╔══██║██║░░░░░██║░╚═══██╗██╔══██║░░░██║░░░██║██║░░██║██║╚████║\n    // ██║██║░╚███║██║░░░██║░░░██║██║░░██║███████╗██║██████╔╝██║░░██║░░░██║░░░██║╚█████╔╝██║░╚███║\n    // ╚═╝╚═╝░░╚══╝╚═╝░░░╚═╝░░░╚═╝╚═╝░░╚═╝╚══════╝╚═╝╚═════╝░╚═╝░░╚═╝░░░╚═╝░░░╚═╝░╚════╝░╚═╝░░╚══╝\n    AggregatorV3Interface internal ethUSDagg;\n    AggregatorV3Interface internal mainUSDagg;\n    AggregatorV3Interface internal xUSDagg;\n    AggregatorV3Interface internal yUSDagg;\n    uint256 xDig;\n    uint256 yDig;\n\n    constructor() {\n        // ███████╗████████╗██╗░░██╗  ███╗░░░███╗░█████╗░██╗███╗░░██╗\n        // ██╔════╝╚══██╔══╝██║░░██║  ████╗░████║██╔══██╗██║████╗░██║\n        // █████╗░░░░░██║░░░███████║  ██╔████╔██║███████║██║██╔██╗██║\n        // ██╔══╝░░░░░██║░░░██╔══██║  ██║╚██╔╝██║██╔══██║██║██║╚████║\n        // ███████╗░░░██║░░░██║░░██║  ██║░╚═╝░██║██║░░██║██║██║░╚███║\n        // ╚══════╝░░░╚═╝░░░╚═╝░░╚═╝  ╚═╝░░░░░╚═╝╚═╝░░╚═╝╚═╝╚═╝░░╚══╝\n        if (block.chainid == 1) {\n            // AVAX FUJI\n            ethUSDagg = AggregatorV3Interface(\n                0x5f4eC3Df9cbd43714FE2740f5E3616155c5b8419\n            );\n            mainUSDagg = AggregatorV3Interface(\n                0x5f4eC3Df9cbd43714FE2740f5E3616155c5b8419\n            );\n        }\n        // ░██████╗░░█████╗░███████╗██████╗░██╗░░░░░██╗\n        // ██╔════╝░██╔══██╗██╔════╝██╔══██╗██║░░░░░██║\n        // ██║░░██╗░██║░░██║█████╗░░██████╔╝██║░░░░░██║\n        // ██║░░╚██╗██║░░██║██╔══╝░░██╔══██╗██║░░░░░██║\n        // ╚██████╔╝╚█████╔╝███████╗██║░░██║███████╗██║\n        // ░╚═════╝░░╚════╝░╚══════╝╚═╝░░╚═╝╚══════╝╚═╝\n        else if (block.chainid == 5) {\n            // GOERLI\n            ethUSDagg = AggregatorV3Interface(\n                0xD4a33860578De61DBAbDc8BFdb98FD742fA7028e\n            );\n            mainUSDagg = AggregatorV3Interface(\n                0xD4a33860578De61DBAbDc8BFdb98FD742fA7028e\n            );\n        }\n        // ███████╗██╗░░░██╗░░░░░██╗██╗\n        // ██╔════╝██║░░░██║░░░░░██║██║\n        // █████╗░░██║░░░██║░░░░░██║██║\n        // ██╔══╝░░██║░░░██║██╗░░██║██║\n        // ██║░░░░░╚██████╔╝╚█████╔╝██║\n        // ╚═╝░░░░░░╚═════╝░░╚════╝░╚═╝\n        else if (block.chainid == 43113) {\n            // AVAX FUJI\n            ethUSDagg = AggregatorV3Interface(\n                0x86d67c3D38D2bCeE722E601025C25a575021c6EA\n            );\n            mainUSDagg = AggregatorV3Interface(\n                0x5498BB86BC934c8D34FDA08E81D444153d0D06aD\n            );\n        }\n        // ░█████╗░██╗░░░██╗░█████╗░██╗░░██╗\n        // ██╔══██╗██║░░░██║██╔══██╗╚██╗██╔╝\n        // ███████║╚██╗░██╔╝███████║░╚███╔╝░\n        // ██╔══██║░╚████╔╝░██╔══██║░██╔██╗░\n        // ██║░░██║░░╚██╔╝░░██║░░██║██╔╝╚██╗\n        // ╚═╝░░╚═╝░░░╚═╝░░░╚═╝░░╚═╝╚═╝░░╚═╝\n        else if (block.chainid == 43114) {\n            // AVAX MAINNET\n            ethUSDagg = AggregatorV3Interface(\n                0x976B3D034E162d8bD72D6b9C989d545b839003b0\n            );\n            mainUSDagg = AggregatorV3Interface(\n                0x0A77230d17318075983913bC2145DB16C7366156\n            );\n        }\n        // ███████╗████████╗███╗░░░███╗  ████████╗███████╗░██████╗████████╗███╗░░██╗███████╗████████╗\n        // ██╔════╝╚══██╔══╝████╗░████║  ╚══██╔══╝██╔════╝██╔════╝╚══██╔══╝████╗░██║██╔════╝╚══██╔══╝\n        // █████╗░░░░░██║░░░██╔████╔██║  ░░░██║░░░█████╗░░╚█████╗░░░░██║░░░██╔██╗██║█████╗░░░░░██║░░░\n        // ██╔══╝░░░░░██║░░░██║╚██╔╝██║  ░░░██║░░░██╔══╝░░░╚═══██╗░░░██║░░░██║╚████║██╔══╝░░░░░██║░░░\n        // ██║░░░░░░░░██║░░░██║░╚═╝░██║  ░░░██║░░░███████╗██████╔╝░░░██║░░░██║░╚███║███████╗░░░██║░░░\n        // ╚═╝░░░░░░░░╚═╝░░░╚═╝░░░░░╚═╝  ░░░╚═╝░░░╚══════╝╚═════╝░░░░╚═╝░░░╚═╝░░╚══╝╚══════╝░░░╚═╝░░░\n        else if (block.chainid == 4002) {\n            // Fantom TESTNET\n            ethUSDagg = AggregatorV3Interface(\n                0xB8C458C957a6e6ca7Cc53eD95bEA548c52AFaA24\n            );\n            mainUSDagg = AggregatorV3Interface(\n                0xe04676B9A9A2973BCb0D1478b5E1E9098BBB7f3D\n            );\n        }\n        // ███████╗░█████╗░███╗░░██╗████████╗░█████╗░███╗░░░███╗\n        // ██╔════╝██╔══██╗████╗░██║╚══██╔══╝██╔══██╗████╗░████║\n        // █████╗░░███████║██╔██╗██║░░░██║░░░██║░░██║██╔████╔██║\n        // ██╔══╝░░██╔══██║██║╚████║░░░██║░░░██║░░██║██║╚██╔╝██║\n        // ██║░░░░░██║░░██║██║░╚███║░░░██║░░░╚█████╔╝██║░╚═╝░██║\n        // ╚═╝░░░░░╚═╝░░╚═╝╚═╝░░╚══╝░░░╚═╝░░░░╚════╝░╚═╝░░░░░╚═╝\n        else if (block.chainid == 250) {\n            // Fantom MAINNET\n            ethUSDagg = AggregatorV3Interface(\n                0x11DdD3d147E5b83D01cee7070027092397d63658\n            );\n            mainUSDagg = AggregatorV3Interface(\n                0xf4766552D15AE4d256Ad41B6cf2933482B0680dc\n            );\n        }\n        //  ███╗░░░███╗██╗░░░██╗███╗░░░███╗██████╗░░█████╗░██╗\n        //  ████╗░████║██║░░░██║████╗░████║██╔══██╗██╔══██╗██║\n        //  ██╔████╔██║██║░░░██║██╔████╔██║██████╦╝███████║██║\n        //  ██║╚██╔╝██║██║░░░██║██║╚██╔╝██║██╔══██╗██╔══██║██║\n        //  ██║░╚═╝░██║╚██████╔╝██║░╚═╝░██║██████╦╝██║░░██║██║\n        //  ╚═╝░░░░░╚═╝░╚═════╝░╚═╝░░░░░╚═╝╚═════╝░╚═╝░░╚═╝╚═╝\n        else if (block.chainid == 80001) {\n            // Polygon Mumbai\n            ethUSDagg = AggregatorV3Interface(\n                0x0715A7794a1dc8e42615F059dD6e406A6594651A\n            );\n            mainUSDagg = AggregatorV3Interface(\n                0xd0D5e3DB44DE05E9F294BB0a3bEEaF030DE24Ada\n            );\n        }\n        // ██████╗░░█████╗░██╗░░░░░██╗░░░██╗░██████╗░░█████╗░███╗░░██╗\n        // ██╔══██╗██╔══██╗██║░░░░░╚██╗░██╔╝██╔════╝░██╔══██╗████╗░██║\n        // ██████╔╝██║░░██║██║░░░░░░╚████╔╝░██║░░██╗░██║░░██║██╔██╗██║\n        // ██╔═══╝░██║░░██║██║░░░░░░░╚██╔╝░░██║░░╚██╗██║░░██║██║╚████║\n        // ██║░░░░░╚█████╔╝███████╗░░░██║░░░╚██████╔╝╚█████╔╝██║░╚███║\n        // ╚═╝░░░░░░╚════╝░╚══════╝░░░╚═╝░░░░╚═════╝░░╚════╝░╚═╝░░╚══╝\n        else if (block.chainid == 137) {\n            // Polygon Mainnet\n            ethUSDagg = AggregatorV3Interface(\n                0xF9680D99D6C9589e2a93a78A04A279e509205945\n            );\n            mainUSDagg = AggregatorV3Interface(\n                0xAB594600376Ec9fD91F8e885dADF0CE036862dE0\n            );\n        }\n        // ██████╗░░██████╗░█████╗░\n        // ██╔══██╗██╔════╝██╔══██╗\n        // ██████╦╝╚█████╗░██║░░╚═╝\n        // ██╔══██╗░╚═══██╗██║░░██╗\n        // ██████╦╝██████╔╝╚█████╔╝\n        // ╚═════╝░╚═════╝░░╚════╝░\n        else if (block.chainid == 137) {\n            // Polygon Mainnet\n            ethUSDagg = AggregatorV3Interface(\n                0x9ef1B8c0E4F7dc8bF5719Ea496883DC6401d5b2e\n            );\n            mainUSDagg = AggregatorV3Interface(\n                0x0567F2323251f0Aab15c8dFb1967E4e8A7D42aeE\n            );\n        }\n        // ░█████╗░██╗░░██╗░█████╗░██╗░░░░░███████╗███╗░░██╗\n        // ██╔══██╗██║░░██║██╔══██╗██║░░░░░██╔════╝████╗░██║\n        // ██║░░╚═╝███████║███████║██║░░░░░█████╗░░██╔██╗██║\n        // ██║░░██╗██╔══██║██╔══██║██║░░░░░██╔══╝░░██║╚████║\n        // ╚█████╔╝██║░░██║██║░░██║███████╗███████╗██║░╚███║\n        // ░╚════╝░╚═╝░░╚═╝╚═╝░░╚═╝╚══════╝╚══════╝╚═╝░░╚══╝\n        else if (block.chainid == 137) {\n            // Polygon Mainnet\n            ethUSDagg = AggregatorV3Interface(\n                0x143db3CEEfbdfe5631aDD3E50f7614B6ba708BA7\n            );\n            mainUSDagg = AggregatorV3Interface(\n                0x2514895c72f50D8bd4B4F9b1110F0D6bD2c97526\n            );\n        }\n        // ░██████╗░███╗░░██╗░█████╗░░██████╗██╗░██████╗\n        // ██╔════╝░████╗░██║██╔══██╗██╔════╝██║██╔════╝\n        // ██║░░██╗░██╔██╗██║██║░░██║╚█████╗░██║╚█████╗░\n        // ██║░░╚██╗██║╚████║██║░░██║░╚═══██╗██║░╚═══██╗\n        // ╚██████╔╝██║░╚███║╚█████╔╝██████╔╝██║██████╔╝\n        // ░╚═════╝░╚═╝░░╚══╝░╚════╝░╚═════╝░╚═╝╚═════╝░\n        else if (block.chainid == 100) {\n            // Gnosis Mainnet\n            ethUSDagg = AggregatorV3Interface(\n                0xa767f745331D267c7751297D982b050c93985627\n            );\n            mainUSDagg = AggregatorV3Interface(\n                0x678df3415fc31947dA4324eC63212874be5a82f8\n            );\n        }\n        // ░█████╗░██████╗░██████╗░██╗  ░█████╗░███╗░░██╗███████╗\n        // ██╔══██╗██╔══██╗██╔══██╗██║  ██╔══██╗████╗░██║██╔════╝\n        // ███████║██████╔╝██████╦╝██║  ██║░░██║██╔██╗██║█████╗░░\n        // ██╔══██║██╔══██╗██╔══██╗██║  ██║░░██║██║╚████║██╔══╝░░\n        // ██║░░██║██║░░██║██████╦╝██║  ╚█████╔╝██║░╚███║███████╗\n        // ╚═╝░░╚═╝╚═╝░░╚═╝╚═════╝░╚═╝  ░╚════╝░╚═╝░░╚══╝╚══════╝\n        else if (block.chainid == 42161) {\n            // Arbitrum One Mainnet\n            ethUSDagg = AggregatorV3Interface(\n                0xB1f70A229FE7cceD0428245db8B1f6C48c7Ea82a\n            );\n            mainUSDagg = AggregatorV3Interface(\n                0xB1f70A229FE7cceD0428245db8B1f6C48c7Ea82a\n            );\n        }\n        // ░█████╗░██████╗░██████╗░██╗  ░██████╗░░█████╗░███████╗██████╗░██╗░░░░░██╗\n        // ██╔══██╗██╔══██╗██╔══██╗██║  ██╔════╝░██╔══██╗██╔════╝██╔══██╗██║░░░░░██║\n        // ███████║██████╔╝██████╦╝██║  ██║░░██╗░██║░░██║█████╗░░██████╔╝██║░░░░░██║\n        // ██╔══██║██╔══██╗██╔══██╗██║  ██║░░╚██╗██║░░██║██╔══╝░░██╔══██╗██║░░░░░██║\n        // ██║░░██║██║░░██║██████╦╝██║  ╚██████╔╝╚█████╔╝███████╗██║░░██║███████╗██║\n        // ╚═╝░░╚═╝╚═╝░░╚═╝╚═════╝░╚═╝  ░╚═════╝░░╚════╝░╚══════╝╚═╝░░╚═╝╚══════╝╚═╝\n        else if (block.chainid == 421613) {\n            // Arbitrum Goerli Testnet\n            ethUSDagg = AggregatorV3Interface(\n                0x62CAe0FA2da220f43a51F86Db2EDb36DcA9A5A08\n            );\n            mainUSDagg = AggregatorV3Interface(\n                0x62CAe0FA2da220f43a51F86Db2EDb36DcA9A5A08\n            );\n        }\n        // ░█████╗░██████╗░████████╗██╗  ███╗░░░███╗░█████╗░██╗███╗░░██╗\n        // ██╔══██╗██╔══██╗╚══██╔══╝██║  ████╗░████║██╔══██╗██║████╗░██║\n        // ██║░░██║██████╔╝░░░██║░░░██║  ██╔████╔██║███████║██║██╔██╗██║\n        // ██║░░██║██╔═══╝░░░░██║░░░██║  ██║╚██╔╝██║██╔══██║██║██║╚████║\n        // ╚█████╔╝██║░░░░░░░░██║░░░██║  ██║░╚═╝░██║██║░░██║██║██║░╚███║\n        // ░╚════╝░╚═╝░░░░░░░░╚═╝░░░╚═╝  ╚═╝░░░░░╚═╝╚═╝░░╚═╝╚═╝╚═╝░░╚══╝\n        else if (block.chainid == 10) {\n            // Optimism Mainnet\n            ethUSDagg = AggregatorV3Interface(\n                0x13e3Ee699D1909E989722E753853AE30b17e08c5\n            );\n            mainUSDagg = AggregatorV3Interface(\n                0x13e3Ee699D1909E989722E753853AE30b17e08c5\n            );\n        }\n        // ░█████╗░██████╗░████████╗██╗  ████████╗███████╗░██████╗████████╗\n        // ██╔══██╗██╔══██╗╚══██╔══╝██║  ╚══██╔══╝██╔════╝██╔════╝╚══██╔══╝\n        // ██║░░██║██████╔╝░░░██║░░░██║  ░░░██║░░░█████╗░░╚█████╗░░░░██║░░░\n        // ██║░░██║██╔═══╝░░░░██║░░░██║  ░░░██║░░░██╔══╝░░░╚═══██╗░░░██║░░░\n        // ╚█████╔╝██║░░░░░░░░██║░░░██║  ░░░██║░░░███████╗██████╔╝░░░██║░░░\n        // ░╚════╝░╚═╝░░░░░░░░╚═╝░░░╚═╝  ░░░╚═╝░░░╚══════╝╚═════╝░░░░╚═╝░░░\n        else if (block.chainid == 421613) {\n            // Optimism Testnet\n            ethUSDagg = AggregatorV3Interface(\n                0x57241A37733983F97C4Ab06448F244A1E0Ca0ba8\n            );\n            mainUSDagg = AggregatorV3Interface(\n                0x57241A37733983F97C4Ab06448F244A1E0Ca0ba8\n            );\n        }\n        // ███╗░░░███╗░█████╗░░█████╗░░█████╗░███╗░░██╗██████╗░██╗██╗░░░██╗███████╗██████╗░\n        // ████╗░████║██╔══██╗██╔══██╗██╔══██╗████╗░██║██╔══██╗██║██║░░░██║██╔════╝██╔══██╗\n        // ██╔████╔██║██║░░██║██║░░██║██║░░██║██╔██╗██║██████╔╝██║╚██╗░██╔╝█████╗░░██████╔╝\n        // ██║╚██╔╝██║██║░░██║██║░░██║██║░░██║██║╚████║██╔══██╗██║░╚████╔╝░██╔══╝░░██╔══██╗\n        // ██║░╚═╝░██║╚█████╔╝╚█████╔╝╚█████╔╝██║░╚███║██║░░██║██║░░╚██╔╝░░███████╗██║░░██║\n        // ╚═╝░░░░░╚═╝░╚════╝░░╚════╝░░╚════╝░╚═╝░░╚══╝╚═╝░░╚═╝╚═╝░░░╚═╝░░░╚══════╝╚═╝░░╚═╝\n        else if (block.chainid == 1285) {\n            // Moonriver Mainnet\n            ethUSDagg = AggregatorV3Interface(\n                0xc3cF399566220dc5Ed6C8CFbf8247214Af103C72\n            );\n            mainUSDagg = AggregatorV3Interface(\n                0x3f8BFbDc1e79777511c00Ad8591cef888C2113C1\n            );\n        }\n        // ███╗░░░███╗░█████╗░░█████╗░███╗░░██╗██████╗░███████╗░█████╗░███╗░░░███╗\n        // ████╗░████║██╔══██╗██╔══██╗████╗░██║██╔══██╗██╔════╝██╔══██╗████╗░████║\n        // ██╔████╔██║██║░░██║██║░░██║██╔██╗██║██████╦╝█████╗░░███████║██╔████╔██║\n        // ██║╚██╔╝██║██║░░██║██║░░██║██║╚████║██╔══██╗██╔══╝░░██╔══██║██║╚██╔╝██║\n        // ██║░╚═╝░██║╚█████╔╝╚█████╔╝██║░╚███║██████╦╝███████╗██║░░██║██║░╚═╝░██║\n        // ╚═╝░░░░░╚═╝░╚════╝░░╚════╝░╚═╝░░╚══╝╚═════╝░╚══════╝╚═╝░░╚═╝╚═╝░░░░░╚═╝\n        else if (block.chainid == 1284) {\n            // Moonbeam\n            ethUSDagg = AggregatorV3Interface(\n                0x9ce2388a1696e22F870341C3FC1E89710C7569B5\n            );\n            mainUSDagg = AggregatorV3Interface(\n                0x4497B606be93e773bbA5eaCFCb2ac5E2214220Eb\n            );\n        }\n        // ███╗░░░███╗███████╗████████╗██╗░██████╗\n        // ████╗░████║██╔════╝╚══██╔══╝██║██╔════╝\n        // ██╔████╔██║█████╗░░░░░██║░░░██║╚█████╗░\n        // ██║╚██╔╝██║██╔══╝░░░░░██║░░░██║░╚═══██╗\n        // ██║░╚═╝░██║███████╗░░░██║░░░██║██████╔╝\n        // ╚═╝░░░░░╚═╝╚══════╝░░░╚═╝░░░╚═╝╚═════╝░\n        else if (block.chainid == 1088) {\n            // Moonriver Mainnet\n            ethUSDagg = AggregatorV3Interface(\n                0x3BBe70e2F96c87aEce7F67A2b0178052f62E37fE\n            );\n            mainUSDagg = AggregatorV3Interface(\n                0xD4a5Bb03B5D66d9bf81507379302Ac2C2DFDFa6D\n            );\n        }\n        // ██╗░░██╗██╗░░░░░░█████╗░██╗░░░██╗████████╗███╗░░██╗\n        // ██║░██╔╝██║░░░░░██╔══██╗╚██╗░██╔╝╚══██╔══╝████╗░██║\n        // █████═╝░██║░░░░░███████║░╚████╔╝░░░░██║░░░██╔██╗██║\n        // ██╔═██╗░██║░░░░░██╔══██║░░╚██╔╝░░░░░██║░░░██║╚████║\n        // ██║░╚██╗███████╗██║░░██║░░░██║░░░░░░██║░░░██║░╚███║\n        // ╚═╝░░╚═╝╚══════╝╚═╝░░╚═╝░░░╚═╝░░░░░░╚═╝░░░╚═╝░░╚══╝\n        else if (block.chainid == 8217) {\n            // Moonbeam\n            /** \n             * @dev awaiting klay/usd & eth/usd pricefeeds \n\n            ethUSDagg = AggregatorV3Interface(\n                0x9ce2388a1696e22F870341C3FC1E89710C7569B5\n            );\n            mainUSDagg = AggregatorV3Interface(\n                0x4497B606be93e773bbA5eaCFCb2ac5E2214220Eb\n            );\n            */\n        }\n\n        // ███╗░░░███╗░█████╗░██████╗░███████╗  ░█████╗░░█████╗░███╗░░░███╗██╗███╗░░██╗░██████╗░  ░██████╗░█████╗░░█████╗░███╗░░██╗\n        // ████╗░████║██╔══██╗██╔══██╗██╔════╝  ██╔══██╗██╔══██╗████╗░████║██║████╗░██║██╔════╝░  ██╔════╝██╔══██╗██╔══██╗████╗░██║\n        // ██╔████╔██║██║░░██║██████╔╝█████╗░░  ██║░░╚═╝██║░░██║██╔████╔██║██║██╔██╗██║██║░░██╗░  ╚█████╗░██║░░██║██║░░██║██╔██╗██║\n        // ██║╚██╔╝██║██║░░██║██╔══██╗██╔══╝░░  ██║░░██╗██║░░██║██║╚██╔╝██║██║██║╚████║██║░░╚██╗  ░╚═══██╗██║░░██║██║░░██║██║╚████║\n        // ██║░╚═╝░██║╚█████╔╝██║░░██║███████╗  ╚█████╔╝╚█████╔╝██║░╚═╝░██║██║██║░╚███║╚██████╔╝  ██████╔╝╚█████╔╝╚█████╔╝██║░╚███║\n        // ╚═╝░░░░░╚═╝░╚════╝░╚═╝░░╚═╝╚══════╝  ░╚════╝░░╚════╝░╚═╝░░░░░╚═╝╚═╝╚═╝░░╚══╝░╚═════╝░  ╚═════╝░░╚════╝░░╚════╝░╚═╝░░╚══╝\n    }\n\n    // ██████╗░██████╗░██╗██╗░░░██╗░█████╗░████████╗███████╗  ███████╗███╗░░██╗██╗░░██╗\n    // ██╔══██╗██╔══██╗██║██║░░░██║██╔══██╗╚══██╔══╝██╔════╝  ██╔════╝████╗░██║╚██╗██╔╝\n    // ██████╔╝██████╔╝██║╚██╗░██╔╝███████║░░░██║░░░█████╗░░  █████╗░░██╔██╗██║░╚███╔╝░\n    // ██╔═══╝░██╔══██╗██║░╚████╔╝░██╔══██║░░░██║░░░██╔══╝░░  ██╔══╝░░██║╚████║░██╔██╗░\n    // ██║░░░░░██║░░██║██║░░╚██╔╝░░██║░░██║░░░██║░░░███████╗  ██║░░░░░██║░╚███║██╔╝╚██╗\n    // ╚═╝░░░░░╚═╝░░╚═╝╚═╝░░░╚═╝░░░╚═╝░░╚═╝░░░╚═╝░░░╚══════╝  ╚═╝░░░░░╚═╝░░╚══╝╚═╝░░╚═╝\n\n    /**\n     * @dev sets custom token x new oracle address\n     * @param _oracle address of the oracle\n     * @param _digits number of decimals the oracle passes\n     * @return exit in bool true\n     */\n    function _setX(address _oracle, uint256 _digits) internal returns (bool) {\n        xUSDagg = AggregatorV3Interface(_oracle);\n        xDig = 18 - _digits;\n        return true;\n    }\n\n    /**\n     * @dev sets custom token y new oracle address\n     * @param _oracle address of the oracle\n     * @param _digits number of decimals the oracle passes\n     * @return exit in bool true\n     */\n    function _setY(address _oracle, uint256 _digits) internal returns (bool) {\n        yUSDagg = AggregatorV3Interface(_oracle);\n        yDig = 18 - _digits;\n        return true;\n    }\n\n    // ██████╗░██╗░░░██╗██████╗░██╗░░░░░██╗░█████╗░  ███████╗███╗░░██╗██╗░░██╗\n    // ██╔══██╗██║░░░██║██╔══██╗██║░░░░░██║██╔══██╗  ██╔════╝████╗░██║╚██╗██╔╝\n    // ██████╔╝██║░░░██║██████╦╝██║░░░░░██║██║░░╚═╝  █████╗░░██╔██╗██║░╚███╔╝░\n    // ██╔═══╝░██║░░░██║██╔══██╗██║░░░░░██║██║░░██╗  ██╔══╝░░██║╚████║░██╔██╗░\n    // ██║░░░░░╚██████╔╝██████╦╝███████╗██║╚█████╔╝  ██║░░░░░██║░╚███║██╔╝╚██╗\n    // ╚═╝░░░░░░╚═════╝░╚═════╝░╚══════╝╚═╝░╚════╝░  ╚═╝░░░░░╚═╝░░╚══╝╚═╝░░╚═╝\n    /**\n     * @dev Divides between two values substracting the remainder from the dividend\n     * @return priceFull eth price in usd\n     */\n    function WethUsdPrice() external view returns (int256 priceFull) {\n        (, int256 price, , , ) = ethUSDagg.latestRoundData();\n        priceFull = int256(uint256(price) * 10**10);\n    }\n\n    /**\n     * @dev Divides between two values substracting the remainder from the dividend\n     * @return priceFull gascoin price in usd\n     */\n    function CoinUsdPrice() external view returns (int256 priceFull) {\n        (, int256 price, , , ) = mainUSDagg.latestRoundData();\n        priceFull = int256(uint256(price) * 10**10);\n    }\n\n    /**\n     * @dev sets custom token x new oracle address\n     * @param _oracle address of the oracle\n     * @param _digits number of decimals the oracle passes\n     * @return exit in bool true\n     */\n    function setX(address _oracle, uint256 _digits) external returns (bool) {\n        return _setX(_oracle, _digits);\n    }\n\n    /**\n     * @dev Divides between two values substracting the remainder from the dividend\n     * @return priceFull custom token x price in usd\n     */\n    function XUsdPrice() external view returns (int256 priceFull) {\n        (, int256 price, , , ) = xUSDagg.latestRoundData();\n        priceFull = int256(uint256(price) * 10**xDig);\n    }\n\n    /**\n     * @dev sets custom token y new oracle address\n     * @param _oracle address of the oracle\n     * @param _digits number of decimals the oracle passes\n     * @return exit in bool true\n     */\n    function setY(address _oracle, uint256 _digits) external returns (bool) {\n        return _setY(_oracle, _digits);\n    }\n\n    /**\n     * @dev Divides between two values substracting the remainder from the dividend\n     * @return priceFull custom token x price in usd\n     */\n    // gives back network gas currency price in $\n    function YUsdPrice() external view returns (int256 priceFull) {\n        (, int256 price, , , ) = yUSDagg.latestRoundData();\n        priceFull = int256(uint256(price) * 10**yDig);\n    }\n}\n// // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // //\n//\n//      MMWKd:..                                                                                    ..:dKWMM\n//      MKl.                                                                                            .lKW\n//      O'       ..''''''''''''.     .''''''.     .'''''.      .''''''''''''''.     .''''''''''''..       'O\n//      '     .ckKNNWNWWWWWWWWWk.   .xNWWNWNl    ,0WWWWW0,     lNWWWWWWWWWNWNk'    ;0NNNWWWWWWWWNNKkc.     '\n//           ,OWMMMMMMMMMMMMMMMO.   .kMMMMMWl    ,KMMMMMK,     lWMMMMMMMMMMM0,    ;KMMMMMMMMMMMMMMMMWO,\n//          .kMMMMMMMMMMMMMMMMMO.   .kMMMMMWl    ,KMMMMMK,     lWMMMMMMMMMM0,    ;KMMMMMMMMMMMMMMMMMMMk.\n//          '0MMMMMMMMMMMMMMMMMO.   .kMMMMMWl    ,KMMMMMK,     lWMMMMMMMMM0,    :KMMMMMMMMMMMMMMMMMMMM0'\n//          '0MMMMMMMMMMMMMMMMMO.   .kMMMMMWl    ,KMMMMMK,     lWMMMMMMMM0,    :KMMMMMMMMMMMMMMMMMMMMM0'\n//          '0MMMMMMMMMMMMMMMMMO.   .kMMMMMWl    ,KMMMMMK,     lWMMMMMMM0,    ;0NNWWMMMMMMMMMMMMMMMMMM0'\n//          '0MMMMMMMMMMMMMMMMMO.   .kMMMMMWl    ,KMMMMMK,     lWMMMMMM0,     .'.',;lkNMMMMMMMMMMMMMMM0'\n//          '0MMMMMMMMMMMMMMMMMO.   .kMMMMMWl    ,KMMMMMK,     lWMMMMMK;              ,kWMMMMMMMMMMMMM0'\n//          '0MMMMMMMMMMMMMMMMMO.   .kMMMMMWl    ,KMMMMMK,     lWMMMMX:    .:oxxdc'    .dWMMMMMMMMMMMM0'\n//          '0MMMMMMMMMMMMMMMMMO.   .kMMMMMWl    ,KMMMMMK,     lWMMMWd.   ,OWMMMMMXl.   '0MMMMMMMMMMMM0'\n//          '0MMMMMMMMMMMMMMMMMO.   .kMMMMMWl    ,KMMMMMK,     lWMMMX;   .kMMMMMMMMK,   .xMMMMMMMMMMMM0'\n//          '0MMMMMMMMMMMMMMMMMO.   .kMMMMMWl    ,KMMMMMK,     lWMMM0'   .OMMMMMMMMX;   .xMMMMMMMMMMMM0'\n//          .OMMMMMMMMMMMMMMMMMO.   .kMMMMMWl    ,KMMMMMK,     lWMMMK,    lNMMMMMMWx.   '0MMMMMMMMMMMMO.\n//           lNMMMMMMMMMMMMMMMMO.   .kMMMMMWl    ,KMMMMMK,     lWMMMWd.   .:x0KKKkc.   .dWMMMMMMMMMMMNl\n//      .    .c0WMMMMMMMMMMMMMMO.   .kMMMMMWo    ,KMMMMMK,     lWMMMMNd.     ....     .xNMMMMMMMMMMW0c.    .\n//      l      .,lddxxxxxxxxxxxc.    :xxxxxd,    .lxxxxxl.     ,dxxxxxd:.            .cdxxxxxxxxddl,.      l\n//      No.                                                                                              .oN\n//      MW0l'                                                                                          'l0WM\n//      MMMWKd;.                                                                                    .;dKWMMM\n//\n// // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // //\n",
  "sourcePath": "/Users/iii6/Documents/GitHub/Gamble360/contracts/iii6Utils/Oracles/iii6PriceConsumer.sol",
  "ast": {
    "absolutePath": "project:/contracts/iii6Utils/Oracles/iii6PriceConsumer.sol",
    "exportedSymbols": {
      "AggregatorV3Interface": [
        103
      ],
      "LinkTokenInterface": [
        198
      ],
      "iii6PriceConsumer": [
        8506
      ]
    },
    "id": 8507,
    "license": "GPL-3.0",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 7962,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".7"
        ],
        "nodeType": "PragmaDirective",
        "src": "8665:23:46"
      },
      {
        "absolutePath": "@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol",
        "file": "@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol",
        "id": 7963,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 8507,
        "sourceUnit": 104,
        "src": "8690:76:46",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@chainlink/contracts/src/v0.8/interfaces/LinkTokenInterface.sol",
        "file": "@chainlink/contracts/src/v0.8/interfaces/LinkTokenInterface.sol",
        "id": 7964,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 8507,
        "sourceUnit": 199,
        "src": "8767:73:46",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "iii6PriceConsumer",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 8506,
        "linearizedBaseContracts": [
          8506
        ],
        "name": "iii6PriceConsumer",
        "nameLocation": "8851:17:46",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "documentation": {
              "id": 7965,
              "nodeType": "StructuredDocumentation",
              "src": "8875:104:46",
              "text": " @dev this contract is a price consumer contract with all possible networks integrated"
            },
            "id": 7968,
            "mutability": "mutable",
            "name": "ethUSDagg",
            "nameLocation": "10701:9:46",
            "nodeType": "VariableDeclaration",
            "scope": 8506,
            "src": "10670:40:46",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_AggregatorV3Interface_$103",
              "typeString": "contract AggregatorV3Interface"
            },
            "typeName": {
              "id": 7967,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 7966,
                "name": "AggregatorV3Interface",
                "nameLocations": [
                  "10670:21:46"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 103,
                "src": "10670:21:46"
              },
              "referencedDeclaration": 103,
              "src": "10670:21:46",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_AggregatorV3Interface_$103",
                "typeString": "contract AggregatorV3Interface"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 7971,
            "mutability": "mutable",
            "name": "mainUSDagg",
            "nameLocation": "10747:10:46",
            "nodeType": "VariableDeclaration",
            "scope": 8506,
            "src": "10716:41:46",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_AggregatorV3Interface_$103",
              "typeString": "contract AggregatorV3Interface"
            },
            "typeName": {
              "id": 7970,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 7969,
                "name": "AggregatorV3Interface",
                "nameLocations": [
                  "10716:21:46"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 103,
                "src": "10716:21:46"
              },
              "referencedDeclaration": 103,
              "src": "10716:21:46",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_AggregatorV3Interface_$103",
                "typeString": "contract AggregatorV3Interface"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 7974,
            "mutability": "mutable",
            "name": "xUSDagg",
            "nameLocation": "10794:7:46",
            "nodeType": "VariableDeclaration",
            "scope": 8506,
            "src": "10763:38:46",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_AggregatorV3Interface_$103",
              "typeString": "contract AggregatorV3Interface"
            },
            "typeName": {
              "id": 7973,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 7972,
                "name": "AggregatorV3Interface",
                "nameLocations": [
                  "10763:21:46"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 103,
                "src": "10763:21:46"
              },
              "referencedDeclaration": 103,
              "src": "10763:21:46",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_AggregatorV3Interface_$103",
                "typeString": "contract AggregatorV3Interface"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 7977,
            "mutability": "mutable",
            "name": "yUSDagg",
            "nameLocation": "10838:7:46",
            "nodeType": "VariableDeclaration",
            "scope": 8506,
            "src": "10807:38:46",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_AggregatorV3Interface_$103",
              "typeString": "contract AggregatorV3Interface"
            },
            "typeName": {
              "id": 7976,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 7975,
                "name": "AggregatorV3Interface",
                "nameLocations": [
                  "10807:21:46"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 103,
                "src": "10807:21:46"
              },
              "referencedDeclaration": 103,
              "src": "10807:21:46",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_AggregatorV3Interface_$103",
                "typeString": "contract AggregatorV3Interface"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 7979,
            "mutability": "mutable",
            "name": "xDig",
            "nameLocation": "10859:4:46",
            "nodeType": "VariableDeclaration",
            "scope": 8506,
            "src": "10851:12:46",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 7978,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "10851:7:46",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 7981,
            "mutability": "mutable",
            "name": "yDig",
            "nameLocation": "10877:4:46",
            "nodeType": "VariableDeclaration",
            "scope": 8506,
            "src": "10869:12:46",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 7980,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "10869:7:46",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "internal"
          },
          {
            "body": {
              "id": 8314,
              "nodeType": "Block",
              "src": "10902:28312:46",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 7987,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 7984,
                        "name": "block",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967292,
                        "src": "12032:5:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_block",
                          "typeString": "block"
                        }
                      },
                      "id": 7985,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "12038:7:46",
                      "memberName": "chainid",
                      "nodeType": "MemberAccess",
                      "src": "12032:13:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "31",
                      "id": 7986,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "12049:1:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "12032:18:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "condition": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 8004,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "expression": {
                          "id": 8001,
                          "name": "block",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967292,
                          "src": "13213:5:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_block",
                            "typeString": "block"
                          }
                        },
                        "id": 8002,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "13219:7:46",
                        "memberName": "chainid",
                        "nodeType": "MemberAccess",
                        "src": "13213:13:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "hexValue": "35",
                        "id": 8003,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "13230:1:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_5_by_1",
                          "typeString": "int_const 5"
                        },
                        "value": "5"
                      },
                      "src": "13213:18:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseBody": {
                      "condition": {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 8021,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 8018,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967292,
                            "src": "14103:5:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 8019,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "14109:7:46",
                          "memberName": "chainid",
                          "nodeType": "MemberAccess",
                          "src": "14103:13:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "3433313133",
                          "id": 8020,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "14120:5:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_43113_by_1",
                            "typeString": "int_const 43113"
                          },
                          "value": "43113"
                        },
                        "src": "14103:22:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "falseBody": {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 8038,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 8035,
                              "name": "block",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967292,
                              "src": "15090:5:46",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_block",
                                "typeString": "block"
                              }
                            },
                            "id": 8036,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "15096:7:46",
                            "memberName": "chainid",
                            "nodeType": "MemberAccess",
                            "src": "15090:13:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "hexValue": "3433313134",
                            "id": 8037,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "15107:5:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_43114_by_1",
                              "typeString": "int_const 43114"
                            },
                            "value": "43114"
                          },
                          "src": "15090:22:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "condition": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 8055,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "id": 8052,
                                "name": "block",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967292,
                                "src": "17106:5:46",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_block",
                                  "typeString": "block"
                                }
                              },
                              "id": 8053,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "17112:7:46",
                              "memberName": "chainid",
                              "nodeType": "MemberAccess",
                              "src": "17106:13:46",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "hexValue": "34303032",
                              "id": 8054,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "17123:4:46",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_4002_by_1",
                                "typeString": "int_const 4002"
                              },
                              "value": "4002"
                            },
                            "src": "17106:21:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "falseBody": {
                            "condition": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 8072,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 8069,
                                  "name": "block",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4294967292,
                                  "src": "18457:5:46",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_block",
                                    "typeString": "block"
                                  }
                                },
                                "id": 8070,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "18463:7:46",
                                "memberName": "chainid",
                                "nodeType": "MemberAccess",
                                "src": "18457:13:46",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "hexValue": "323530",
                                "id": 8071,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "18474:3:46",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_250_by_1",
                                  "typeString": "int_const 250"
                                },
                                "value": "250"
                              },
                              "src": "18457:20:46",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "falseBody": {
                              "condition": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 8089,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "expression": {
                                    "id": 8086,
                                    "name": "block",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 4294967292,
                                    "src": "19759:5:46",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_block",
                                      "typeString": "block"
                                    }
                                  },
                                  "id": 8087,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "19765:7:46",
                                  "memberName": "chainid",
                                  "nodeType": "MemberAccess",
                                  "src": "19759:13:46",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "==",
                                "rightExpression": {
                                  "hexValue": "3830303031",
                                  "id": 8088,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "19776:5:46",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_80001_by_1",
                                    "typeString": "int_const 80001"
                                  },
                                  "value": "80001"
                                },
                                "src": "19759:22:46",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "falseBody": {
                                "condition": {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 8106,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "expression": {
                                      "id": 8103,
                                      "name": "block",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 4294967292,
                                      "src": "21219:5:46",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_block",
                                        "typeString": "block"
                                      }
                                    },
                                    "id": 8104,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "21225:7:46",
                                    "memberName": "chainid",
                                    "nodeType": "MemberAccess",
                                    "src": "21219:13:46",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "==",
                                  "rightExpression": {
                                    "hexValue": "313337",
                                    "id": 8105,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "21236:3:46",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_137_by_1",
                                      "typeString": "int_const 137"
                                    },
                                    "value": "137"
                                  },
                                  "src": "21219:20:46",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "falseBody": {
                                  "condition": {
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 8123,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "expression": {
                                        "id": 8120,
                                        "name": "block",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 4294967292,
                                        "src": "22048:5:46",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_magic_block",
                                          "typeString": "block"
                                        }
                                      },
                                      "id": 8121,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberLocation": "22054:7:46",
                                      "memberName": "chainid",
                                      "nodeType": "MemberAccess",
                                      "src": "22048:13:46",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "==",
                                    "rightExpression": {
                                      "hexValue": "313337",
                                      "id": 8122,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "22065:3:46",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_137_by_1",
                                        "typeString": "int_const 137"
                                      },
                                      "value": "137"
                                    },
                                    "src": "22048:20:46",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  "falseBody": {
                                    "condition": {
                                      "commonType": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      "id": 8140,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "expression": {
                                          "id": 8137,
                                          "name": "block",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 4294967292,
                                          "src": "23327:5:46",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_magic_block",
                                            "typeString": "block"
                                          }
                                        },
                                        "id": 8138,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberLocation": "23333:7:46",
                                        "memberName": "chainid",
                                        "nodeType": "MemberAccess",
                                        "src": "23327:13:46",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "==",
                                      "rightExpression": {
                                        "hexValue": "313337",
                                        "id": 8139,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "23344:3:46",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_137_by_1",
                                          "typeString": "int_const 137"
                                        },
                                        "value": "137"
                                      },
                                      "src": "23327:20:46",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      }
                                    },
                                    "falseBody": {
                                      "condition": {
                                        "commonType": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        },
                                        "id": 8157,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftExpression": {
                                          "expression": {
                                            "id": 8154,
                                            "name": "block",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 4294967292,
                                            "src": "24534:5:46",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_magic_block",
                                              "typeString": "block"
                                            }
                                          },
                                          "id": 8155,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "memberLocation": "24540:7:46",
                                          "memberName": "chainid",
                                          "nodeType": "MemberAccess",
                                          "src": "24534:13:46",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "nodeType": "BinaryOperation",
                                        "operator": "==",
                                        "rightExpression": {
                                          "hexValue": "313030",
                                          "id": 8156,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "kind": "number",
                                          "lValueRequested": false,
                                          "nodeType": "Literal",
                                          "src": "24551:3:46",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_rational_100_by_1",
                                            "typeString": "int_const 100"
                                          },
                                          "value": "100"
                                        },
                                        "src": "24534:20:46",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bool",
                                          "typeString": "bool"
                                        }
                                      },
                                      "falseBody": {
                                        "condition": {
                                          "commonType": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          },
                                          "id": 8174,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "leftExpression": {
                                            "expression": {
                                              "id": 8171,
                                              "name": "block",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 4294967292,
                                              "src": "25902:5:46",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_magic_block",
                                                "typeString": "block"
                                              }
                                            },
                                            "id": 8172,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "memberLocation": "25908:7:46",
                                            "memberName": "chainid",
                                            "nodeType": "MemberAccess",
                                            "src": "25902:13:46",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "nodeType": "BinaryOperation",
                                          "operator": "==",
                                          "rightExpression": {
                                            "hexValue": "3432313631",
                                            "id": 8173,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "kind": "number",
                                            "lValueRequested": false,
                                            "nodeType": "Literal",
                                            "src": "25919:5:46",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_rational_42161_by_1",
                                              "typeString": "int_const 42161"
                                            },
                                            "value": "42161"
                                          },
                                          "src": "25902:22:46",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_bool",
                                            "typeString": "bool"
                                          }
                                        },
                                        "falseBody": {
                                          "condition": {
                                            "commonType": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            },
                                            "id": 8191,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "leftExpression": {
                                              "expression": {
                                                "id": 8188,
                                                "name": "block",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 4294967292,
                                                "src": "27620:5:46",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_magic_block",
                                                  "typeString": "block"
                                                }
                                              },
                                              "id": 8189,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "memberLocation": "27626:7:46",
                                              "memberName": "chainid",
                                              "nodeType": "MemberAccess",
                                              "src": "27620:13:46",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            },
                                            "nodeType": "BinaryOperation",
                                            "operator": "==",
                                            "rightExpression": {
                                              "hexValue": "343231363133",
                                              "id": 8190,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": true,
                                              "kind": "number",
                                              "lValueRequested": false,
                                              "nodeType": "Literal",
                                              "src": "27637:6:46",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_rational_421613_by_1",
                                                "typeString": "int_const 421613"
                                              },
                                              "value": "421613"
                                            },
                                            "src": "27620:23:46",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_bool",
                                              "typeString": "bool"
                                            }
                                          },
                                          "falseBody": {
                                            "condition": {
                                              "commonType": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              },
                                              "id": 8208,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "leftExpression": {
                                                "expression": {
                                                  "id": 8205,
                                                  "name": "block",
                                                  "nodeType": "Identifier",
                                                  "overloadedDeclarations": [],
                                                  "referencedDeclaration": 4294967292,
                                                  "src": "29126:5:46",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_magic_block",
                                                    "typeString": "block"
                                                  }
                                                },
                                                "id": 8206,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "memberLocation": "29132:7:46",
                                                "memberName": "chainid",
                                                "nodeType": "MemberAccess",
                                                "src": "29126:13:46",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_uint256",
                                                  "typeString": "uint256"
                                                }
                                              },
                                              "nodeType": "BinaryOperation",
                                              "operator": "==",
                                              "rightExpression": {
                                                "hexValue": "3130",
                                                "id": 8207,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": true,
                                                "kind": "number",
                                                "lValueRequested": false,
                                                "nodeType": "Literal",
                                                "src": "29143:2:46",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_rational_10_by_1",
                                                  "typeString": "int_const 10"
                                                },
                                                "value": "10"
                                              },
                                              "src": "29126:19:46",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_bool",
                                                "typeString": "bool"
                                              }
                                            },
                                            "falseBody": {
                                              "condition": {
                                                "commonType": {
                                                  "typeIdentifier": "t_uint256",
                                                  "typeString": "uint256"
                                                },
                                                "id": 8225,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "leftExpression": {
                                                  "expression": {
                                                    "id": 8222,
                                                    "name": "block",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 4294967292,
                                                    "src": "30675:5:46",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_magic_block",
                                                      "typeString": "block"
                                                    }
                                                  },
                                                  "id": 8223,
                                                  "isConstant": false,
                                                  "isLValue": false,
                                                  "isPure": false,
                                                  "lValueRequested": false,
                                                  "memberLocation": "30681:7:46",
                                                  "memberName": "chainid",
                                                  "nodeType": "MemberAccess",
                                                  "src": "30675:13:46",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                  }
                                                },
                                                "nodeType": "BinaryOperation",
                                                "operator": "==",
                                                "rightExpression": {
                                                  "hexValue": "343231363133",
                                                  "id": 8224,
                                                  "isConstant": false,
                                                  "isLValue": false,
                                                  "isPure": true,
                                                  "kind": "number",
                                                  "lValueRequested": false,
                                                  "nodeType": "Literal",
                                                  "src": "30692:6:46",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_rational_421613_by_1",
                                                    "typeString": "int_const 421613"
                                                  },
                                                  "value": "421613"
                                                },
                                                "src": "30675:23:46",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_bool",
                                                  "typeString": "bool"
                                                }
                                              },
                                              "falseBody": {
                                                "condition": {
                                                  "commonType": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                  },
                                                  "id": 8242,
                                                  "isConstant": false,
                                                  "isLValue": false,
                                                  "isPure": false,
                                                  "lValueRequested": false,
                                                  "leftExpression": {
                                                    "expression": {
                                                      "id": 8239,
                                                      "name": "block",
                                                      "nodeType": "Identifier",
                                                      "overloadedDeclarations": [],
                                                      "referencedDeclaration": 4294967292,
                                                      "src": "32516:5:46",
                                                      "typeDescriptions": {
                                                        "typeIdentifier": "t_magic_block",
                                                        "typeString": "block"
                                                      }
                                                    },
                                                    "id": 8240,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": false,
                                                    "lValueRequested": false,
                                                    "memberLocation": "32522:7:46",
                                                    "memberName": "chainid",
                                                    "nodeType": "MemberAccess",
                                                    "src": "32516:13:46",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_uint256",
                                                      "typeString": "uint256"
                                                    }
                                                  },
                                                  "nodeType": "BinaryOperation",
                                                  "operator": "==",
                                                  "rightExpression": {
                                                    "hexValue": "31323835",
                                                    "id": 8241,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": true,
                                                    "kind": "number",
                                                    "lValueRequested": false,
                                                    "nodeType": "Literal",
                                                    "src": "32533:4:46",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_rational_1285_by_1",
                                                      "typeString": "int_const 1285"
                                                    },
                                                    "value": "1285"
                                                  },
                                                  "src": "32516:21:46",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                  }
                                                },
                                                "falseBody": {
                                                  "condition": {
                                                    "commonType": {
                                                      "typeIdentifier": "t_uint256",
                                                      "typeString": "uint256"
                                                    },
                                                    "id": 8259,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": false,
                                                    "lValueRequested": false,
                                                    "leftExpression": {
                                                      "expression": {
                                                        "id": 8256,
                                                        "name": "block",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 4294967292,
                                                        "src": "34194:5:46",
                                                        "typeDescriptions": {
                                                          "typeIdentifier": "t_magic_block",
                                                          "typeString": "block"
                                                        }
                                                      },
                                                      "id": 8257,
                                                      "isConstant": false,
                                                      "isLValue": false,
                                                      "isPure": false,
                                                      "lValueRequested": false,
                                                      "memberLocation": "34200:7:46",
                                                      "memberName": "chainid",
                                                      "nodeType": "MemberAccess",
                                                      "src": "34194:13:46",
                                                      "typeDescriptions": {
                                                        "typeIdentifier": "t_uint256",
                                                        "typeString": "uint256"
                                                      }
                                                    },
                                                    "nodeType": "BinaryOperation",
                                                    "operator": "==",
                                                    "rightExpression": {
                                                      "hexValue": "31323834",
                                                      "id": 8258,
                                                      "isConstant": false,
                                                      "isLValue": false,
                                                      "isPure": true,
                                                      "kind": "number",
                                                      "lValueRequested": false,
                                                      "nodeType": "Literal",
                                                      "src": "34211:4:46",
                                                      "typeDescriptions": {
                                                        "typeIdentifier": "t_rational_1284_by_1",
                                                        "typeString": "int_const 1284"
                                                      },
                                                      "value": "1284"
                                                    },
                                                    "src": "34194:21:46",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_bool",
                                                      "typeString": "bool"
                                                    }
                                                  },
                                                  "falseBody": {
                                                    "condition": {
                                                      "commonType": {
                                                        "typeIdentifier": "t_uint256",
                                                        "typeString": "uint256"
                                                      },
                                                      "id": 8276,
                                                      "isConstant": false,
                                                      "isLValue": false,
                                                      "isPure": false,
                                                      "lValueRequested": false,
                                                      "leftExpression": {
                                                        "expression": {
                                                          "id": 8273,
                                                          "name": "block",
                                                          "nodeType": "Identifier",
                                                          "overloadedDeclarations": [],
                                                          "referencedDeclaration": 4294967292,
                                                          "src": "35287:5:46",
                                                          "typeDescriptions": {
                                                            "typeIdentifier": "t_magic_block",
                                                            "typeString": "block"
                                                          }
                                                        },
                                                        "id": 8274,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": false,
                                                        "lValueRequested": false,
                                                        "memberLocation": "35293:7:46",
                                                        "memberName": "chainid",
                                                        "nodeType": "MemberAccess",
                                                        "src": "35287:13:46",
                                                        "typeDescriptions": {
                                                          "typeIdentifier": "t_uint256",
                                                          "typeString": "uint256"
                                                        }
                                                      },
                                                      "nodeType": "BinaryOperation",
                                                      "operator": "==",
                                                      "rightExpression": {
                                                        "hexValue": "31303838",
                                                        "id": 8275,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": true,
                                                        "kind": "number",
                                                        "lValueRequested": false,
                                                        "nodeType": "Literal",
                                                        "src": "35304:4:46",
                                                        "typeDescriptions": {
                                                          "typeIdentifier": "t_rational_1088_by_1",
                                                          "typeString": "int_const 1088"
                                                        },
                                                        "value": "1088"
                                                      },
                                                      "src": "35287:21:46",
                                                      "typeDescriptions": {
                                                        "typeIdentifier": "t_bool",
                                                        "typeString": "bool"
                                                      }
                                                    },
                                                    "falseBody": {
                                                      "condition": {
                                                        "commonType": {
                                                          "typeIdentifier": "t_uint256",
                                                          "typeString": "uint256"
                                                        },
                                                        "id": 8293,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": false,
                                                        "lValueRequested": false,
                                                        "leftExpression": {
                                                          "expression": {
                                                            "id": 8290,
                                                            "name": "block",
                                                            "nodeType": "Identifier",
                                                            "overloadedDeclarations": [],
                                                            "referencedDeclaration": 4294967292,
                                                            "src": "36605:5:46",
                                                            "typeDescriptions": {
                                                              "typeIdentifier": "t_magic_block",
                                                              "typeString": "block"
                                                            }
                                                          },
                                                          "id": 8291,
                                                          "isConstant": false,
                                                          "isLValue": false,
                                                          "isPure": false,
                                                          "lValueRequested": false,
                                                          "memberLocation": "36611:7:46",
                                                          "memberName": "chainid",
                                                          "nodeType": "MemberAccess",
                                                          "src": "36605:13:46",
                                                          "typeDescriptions": {
                                                            "typeIdentifier": "t_uint256",
                                                            "typeString": "uint256"
                                                          }
                                                        },
                                                        "nodeType": "BinaryOperation",
                                                        "operator": "==",
                                                        "rightExpression": {
                                                          "hexValue": "38323137",
                                                          "id": 8292,
                                                          "isConstant": false,
                                                          "isLValue": false,
                                                          "isPure": true,
                                                          "kind": "number",
                                                          "lValueRequested": false,
                                                          "nodeType": "Literal",
                                                          "src": "36622:4:46",
                                                          "typeDescriptions": {
                                                            "typeIdentifier": "t_rational_8217_by_1",
                                                            "typeString": "int_const 8217"
                                                          },
                                                          "value": "8217"
                                                        },
                                                        "src": "36605:21:46",
                                                        "typeDescriptions": {
                                                          "typeIdentifier": "t_bool",
                                                          "typeString": "bool"
                                                        }
                                                      },
                                                      "id": 8295,
                                                      "nodeType": "IfStatement",
                                                      "src": "36601:398:46",
                                                      "trueBody": {
                                                        "id": 8294,
                                                        "nodeType": "Block",
                                                        "src": "36628:371:46",
                                                        "statements": []
                                                      }
                                                    },
                                                    "id": 8296,
                                                    "nodeType": "IfStatement",
                                                    "src": "35283:1716:46",
                                                    "trueBody": {
                                                      "id": 8289,
                                                      "nodeType": "Block",
                                                      "src": "35310:287:46",
                                                      "statements": [
                                                        {
                                                          "expression": {
                                                            "id": 8281,
                                                            "isConstant": false,
                                                            "isLValue": false,
                                                            "isPure": false,
                                                            "lValueRequested": false,
                                                            "leftHandSide": {
                                                              "id": 8277,
                                                              "name": "ethUSDagg",
                                                              "nodeType": "Identifier",
                                                              "overloadedDeclarations": [],
                                                              "referencedDeclaration": 7968,
                                                              "src": "35357:9:46",
                                                              "typeDescriptions": {
                                                                "typeIdentifier": "t_contract$_AggregatorV3Interface_$103",
                                                                "typeString": "contract AggregatorV3Interface"
                                                              }
                                                            },
                                                            "nodeType": "Assignment",
                                                            "operator": "=",
                                                            "rightHandSide": {
                                                              "arguments": [
                                                                {
                                                                  "hexValue": "307833424265373065324639366338376145636537463637413262303137383035326636324533376645",
                                                                  "id": 8279,
                                                                  "isConstant": false,
                                                                  "isLValue": false,
                                                                  "isPure": true,
                                                                  "kind": "number",
                                                                  "lValueRequested": false,
                                                                  "nodeType": "Literal",
                                                                  "src": "35408:42:46",
                                                                  "typeDescriptions": {
                                                                    "typeIdentifier": "t_address",
                                                                    "typeString": "address"
                                                                  },
                                                                  "value": "0x3BBe70e2F96c87aEce7F67A2b0178052f62E37fE"
                                                                }
                                                              ],
                                                              "expression": {
                                                                "argumentTypes": [
                                                                  {
                                                                    "typeIdentifier": "t_address",
                                                                    "typeString": "address"
                                                                  }
                                                                ],
                                                                "id": 8278,
                                                                "name": "AggregatorV3Interface",
                                                                "nodeType": "Identifier",
                                                                "overloadedDeclarations": [],
                                                                "referencedDeclaration": 103,
                                                                "src": "35369:21:46",
                                                                "typeDescriptions": {
                                                                  "typeIdentifier": "t_type$_t_contract$_AggregatorV3Interface_$103_$",
                                                                  "typeString": "type(contract AggregatorV3Interface)"
                                                                }
                                                              },
                                                              "id": 8280,
                                                              "isConstant": false,
                                                              "isLValue": false,
                                                              "isPure": true,
                                                              "kind": "typeConversion",
                                                              "lValueRequested": false,
                                                              "nameLocations": [],
                                                              "names": [],
                                                              "nodeType": "FunctionCall",
                                                              "src": "35369:95:46",
                                                              "tryCall": false,
                                                              "typeDescriptions": {
                                                                "typeIdentifier": "t_contract$_AggregatorV3Interface_$103",
                                                                "typeString": "contract AggregatorV3Interface"
                                                              }
                                                            },
                                                            "src": "35357:107:46",
                                                            "typeDescriptions": {
                                                              "typeIdentifier": "t_contract$_AggregatorV3Interface_$103",
                                                              "typeString": "contract AggregatorV3Interface"
                                                            }
                                                          },
                                                          "id": 8282,
                                                          "nodeType": "ExpressionStatement",
                                                          "src": "35357:107:46"
                                                        },
                                                        {
                                                          "expression": {
                                                            "id": 8287,
                                                            "isConstant": false,
                                                            "isLValue": false,
                                                            "isPure": false,
                                                            "lValueRequested": false,
                                                            "leftHandSide": {
                                                              "id": 8283,
                                                              "name": "mainUSDagg",
                                                              "nodeType": "Identifier",
                                                              "overloadedDeclarations": [],
                                                              "referencedDeclaration": 7971,
                                                              "src": "35478:10:46",
                                                              "typeDescriptions": {
                                                                "typeIdentifier": "t_contract$_AggregatorV3Interface_$103",
                                                                "typeString": "contract AggregatorV3Interface"
                                                              }
                                                            },
                                                            "nodeType": "Assignment",
                                                            "operator": "=",
                                                            "rightHandSide": {
                                                              "arguments": [
                                                                {
                                                                  "hexValue": "307844346135426230334235443636643962663831353037333739333032416332433244464446613644",
                                                                  "id": 8285,
                                                                  "isConstant": false,
                                                                  "isLValue": false,
                                                                  "isPure": true,
                                                                  "kind": "number",
                                                                  "lValueRequested": false,
                                                                  "nodeType": "Literal",
                                                                  "src": "35530:42:46",
                                                                  "typeDescriptions": {
                                                                    "typeIdentifier": "t_address",
                                                                    "typeString": "address"
                                                                  },
                                                                  "value": "0xD4a5Bb03B5D66d9bf81507379302Ac2C2DFDFa6D"
                                                                }
                                                              ],
                                                              "expression": {
                                                                "argumentTypes": [
                                                                  {
                                                                    "typeIdentifier": "t_address",
                                                                    "typeString": "address"
                                                                  }
                                                                ],
                                                                "id": 8284,
                                                                "name": "AggregatorV3Interface",
                                                                "nodeType": "Identifier",
                                                                "overloadedDeclarations": [],
                                                                "referencedDeclaration": 103,
                                                                "src": "35491:21:46",
                                                                "typeDescriptions": {
                                                                  "typeIdentifier": "t_type$_t_contract$_AggregatorV3Interface_$103_$",
                                                                  "typeString": "type(contract AggregatorV3Interface)"
                                                                }
                                                              },
                                                              "id": 8286,
                                                              "isConstant": false,
                                                              "isLValue": false,
                                                              "isPure": true,
                                                              "kind": "typeConversion",
                                                              "lValueRequested": false,
                                                              "nameLocations": [],
                                                              "names": [],
                                                              "nodeType": "FunctionCall",
                                                              "src": "35491:95:46",
                                                              "tryCall": false,
                                                              "typeDescriptions": {
                                                                "typeIdentifier": "t_contract$_AggregatorV3Interface_$103",
                                                                "typeString": "contract AggregatorV3Interface"
                                                              }
                                                            },
                                                            "src": "35478:108:46",
                                                            "typeDescriptions": {
                                                              "typeIdentifier": "t_contract$_AggregatorV3Interface_$103",
                                                              "typeString": "contract AggregatorV3Interface"
                                                            }
                                                          },
                                                          "id": 8288,
                                                          "nodeType": "ExpressionStatement",
                                                          "src": "35478:108:46"
                                                        }
                                                      ]
                                                    }
                                                  },
                                                  "id": 8297,
                                                  "nodeType": "IfStatement",
                                                  "src": "34190:2809:46",
                                                  "trueBody": {
                                                    "id": 8272,
                                                    "nodeType": "Block",
                                                    "src": "34217:278:46",
                                                    "statements": [
                                                      {
                                                        "expression": {
                                                          "id": 8264,
                                                          "isConstant": false,
                                                          "isLValue": false,
                                                          "isPure": false,
                                                          "lValueRequested": false,
                                                          "leftHandSide": {
                                                            "id": 8260,
                                                            "name": "ethUSDagg",
                                                            "nodeType": "Identifier",
                                                            "overloadedDeclarations": [],
                                                            "referencedDeclaration": 7968,
                                                            "src": "34255:9:46",
                                                            "typeDescriptions": {
                                                              "typeIdentifier": "t_contract$_AggregatorV3Interface_$103",
                                                              "typeString": "contract AggregatorV3Interface"
                                                            }
                                                          },
                                                          "nodeType": "Assignment",
                                                          "operator": "=",
                                                          "rightHandSide": {
                                                            "arguments": [
                                                              {
                                                                "hexValue": "307839636532333838613136393665323246383730333431433346433145383937313043373536394235",
                                                                "id": 8262,
                                                                "isConstant": false,
                                                                "isLValue": false,
                                                                "isPure": true,
                                                                "kind": "number",
                                                                "lValueRequested": false,
                                                                "nodeType": "Literal",
                                                                "src": "34306:42:46",
                                                                "typeDescriptions": {
                                                                  "typeIdentifier": "t_address",
                                                                  "typeString": "address"
                                                                },
                                                                "value": "0x9ce2388a1696e22F870341C3FC1E89710C7569B5"
                                                              }
                                                            ],
                                                            "expression": {
                                                              "argumentTypes": [
                                                                {
                                                                  "typeIdentifier": "t_address",
                                                                  "typeString": "address"
                                                                }
                                                              ],
                                                              "id": 8261,
                                                              "name": "AggregatorV3Interface",
                                                              "nodeType": "Identifier",
                                                              "overloadedDeclarations": [],
                                                              "referencedDeclaration": 103,
                                                              "src": "34267:21:46",
                                                              "typeDescriptions": {
                                                                "typeIdentifier": "t_type$_t_contract$_AggregatorV3Interface_$103_$",
                                                                "typeString": "type(contract AggregatorV3Interface)"
                                                              }
                                                            },
                                                            "id": 8263,
                                                            "isConstant": false,
                                                            "isLValue": false,
                                                            "isPure": true,
                                                            "kind": "typeConversion",
                                                            "lValueRequested": false,
                                                            "nameLocations": [],
                                                            "names": [],
                                                            "nodeType": "FunctionCall",
                                                            "src": "34267:95:46",
                                                            "tryCall": false,
                                                            "typeDescriptions": {
                                                              "typeIdentifier": "t_contract$_AggregatorV3Interface_$103",
                                                              "typeString": "contract AggregatorV3Interface"
                                                            }
                                                          },
                                                          "src": "34255:107:46",
                                                          "typeDescriptions": {
                                                            "typeIdentifier": "t_contract$_AggregatorV3Interface_$103",
                                                            "typeString": "contract AggregatorV3Interface"
                                                          }
                                                        },
                                                        "id": 8265,
                                                        "nodeType": "ExpressionStatement",
                                                        "src": "34255:107:46"
                                                      },
                                                      {
                                                        "expression": {
                                                          "id": 8270,
                                                          "isConstant": false,
                                                          "isLValue": false,
                                                          "isPure": false,
                                                          "lValueRequested": false,
                                                          "leftHandSide": {
                                                            "id": 8266,
                                                            "name": "mainUSDagg",
                                                            "nodeType": "Identifier",
                                                            "overloadedDeclarations": [],
                                                            "referencedDeclaration": 7971,
                                                            "src": "34376:10:46",
                                                            "typeDescriptions": {
                                                              "typeIdentifier": "t_contract$_AggregatorV3Interface_$103",
                                                              "typeString": "contract AggregatorV3Interface"
                                                            }
                                                          },
                                                          "nodeType": "Assignment",
                                                          "operator": "=",
                                                          "rightHandSide": {
                                                            "arguments": [
                                                              {
                                                                "hexValue": "307834343937423630366265393365373733626241356561434643623261633545323231343232304562",
                                                                "id": 8268,
                                                                "isConstant": false,
                                                                "isLValue": false,
                                                                "isPure": true,
                                                                "kind": "number",
                                                                "lValueRequested": false,
                                                                "nodeType": "Literal",
                                                                "src": "34428:42:46",
                                                                "typeDescriptions": {
                                                                  "typeIdentifier": "t_address",
                                                                  "typeString": "address"
                                                                },
                                                                "value": "0x4497B606be93e773bbA5eaCFCb2ac5E2214220Eb"
                                                              }
                                                            ],
                                                            "expression": {
                                                              "argumentTypes": [
                                                                {
                                                                  "typeIdentifier": "t_address",
                                                                  "typeString": "address"
                                                                }
                                                              ],
                                                              "id": 8267,
                                                              "name": "AggregatorV3Interface",
                                                              "nodeType": "Identifier",
                                                              "overloadedDeclarations": [],
                                                              "referencedDeclaration": 103,
                                                              "src": "34389:21:46",
                                                              "typeDescriptions": {
                                                                "typeIdentifier": "t_type$_t_contract$_AggregatorV3Interface_$103_$",
                                                                "typeString": "type(contract AggregatorV3Interface)"
                                                              }
                                                            },
                                                            "id": 8269,
                                                            "isConstant": false,
                                                            "isLValue": false,
                                                            "isPure": true,
                                                            "kind": "typeConversion",
                                                            "lValueRequested": false,
                                                            "nameLocations": [],
                                                            "names": [],
                                                            "nodeType": "FunctionCall",
                                                            "src": "34389:95:46",
                                                            "tryCall": false,
                                                            "typeDescriptions": {
                                                              "typeIdentifier": "t_contract$_AggregatorV3Interface_$103",
                                                              "typeString": "contract AggregatorV3Interface"
                                                            }
                                                          },
                                                          "src": "34376:108:46",
                                                          "typeDescriptions": {
                                                            "typeIdentifier": "t_contract$_AggregatorV3Interface_$103",
                                                            "typeString": "contract AggregatorV3Interface"
                                                          }
                                                        },
                                                        "id": 8271,
                                                        "nodeType": "ExpressionStatement",
                                                        "src": "34376:108:46"
                                                      }
                                                    ]
                                                  }
                                                },
                                                "id": 8298,
                                                "nodeType": "IfStatement",
                                                "src": "32512:4487:46",
                                                "trueBody": {
                                                  "id": 8255,
                                                  "nodeType": "Block",
                                                  "src": "32539:287:46",
                                                  "statements": [
                                                    {
                                                      "expression": {
                                                        "id": 8247,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": false,
                                                        "lValueRequested": false,
                                                        "leftHandSide": {
                                                          "id": 8243,
                                                          "name": "ethUSDagg",
                                                          "nodeType": "Identifier",
                                                          "overloadedDeclarations": [],
                                                          "referencedDeclaration": 7968,
                                                          "src": "32586:9:46",
                                                          "typeDescriptions": {
                                                            "typeIdentifier": "t_contract$_AggregatorV3Interface_$103",
                                                            "typeString": "contract AggregatorV3Interface"
                                                          }
                                                        },
                                                        "nodeType": "Assignment",
                                                        "operator": "=",
                                                        "rightHandSide": {
                                                          "arguments": [
                                                            {
                                                              "hexValue": "307863336346333939353636323230646335456436433843466266383234373231344166313033433732",
                                                              "id": 8245,
                                                              "isConstant": false,
                                                              "isLValue": false,
                                                              "isPure": true,
                                                              "kind": "number",
                                                              "lValueRequested": false,
                                                              "nodeType": "Literal",
                                                              "src": "32637:42:46",
                                                              "typeDescriptions": {
                                                                "typeIdentifier": "t_address",
                                                                "typeString": "address"
                                                              },
                                                              "value": "0xc3cF399566220dc5Ed6C8CFbf8247214Af103C72"
                                                            }
                                                          ],
                                                          "expression": {
                                                            "argumentTypes": [
                                                              {
                                                                "typeIdentifier": "t_address",
                                                                "typeString": "address"
                                                              }
                                                            ],
                                                            "id": 8244,
                                                            "name": "AggregatorV3Interface",
                                                            "nodeType": "Identifier",
                                                            "overloadedDeclarations": [],
                                                            "referencedDeclaration": 103,
                                                            "src": "32598:21:46",
                                                            "typeDescriptions": {
                                                              "typeIdentifier": "t_type$_t_contract$_AggregatorV3Interface_$103_$",
                                                              "typeString": "type(contract AggregatorV3Interface)"
                                                            }
                                                          },
                                                          "id": 8246,
                                                          "isConstant": false,
                                                          "isLValue": false,
                                                          "isPure": true,
                                                          "kind": "typeConversion",
                                                          "lValueRequested": false,
                                                          "nameLocations": [],
                                                          "names": [],
                                                          "nodeType": "FunctionCall",
                                                          "src": "32598:95:46",
                                                          "tryCall": false,
                                                          "typeDescriptions": {
                                                            "typeIdentifier": "t_contract$_AggregatorV3Interface_$103",
                                                            "typeString": "contract AggregatorV3Interface"
                                                          }
                                                        },
                                                        "src": "32586:107:46",
                                                        "typeDescriptions": {
                                                          "typeIdentifier": "t_contract$_AggregatorV3Interface_$103",
                                                          "typeString": "contract AggregatorV3Interface"
                                                        }
                                                      },
                                                      "id": 8248,
                                                      "nodeType": "ExpressionStatement",
                                                      "src": "32586:107:46"
                                                    },
                                                    {
                                                      "expression": {
                                                        "id": 8253,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": false,
                                                        "lValueRequested": false,
                                                        "leftHandSide": {
                                                          "id": 8249,
                                                          "name": "mainUSDagg",
                                                          "nodeType": "Identifier",
                                                          "overloadedDeclarations": [],
                                                          "referencedDeclaration": 7971,
                                                          "src": "32707:10:46",
                                                          "typeDescriptions": {
                                                            "typeIdentifier": "t_contract$_AggregatorV3Interface_$103",
                                                            "typeString": "contract AggregatorV3Interface"
                                                          }
                                                        },
                                                        "nodeType": "Assignment",
                                                        "operator": "=",
                                                        "rightHandSide": {
                                                          "arguments": [
                                                            {
                                                              "hexValue": "307833663842466244633165373937373735313163303041643835393163656638383843323131334331",
                                                              "id": 8251,
                                                              "isConstant": false,
                                                              "isLValue": false,
                                                              "isPure": true,
                                                              "kind": "number",
                                                              "lValueRequested": false,
                                                              "nodeType": "Literal",
                                                              "src": "32759:42:46",
                                                              "typeDescriptions": {
                                                                "typeIdentifier": "t_address",
                                                                "typeString": "address"
                                                              },
                                                              "value": "0x3f8BFbDc1e79777511c00Ad8591cef888C2113C1"
                                                            }
                                                          ],
                                                          "expression": {
                                                            "argumentTypes": [
                                                              {
                                                                "typeIdentifier": "t_address",
                                                                "typeString": "address"
                                                              }
                                                            ],
                                                            "id": 8250,
                                                            "name": "AggregatorV3Interface",
                                                            "nodeType": "Identifier",
                                                            "overloadedDeclarations": [],
                                                            "referencedDeclaration": 103,
                                                            "src": "32720:21:46",
                                                            "typeDescriptions": {
                                                              "typeIdentifier": "t_type$_t_contract$_AggregatorV3Interface_$103_$",
                                                              "typeString": "type(contract AggregatorV3Interface)"
                                                            }
                                                          },
                                                          "id": 8252,
                                                          "isConstant": false,
                                                          "isLValue": false,
                                                          "isPure": true,
                                                          "kind": "typeConversion",
                                                          "lValueRequested": false,
                                                          "nameLocations": [],
                                                          "names": [],
                                                          "nodeType": "FunctionCall",
                                                          "src": "32720:95:46",
                                                          "tryCall": false,
                                                          "typeDescriptions": {
                                                            "typeIdentifier": "t_contract$_AggregatorV3Interface_$103",
                                                            "typeString": "contract AggregatorV3Interface"
                                                          }
                                                        },
                                                        "src": "32707:108:46",
                                                        "typeDescriptions": {
                                                          "typeIdentifier": "t_contract$_AggregatorV3Interface_$103",
                                                          "typeString": "contract AggregatorV3Interface"
                                                        }
                                                      },
                                                      "id": 8254,
                                                      "nodeType": "ExpressionStatement",
                                                      "src": "32707:108:46"
                                                    }
                                                  ]
                                                }
                                              },
                                              "id": 8299,
                                              "nodeType": "IfStatement",
                                              "src": "30671:6328:46",
                                              "trueBody": {
                                                "id": 8238,
                                                "nodeType": "Block",
                                                "src": "30700:286:46",
                                                "statements": [
                                                  {
                                                    "expression": {
                                                      "id": 8230,
                                                      "isConstant": false,
                                                      "isLValue": false,
                                                      "isPure": false,
                                                      "lValueRequested": false,
                                                      "leftHandSide": {
                                                        "id": 8226,
                                                        "name": "ethUSDagg",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 7968,
                                                        "src": "30746:9:46",
                                                        "typeDescriptions": {
                                                          "typeIdentifier": "t_contract$_AggregatorV3Interface_$103",
                                                          "typeString": "contract AggregatorV3Interface"
                                                        }
                                                      },
                                                      "nodeType": "Assignment",
                                                      "operator": "=",
                                                      "rightHandSide": {
                                                        "arguments": [
                                                          {
                                                            "hexValue": "307835373234314133373733333938334639374334416230363434384632343441314530436130626138",
                                                            "id": 8228,
                                                            "isConstant": false,
                                                            "isLValue": false,
                                                            "isPure": true,
                                                            "kind": "number",
                                                            "lValueRequested": false,
                                                            "nodeType": "Literal",
                                                            "src": "30797:42:46",
                                                            "typeDescriptions": {
                                                              "typeIdentifier": "t_address",
                                                              "typeString": "address"
                                                            },
                                                            "value": "0x57241A37733983F97C4Ab06448F244A1E0Ca0ba8"
                                                          }
                                                        ],
                                                        "expression": {
                                                          "argumentTypes": [
                                                            {
                                                              "typeIdentifier": "t_address",
                                                              "typeString": "address"
                                                            }
                                                          ],
                                                          "id": 8227,
                                                          "name": "AggregatorV3Interface",
                                                          "nodeType": "Identifier",
                                                          "overloadedDeclarations": [],
                                                          "referencedDeclaration": 103,
                                                          "src": "30758:21:46",
                                                          "typeDescriptions": {
                                                            "typeIdentifier": "t_type$_t_contract$_AggregatorV3Interface_$103_$",
                                                            "typeString": "type(contract AggregatorV3Interface)"
                                                          }
                                                        },
                                                        "id": 8229,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": true,
                                                        "kind": "typeConversion",
                                                        "lValueRequested": false,
                                                        "nameLocations": [],
                                                        "names": [],
                                                        "nodeType": "FunctionCall",
                                                        "src": "30758:95:46",
                                                        "tryCall": false,
                                                        "typeDescriptions": {
                                                          "typeIdentifier": "t_contract$_AggregatorV3Interface_$103",
                                                          "typeString": "contract AggregatorV3Interface"
                                                        }
                                                      },
                                                      "src": "30746:107:46",
                                                      "typeDescriptions": {
                                                        "typeIdentifier": "t_contract$_AggregatorV3Interface_$103",
                                                        "typeString": "contract AggregatorV3Interface"
                                                      }
                                                    },
                                                    "id": 8231,
                                                    "nodeType": "ExpressionStatement",
                                                    "src": "30746:107:46"
                                                  },
                                                  {
                                                    "expression": {
                                                      "id": 8236,
                                                      "isConstant": false,
                                                      "isLValue": false,
                                                      "isPure": false,
                                                      "lValueRequested": false,
                                                      "leftHandSide": {
                                                        "id": 8232,
                                                        "name": "mainUSDagg",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 7971,
                                                        "src": "30867:10:46",
                                                        "typeDescriptions": {
                                                          "typeIdentifier": "t_contract$_AggregatorV3Interface_$103",
                                                          "typeString": "contract AggregatorV3Interface"
                                                        }
                                                      },
                                                      "nodeType": "Assignment",
                                                      "operator": "=",
                                                      "rightHandSide": {
                                                        "arguments": [
                                                          {
                                                            "hexValue": "307835373234314133373733333938334639374334416230363434384632343441314530436130626138",
                                                            "id": 8234,
                                                            "isConstant": false,
                                                            "isLValue": false,
                                                            "isPure": true,
                                                            "kind": "number",
                                                            "lValueRequested": false,
                                                            "nodeType": "Literal",
                                                            "src": "30919:42:46",
                                                            "typeDescriptions": {
                                                              "typeIdentifier": "t_address",
                                                              "typeString": "address"
                                                            },
                                                            "value": "0x57241A37733983F97C4Ab06448F244A1E0Ca0ba8"
                                                          }
                                                        ],
                                                        "expression": {
                                                          "argumentTypes": [
                                                            {
                                                              "typeIdentifier": "t_address",
                                                              "typeString": "address"
                                                            }
                                                          ],
                                                          "id": 8233,
                                                          "name": "AggregatorV3Interface",
                                                          "nodeType": "Identifier",
                                                          "overloadedDeclarations": [],
                                                          "referencedDeclaration": 103,
                                                          "src": "30880:21:46",
                                                          "typeDescriptions": {
                                                            "typeIdentifier": "t_type$_t_contract$_AggregatorV3Interface_$103_$",
                                                            "typeString": "type(contract AggregatorV3Interface)"
                                                          }
                                                        },
                                                        "id": 8235,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": true,
                                                        "kind": "typeConversion",
                                                        "lValueRequested": false,
                                                        "nameLocations": [],
                                                        "names": [],
                                                        "nodeType": "FunctionCall",
                                                        "src": "30880:95:46",
                                                        "tryCall": false,
                                                        "typeDescriptions": {
                                                          "typeIdentifier": "t_contract$_AggregatorV3Interface_$103",
                                                          "typeString": "contract AggregatorV3Interface"
                                                        }
                                                      },
                                                      "src": "30867:108:46",
                                                      "typeDescriptions": {
                                                        "typeIdentifier": "t_contract$_AggregatorV3Interface_$103",
                                                        "typeString": "contract AggregatorV3Interface"
                                                      }
                                                    },
                                                    "id": 8237,
                                                    "nodeType": "ExpressionStatement",
                                                    "src": "30867:108:46"
                                                  }
                                                ]
                                              }
                                            },
                                            "id": 8300,
                                            "nodeType": "IfStatement",
                                            "src": "29122:7877:46",
                                            "trueBody": {
                                              "id": 8221,
                                              "nodeType": "Block",
                                              "src": "29147:286:46",
                                              "statements": [
                                                {
                                                  "expression": {
                                                    "id": 8213,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": false,
                                                    "lValueRequested": false,
                                                    "leftHandSide": {
                                                      "id": 8209,
                                                      "name": "ethUSDagg",
                                                      "nodeType": "Identifier",
                                                      "overloadedDeclarations": [],
                                                      "referencedDeclaration": 7968,
                                                      "src": "29193:9:46",
                                                      "typeDescriptions": {
                                                        "typeIdentifier": "t_contract$_AggregatorV3Interface_$103",
                                                        "typeString": "contract AggregatorV3Interface"
                                                      }
                                                    },
                                                    "nodeType": "Assignment",
                                                    "operator": "=",
                                                    "rightHandSide": {
                                                      "arguments": [
                                                        {
                                                          "hexValue": "307831336533456536393944313930394539383937323245373533383533414533306231376530386335",
                                                          "id": 8211,
                                                          "isConstant": false,
                                                          "isLValue": false,
                                                          "isPure": true,
                                                          "kind": "number",
                                                          "lValueRequested": false,
                                                          "nodeType": "Literal",
                                                          "src": "29244:42:46",
                                                          "typeDescriptions": {
                                                            "typeIdentifier": "t_address",
                                                            "typeString": "address"
                                                          },
                                                          "value": "0x13e3Ee699D1909E989722E753853AE30b17e08c5"
                                                        }
                                                      ],
                                                      "expression": {
                                                        "argumentTypes": [
                                                          {
                                                            "typeIdentifier": "t_address",
                                                            "typeString": "address"
                                                          }
                                                        ],
                                                        "id": 8210,
                                                        "name": "AggregatorV3Interface",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 103,
                                                        "src": "29205:21:46",
                                                        "typeDescriptions": {
                                                          "typeIdentifier": "t_type$_t_contract$_AggregatorV3Interface_$103_$",
                                                          "typeString": "type(contract AggregatorV3Interface)"
                                                        }
                                                      },
                                                      "id": 8212,
                                                      "isConstant": false,
                                                      "isLValue": false,
                                                      "isPure": true,
                                                      "kind": "typeConversion",
                                                      "lValueRequested": false,
                                                      "nameLocations": [],
                                                      "names": [],
                                                      "nodeType": "FunctionCall",
                                                      "src": "29205:95:46",
                                                      "tryCall": false,
                                                      "typeDescriptions": {
                                                        "typeIdentifier": "t_contract$_AggregatorV3Interface_$103",
                                                        "typeString": "contract AggregatorV3Interface"
                                                      }
                                                    },
                                                    "src": "29193:107:46",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_contract$_AggregatorV3Interface_$103",
                                                      "typeString": "contract AggregatorV3Interface"
                                                    }
                                                  },
                                                  "id": 8214,
                                                  "nodeType": "ExpressionStatement",
                                                  "src": "29193:107:46"
                                                },
                                                {
                                                  "expression": {
                                                    "id": 8219,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": false,
                                                    "lValueRequested": false,
                                                    "leftHandSide": {
                                                      "id": 8215,
                                                      "name": "mainUSDagg",
                                                      "nodeType": "Identifier",
                                                      "overloadedDeclarations": [],
                                                      "referencedDeclaration": 7971,
                                                      "src": "29314:10:46",
                                                      "typeDescriptions": {
                                                        "typeIdentifier": "t_contract$_AggregatorV3Interface_$103",
                                                        "typeString": "contract AggregatorV3Interface"
                                                      }
                                                    },
                                                    "nodeType": "Assignment",
                                                    "operator": "=",
                                                    "rightHandSide": {
                                                      "arguments": [
                                                        {
                                                          "hexValue": "307831336533456536393944313930394539383937323245373533383533414533306231376530386335",
                                                          "id": 8217,
                                                          "isConstant": false,
                                                          "isLValue": false,
                                                          "isPure": true,
                                                          "kind": "number",
                                                          "lValueRequested": false,
                                                          "nodeType": "Literal",
                                                          "src": "29366:42:46",
                                                          "typeDescriptions": {
                                                            "typeIdentifier": "t_address",
                                                            "typeString": "address"
                                                          },
                                                          "value": "0x13e3Ee699D1909E989722E753853AE30b17e08c5"
                                                        }
                                                      ],
                                                      "expression": {
                                                        "argumentTypes": [
                                                          {
                                                            "typeIdentifier": "t_address",
                                                            "typeString": "address"
                                                          }
                                                        ],
                                                        "id": 8216,
                                                        "name": "AggregatorV3Interface",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 103,
                                                        "src": "29327:21:46",
                                                        "typeDescriptions": {
                                                          "typeIdentifier": "t_type$_t_contract$_AggregatorV3Interface_$103_$",
                                                          "typeString": "type(contract AggregatorV3Interface)"
                                                        }
                                                      },
                                                      "id": 8218,
                                                      "isConstant": false,
                                                      "isLValue": false,
                                                      "isPure": true,
                                                      "kind": "typeConversion",
                                                      "lValueRequested": false,
                                                      "nameLocations": [],
                                                      "names": [],
                                                      "nodeType": "FunctionCall",
                                                      "src": "29327:95:46",
                                                      "tryCall": false,
                                                      "typeDescriptions": {
                                                        "typeIdentifier": "t_contract$_AggregatorV3Interface_$103",
                                                        "typeString": "contract AggregatorV3Interface"
                                                      }
                                                    },
                                                    "src": "29314:108:46",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_contract$_AggregatorV3Interface_$103",
                                                      "typeString": "contract AggregatorV3Interface"
                                                    }
                                                  },
                                                  "id": 8220,
                                                  "nodeType": "ExpressionStatement",
                                                  "src": "29314:108:46"
                                                }
                                              ]
                                            }
                                          },
                                          "id": 8301,
                                          "nodeType": "IfStatement",
                                          "src": "27616:9383:46",
                                          "trueBody": {
                                            "id": 8204,
                                            "nodeType": "Block",
                                            "src": "27645:293:46",
                                            "statements": [
                                              {
                                                "expression": {
                                                  "id": 8196,
                                                  "isConstant": false,
                                                  "isLValue": false,
                                                  "isPure": false,
                                                  "lValueRequested": false,
                                                  "leftHandSide": {
                                                    "id": 8192,
                                                    "name": "ethUSDagg",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 7968,
                                                    "src": "27698:9:46",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_contract$_AggregatorV3Interface_$103",
                                                      "typeString": "contract AggregatorV3Interface"
                                                    }
                                                  },
                                                  "nodeType": "Assignment",
                                                  "operator": "=",
                                                  "rightHandSide": {
                                                    "arguments": [
                                                      {
                                                        "hexValue": "307836324341653046413264613232306634336135314638364462324544623336446341394135413038",
                                                        "id": 8194,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": true,
                                                        "kind": "number",
                                                        "lValueRequested": false,
                                                        "nodeType": "Literal",
                                                        "src": "27749:42:46",
                                                        "typeDescriptions": {
                                                          "typeIdentifier": "t_address",
                                                          "typeString": "address"
                                                        },
                                                        "value": "0x62CAe0FA2da220f43a51F86Db2EDb36DcA9A5A08"
                                                      }
                                                    ],
                                                    "expression": {
                                                      "argumentTypes": [
                                                        {
                                                          "typeIdentifier": "t_address",
                                                          "typeString": "address"
                                                        }
                                                      ],
                                                      "id": 8193,
                                                      "name": "AggregatorV3Interface",
                                                      "nodeType": "Identifier",
                                                      "overloadedDeclarations": [],
                                                      "referencedDeclaration": 103,
                                                      "src": "27710:21:46",
                                                      "typeDescriptions": {
                                                        "typeIdentifier": "t_type$_t_contract$_AggregatorV3Interface_$103_$",
                                                        "typeString": "type(contract AggregatorV3Interface)"
                                                      }
                                                    },
                                                    "id": 8195,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": true,
                                                    "kind": "typeConversion",
                                                    "lValueRequested": false,
                                                    "nameLocations": [],
                                                    "names": [],
                                                    "nodeType": "FunctionCall",
                                                    "src": "27710:95:46",
                                                    "tryCall": false,
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_contract$_AggregatorV3Interface_$103",
                                                      "typeString": "contract AggregatorV3Interface"
                                                    }
                                                  },
                                                  "src": "27698:107:46",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_contract$_AggregatorV3Interface_$103",
                                                    "typeString": "contract AggregatorV3Interface"
                                                  }
                                                },
                                                "id": 8197,
                                                "nodeType": "ExpressionStatement",
                                                "src": "27698:107:46"
                                              },
                                              {
                                                "expression": {
                                                  "id": 8202,
                                                  "isConstant": false,
                                                  "isLValue": false,
                                                  "isPure": false,
                                                  "lValueRequested": false,
                                                  "leftHandSide": {
                                                    "id": 8198,
                                                    "name": "mainUSDagg",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 7971,
                                                    "src": "27819:10:46",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_contract$_AggregatorV3Interface_$103",
                                                      "typeString": "contract AggregatorV3Interface"
                                                    }
                                                  },
                                                  "nodeType": "Assignment",
                                                  "operator": "=",
                                                  "rightHandSide": {
                                                    "arguments": [
                                                      {
                                                        "hexValue": "307836324341653046413264613232306634336135314638364462324544623336446341394135413038",
                                                        "id": 8200,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": true,
                                                        "kind": "number",
                                                        "lValueRequested": false,
                                                        "nodeType": "Literal",
                                                        "src": "27871:42:46",
                                                        "typeDescriptions": {
                                                          "typeIdentifier": "t_address",
                                                          "typeString": "address"
                                                        },
                                                        "value": "0x62CAe0FA2da220f43a51F86Db2EDb36DcA9A5A08"
                                                      }
                                                    ],
                                                    "expression": {
                                                      "argumentTypes": [
                                                        {
                                                          "typeIdentifier": "t_address",
                                                          "typeString": "address"
                                                        }
                                                      ],
                                                      "id": 8199,
                                                      "name": "AggregatorV3Interface",
                                                      "nodeType": "Identifier",
                                                      "overloadedDeclarations": [],
                                                      "referencedDeclaration": 103,
                                                      "src": "27832:21:46",
                                                      "typeDescriptions": {
                                                        "typeIdentifier": "t_type$_t_contract$_AggregatorV3Interface_$103_$",
                                                        "typeString": "type(contract AggregatorV3Interface)"
                                                      }
                                                    },
                                                    "id": 8201,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": true,
                                                    "kind": "typeConversion",
                                                    "lValueRequested": false,
                                                    "nameLocations": [],
                                                    "names": [],
                                                    "nodeType": "FunctionCall",
                                                    "src": "27832:95:46",
                                                    "tryCall": false,
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_contract$_AggregatorV3Interface_$103",
                                                      "typeString": "contract AggregatorV3Interface"
                                                    }
                                                  },
                                                  "src": "27819:108:46",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_contract$_AggregatorV3Interface_$103",
                                                    "typeString": "contract AggregatorV3Interface"
                                                  }
                                                },
                                                "id": 8203,
                                                "nodeType": "ExpressionStatement",
                                                "src": "27819:108:46"
                                              }
                                            ]
                                          }
                                        },
                                        "id": 8302,
                                        "nodeType": "IfStatement",
                                        "src": "25898:11101:46",
                                        "trueBody": {
                                          "id": 8187,
                                          "nodeType": "Block",
                                          "src": "25926:290:46",
                                          "statements": [
                                            {
                                              "expression": {
                                                "id": 8179,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "leftHandSide": {
                                                  "id": 8175,
                                                  "name": "ethUSDagg",
                                                  "nodeType": "Identifier",
                                                  "overloadedDeclarations": [],
                                                  "referencedDeclaration": 7968,
                                                  "src": "25976:9:46",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_contract$_AggregatorV3Interface_$103",
                                                    "typeString": "contract AggregatorV3Interface"
                                                  }
                                                },
                                                "nodeType": "Assignment",
                                                "operator": "=",
                                                "rightHandSide": {
                                                  "arguments": [
                                                    {
                                                      "hexValue": "307842316637304132323946453763636544303432383234356462384231663643343863374561383261",
                                                      "id": 8177,
                                                      "isConstant": false,
                                                      "isLValue": false,
                                                      "isPure": true,
                                                      "kind": "number",
                                                      "lValueRequested": false,
                                                      "nodeType": "Literal",
                                                      "src": "26027:42:46",
                                                      "typeDescriptions": {
                                                        "typeIdentifier": "t_address",
                                                        "typeString": "address"
                                                      },
                                                      "value": "0xB1f70A229FE7cceD0428245db8B1f6C48c7Ea82a"
                                                    }
                                                  ],
                                                  "expression": {
                                                    "argumentTypes": [
                                                      {
                                                        "typeIdentifier": "t_address",
                                                        "typeString": "address"
                                                      }
                                                    ],
                                                    "id": 8176,
                                                    "name": "AggregatorV3Interface",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 103,
                                                    "src": "25988:21:46",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_type$_t_contract$_AggregatorV3Interface_$103_$",
                                                      "typeString": "type(contract AggregatorV3Interface)"
                                                    }
                                                  },
                                                  "id": 8178,
                                                  "isConstant": false,
                                                  "isLValue": false,
                                                  "isPure": true,
                                                  "kind": "typeConversion",
                                                  "lValueRequested": false,
                                                  "nameLocations": [],
                                                  "names": [],
                                                  "nodeType": "FunctionCall",
                                                  "src": "25988:95:46",
                                                  "tryCall": false,
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_contract$_AggregatorV3Interface_$103",
                                                    "typeString": "contract AggregatorV3Interface"
                                                  }
                                                },
                                                "src": "25976:107:46",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_contract$_AggregatorV3Interface_$103",
                                                  "typeString": "contract AggregatorV3Interface"
                                                }
                                              },
                                              "id": 8180,
                                              "nodeType": "ExpressionStatement",
                                              "src": "25976:107:46"
                                            },
                                            {
                                              "expression": {
                                                "id": 8185,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "leftHandSide": {
                                                  "id": 8181,
                                                  "name": "mainUSDagg",
                                                  "nodeType": "Identifier",
                                                  "overloadedDeclarations": [],
                                                  "referencedDeclaration": 7971,
                                                  "src": "26097:10:46",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_contract$_AggregatorV3Interface_$103",
                                                    "typeString": "contract AggregatorV3Interface"
                                                  }
                                                },
                                                "nodeType": "Assignment",
                                                "operator": "=",
                                                "rightHandSide": {
                                                  "arguments": [
                                                    {
                                                      "hexValue": "307842316637304132323946453763636544303432383234356462384231663643343863374561383261",
                                                      "id": 8183,
                                                      "isConstant": false,
                                                      "isLValue": false,
                                                      "isPure": true,
                                                      "kind": "number",
                                                      "lValueRequested": false,
                                                      "nodeType": "Literal",
                                                      "src": "26149:42:46",
                                                      "typeDescriptions": {
                                                        "typeIdentifier": "t_address",
                                                        "typeString": "address"
                                                      },
                                                      "value": "0xB1f70A229FE7cceD0428245db8B1f6C48c7Ea82a"
                                                    }
                                                  ],
                                                  "expression": {
                                                    "argumentTypes": [
                                                      {
                                                        "typeIdentifier": "t_address",
                                                        "typeString": "address"
                                                      }
                                                    ],
                                                    "id": 8182,
                                                    "name": "AggregatorV3Interface",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 103,
                                                    "src": "26110:21:46",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_type$_t_contract$_AggregatorV3Interface_$103_$",
                                                      "typeString": "type(contract AggregatorV3Interface)"
                                                    }
                                                  },
                                                  "id": 8184,
                                                  "isConstant": false,
                                                  "isLValue": false,
                                                  "isPure": true,
                                                  "kind": "typeConversion",
                                                  "lValueRequested": false,
                                                  "nameLocations": [],
                                                  "names": [],
                                                  "nodeType": "FunctionCall",
                                                  "src": "26110:95:46",
                                                  "tryCall": false,
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_contract$_AggregatorV3Interface_$103",
                                                    "typeString": "contract AggregatorV3Interface"
                                                  }
                                                },
                                                "src": "26097:108:46",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_contract$_AggregatorV3Interface_$103",
                                                  "typeString": "contract AggregatorV3Interface"
                                                }
                                              },
                                              "id": 8186,
                                              "nodeType": "ExpressionStatement",
                                              "src": "26097:108:46"
                                            }
                                          ]
                                        }
                                      },
                                      "id": 8303,
                                      "nodeType": "IfStatement",
                                      "src": "24530:12469:46",
                                      "trueBody": {
                                        "id": 8170,
                                        "nodeType": "Block",
                                        "src": "24556:284:46",
                                        "statements": [
                                          {
                                            "expression": {
                                              "id": 8162,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "leftHandSide": {
                                                "id": 8158,
                                                "name": "ethUSDagg",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 7968,
                                                "src": "24600:9:46",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_contract$_AggregatorV3Interface_$103",
                                                  "typeString": "contract AggregatorV3Interface"
                                                }
                                              },
                                              "nodeType": "Assignment",
                                              "operator": "=",
                                              "rightHandSide": {
                                                "arguments": [
                                                  {
                                                    "hexValue": "307861373637663734353333314432363763373735313239374439383262303530633933393835363237",
                                                    "id": 8160,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": true,
                                                    "kind": "number",
                                                    "lValueRequested": false,
                                                    "nodeType": "Literal",
                                                    "src": "24651:42:46",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_address",
                                                      "typeString": "address"
                                                    },
                                                    "value": "0xa767f745331D267c7751297D982b050c93985627"
                                                  }
                                                ],
                                                "expression": {
                                                  "argumentTypes": [
                                                    {
                                                      "typeIdentifier": "t_address",
                                                      "typeString": "address"
                                                    }
                                                  ],
                                                  "id": 8159,
                                                  "name": "AggregatorV3Interface",
                                                  "nodeType": "Identifier",
                                                  "overloadedDeclarations": [],
                                                  "referencedDeclaration": 103,
                                                  "src": "24612:21:46",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_type$_t_contract$_AggregatorV3Interface_$103_$",
                                                    "typeString": "type(contract AggregatorV3Interface)"
                                                  }
                                                },
                                                "id": 8161,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": true,
                                                "kind": "typeConversion",
                                                "lValueRequested": false,
                                                "nameLocations": [],
                                                "names": [],
                                                "nodeType": "FunctionCall",
                                                "src": "24612:95:46",
                                                "tryCall": false,
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_contract$_AggregatorV3Interface_$103",
                                                  "typeString": "contract AggregatorV3Interface"
                                                }
                                              },
                                              "src": "24600:107:46",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_contract$_AggregatorV3Interface_$103",
                                                "typeString": "contract AggregatorV3Interface"
                                              }
                                            },
                                            "id": 8163,
                                            "nodeType": "ExpressionStatement",
                                            "src": "24600:107:46"
                                          },
                                          {
                                            "expression": {
                                              "id": 8168,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "leftHandSide": {
                                                "id": 8164,
                                                "name": "mainUSDagg",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 7971,
                                                "src": "24721:10:46",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_contract$_AggregatorV3Interface_$103",
                                                  "typeString": "contract AggregatorV3Interface"
                                                }
                                              },
                                              "nodeType": "Assignment",
                                              "operator": "=",
                                              "rightHandSide": {
                                                "arguments": [
                                                  {
                                                    "hexValue": "307836373864663334313566633331393437644134333234654336333231323837346265356138326638",
                                                    "id": 8166,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": true,
                                                    "kind": "number",
                                                    "lValueRequested": false,
                                                    "nodeType": "Literal",
                                                    "src": "24773:42:46",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_address",
                                                      "typeString": "address"
                                                    },
                                                    "value": "0x678df3415fc31947dA4324eC63212874be5a82f8"
                                                  }
                                                ],
                                                "expression": {
                                                  "argumentTypes": [
                                                    {
                                                      "typeIdentifier": "t_address",
                                                      "typeString": "address"
                                                    }
                                                  ],
                                                  "id": 8165,
                                                  "name": "AggregatorV3Interface",
                                                  "nodeType": "Identifier",
                                                  "overloadedDeclarations": [],
                                                  "referencedDeclaration": 103,
                                                  "src": "24734:21:46",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_type$_t_contract$_AggregatorV3Interface_$103_$",
                                                    "typeString": "type(contract AggregatorV3Interface)"
                                                  }
                                                },
                                                "id": 8167,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": true,
                                                "kind": "typeConversion",
                                                "lValueRequested": false,
                                                "nameLocations": [],
                                                "names": [],
                                                "nodeType": "FunctionCall",
                                                "src": "24734:95:46",
                                                "tryCall": false,
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_contract$_AggregatorV3Interface_$103",
                                                  "typeString": "contract AggregatorV3Interface"
                                                }
                                              },
                                              "src": "24721:108:46",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_contract$_AggregatorV3Interface_$103",
                                                "typeString": "contract AggregatorV3Interface"
                                              }
                                            },
                                            "id": 8169,
                                            "nodeType": "ExpressionStatement",
                                            "src": "24721:108:46"
                                          }
                                        ]
                                      }
                                    },
                                    "id": 8304,
                                    "nodeType": "IfStatement",
                                    "src": "23323:13676:46",
                                    "trueBody": {
                                      "id": 8153,
                                      "nodeType": "Block",
                                      "src": "23349:285:46",
                                      "statements": [
                                        {
                                          "expression": {
                                            "id": 8145,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "leftHandSide": {
                                              "id": 8141,
                                              "name": "ethUSDagg",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 7968,
                                              "src": "23394:9:46",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_contract$_AggregatorV3Interface_$103",
                                                "typeString": "contract AggregatorV3Interface"
                                              }
                                            },
                                            "nodeType": "Assignment",
                                            "operator": "=",
                                            "rightHandSide": {
                                              "arguments": [
                                                {
                                                  "hexValue": "307831343364623343454566626466653536333161444433453530663736313442366261373038424137",
                                                  "id": 8143,
                                                  "isConstant": false,
                                                  "isLValue": false,
                                                  "isPure": true,
                                                  "kind": "number",
                                                  "lValueRequested": false,
                                                  "nodeType": "Literal",
                                                  "src": "23445:42:46",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                  },
                                                  "value": "0x143db3CEEfbdfe5631aDD3E50f7614B6ba708BA7"
                                                }
                                              ],
                                              "expression": {
                                                "argumentTypes": [
                                                  {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                  }
                                                ],
                                                "id": 8142,
                                                "name": "AggregatorV3Interface",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 103,
                                                "src": "23406:21:46",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_type$_t_contract$_AggregatorV3Interface_$103_$",
                                                  "typeString": "type(contract AggregatorV3Interface)"
                                                }
                                              },
                                              "id": 8144,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": true,
                                              "kind": "typeConversion",
                                              "lValueRequested": false,
                                              "nameLocations": [],
                                              "names": [],
                                              "nodeType": "FunctionCall",
                                              "src": "23406:95:46",
                                              "tryCall": false,
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_contract$_AggregatorV3Interface_$103",
                                                "typeString": "contract AggregatorV3Interface"
                                              }
                                            },
                                            "src": "23394:107:46",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_contract$_AggregatorV3Interface_$103",
                                              "typeString": "contract AggregatorV3Interface"
                                            }
                                          },
                                          "id": 8146,
                                          "nodeType": "ExpressionStatement",
                                          "src": "23394:107:46"
                                        },
                                        {
                                          "expression": {
                                            "id": 8151,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "leftHandSide": {
                                              "id": 8147,
                                              "name": "mainUSDagg",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 7971,
                                              "src": "23515:10:46",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_contract$_AggregatorV3Interface_$103",
                                                "typeString": "contract AggregatorV3Interface"
                                              }
                                            },
                                            "nodeType": "Assignment",
                                            "operator": "=",
                                            "rightHandSide": {
                                              "arguments": [
                                                {
                                                  "hexValue": "307832353134383935633732663530443862643442344639623131313046304436624432633937353236",
                                                  "id": 8149,
                                                  "isConstant": false,
                                                  "isLValue": false,
                                                  "isPure": true,
                                                  "kind": "number",
                                                  "lValueRequested": false,
                                                  "nodeType": "Literal",
                                                  "src": "23567:42:46",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                  },
                                                  "value": "0x2514895c72f50D8bd4B4F9b1110F0D6bD2c97526"
                                                }
                                              ],
                                              "expression": {
                                                "argumentTypes": [
                                                  {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                  }
                                                ],
                                                "id": 8148,
                                                "name": "AggregatorV3Interface",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 103,
                                                "src": "23528:21:46",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_type$_t_contract$_AggregatorV3Interface_$103_$",
                                                  "typeString": "type(contract AggregatorV3Interface)"
                                                }
                                              },
                                              "id": 8150,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": true,
                                              "kind": "typeConversion",
                                              "lValueRequested": false,
                                              "nameLocations": [],
                                              "names": [],
                                              "nodeType": "FunctionCall",
                                              "src": "23528:95:46",
                                              "tryCall": false,
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_contract$_AggregatorV3Interface_$103",
                                                "typeString": "contract AggregatorV3Interface"
                                              }
                                            },
                                            "src": "23515:108:46",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_contract$_AggregatorV3Interface_$103",
                                              "typeString": "contract AggregatorV3Interface"
                                            }
                                          },
                                          "id": 8152,
                                          "nodeType": "ExpressionStatement",
                                          "src": "23515:108:46"
                                        }
                                      ]
                                    }
                                  },
                                  "id": 8305,
                                  "nodeType": "IfStatement",
                                  "src": "22044:14955:46",
                                  "trueBody": {
                                    "id": 8136,
                                    "nodeType": "Block",
                                    "src": "22070:285:46",
                                    "statements": [
                                      {
                                        "expression": {
                                          "id": 8128,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "leftHandSide": {
                                            "id": 8124,
                                            "name": "ethUSDagg",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 7968,
                                            "src": "22115:9:46",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_contract$_AggregatorV3Interface_$103",
                                              "typeString": "contract AggregatorV3Interface"
                                            }
                                          },
                                          "nodeType": "Assignment",
                                          "operator": "=",
                                          "rightHandSide": {
                                            "arguments": [
                                              {
                                                "hexValue": "307839656631423863304534463764633862463537313945613439363838334443363430316435623265",
                                                "id": 8126,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": true,
                                                "kind": "number",
                                                "lValueRequested": false,
                                                "nodeType": "Literal",
                                                "src": "22166:42:46",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_address",
                                                  "typeString": "address"
                                                },
                                                "value": "0x9ef1B8c0E4F7dc8bF5719Ea496883DC6401d5b2e"
                                              }
                                            ],
                                            "expression": {
                                              "argumentTypes": [
                                                {
                                                  "typeIdentifier": "t_address",
                                                  "typeString": "address"
                                                }
                                              ],
                                              "id": 8125,
                                              "name": "AggregatorV3Interface",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 103,
                                              "src": "22127:21:46",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_type$_t_contract$_AggregatorV3Interface_$103_$",
                                                "typeString": "type(contract AggregatorV3Interface)"
                                              }
                                            },
                                            "id": 8127,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "kind": "typeConversion",
                                            "lValueRequested": false,
                                            "nameLocations": [],
                                            "names": [],
                                            "nodeType": "FunctionCall",
                                            "src": "22127:95:46",
                                            "tryCall": false,
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_contract$_AggregatorV3Interface_$103",
                                              "typeString": "contract AggregatorV3Interface"
                                            }
                                          },
                                          "src": "22115:107:46",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_contract$_AggregatorV3Interface_$103",
                                            "typeString": "contract AggregatorV3Interface"
                                          }
                                        },
                                        "id": 8129,
                                        "nodeType": "ExpressionStatement",
                                        "src": "22115:107:46"
                                      },
                                      {
                                        "expression": {
                                          "id": 8134,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "leftHandSide": {
                                            "id": 8130,
                                            "name": "mainUSDagg",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 7971,
                                            "src": "22236:10:46",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_contract$_AggregatorV3Interface_$103",
                                              "typeString": "contract AggregatorV3Interface"
                                            }
                                          },
                                          "nodeType": "Assignment",
                                          "operator": "=",
                                          "rightHandSide": {
                                            "arguments": [
                                              {
                                                "hexValue": "307830353637463233323332353166304161623135633864466231393637453465384137443432616545",
                                                "id": 8132,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": true,
                                                "kind": "number",
                                                "lValueRequested": false,
                                                "nodeType": "Literal",
                                                "src": "22288:42:46",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_address",
                                                  "typeString": "address"
                                                },
                                                "value": "0x0567F2323251f0Aab15c8dFb1967E4e8A7D42aeE"
                                              }
                                            ],
                                            "expression": {
                                              "argumentTypes": [
                                                {
                                                  "typeIdentifier": "t_address",
                                                  "typeString": "address"
                                                }
                                              ],
                                              "id": 8131,
                                              "name": "AggregatorV3Interface",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 103,
                                              "src": "22249:21:46",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_type$_t_contract$_AggregatorV3Interface_$103_$",
                                                "typeString": "type(contract AggregatorV3Interface)"
                                              }
                                            },
                                            "id": 8133,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "kind": "typeConversion",
                                            "lValueRequested": false,
                                            "nameLocations": [],
                                            "names": [],
                                            "nodeType": "FunctionCall",
                                            "src": "22249:95:46",
                                            "tryCall": false,
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_contract$_AggregatorV3Interface_$103",
                                              "typeString": "contract AggregatorV3Interface"
                                            }
                                          },
                                          "src": "22236:108:46",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_contract$_AggregatorV3Interface_$103",
                                            "typeString": "contract AggregatorV3Interface"
                                          }
                                        },
                                        "id": 8135,
                                        "nodeType": "ExpressionStatement",
                                        "src": "22236:108:46"
                                      }
                                    ]
                                  }
                                },
                                "id": 8306,
                                "nodeType": "IfStatement",
                                "src": "21215:15784:46",
                                "trueBody": {
                                  "id": 8119,
                                  "nodeType": "Block",
                                  "src": "21241:285:46",
                                  "statements": [
                                    {
                                      "expression": {
                                        "id": 8111,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftHandSide": {
                                          "id": 8107,
                                          "name": "ethUSDagg",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 7968,
                                          "src": "21286:9:46",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_contract$_AggregatorV3Interface_$103",
                                            "typeString": "contract AggregatorV3Interface"
                                          }
                                        },
                                        "nodeType": "Assignment",
                                        "operator": "=",
                                        "rightHandSide": {
                                          "arguments": [
                                            {
                                              "hexValue": "307846393638304439394436433935383965326139336137384130344132373965353039323035393435",
                                              "id": 8109,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": true,
                                              "kind": "number",
                                              "lValueRequested": false,
                                              "nodeType": "Literal",
                                              "src": "21337:42:46",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                              },
                                              "value": "0xF9680D99D6C9589e2a93a78A04A279e509205945"
                                            }
                                          ],
                                          "expression": {
                                            "argumentTypes": [
                                              {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                              }
                                            ],
                                            "id": 8108,
                                            "name": "AggregatorV3Interface",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 103,
                                            "src": "21298:21:46",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_type$_t_contract$_AggregatorV3Interface_$103_$",
                                              "typeString": "type(contract AggregatorV3Interface)"
                                            }
                                          },
                                          "id": 8110,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "kind": "typeConversion",
                                          "lValueRequested": false,
                                          "nameLocations": [],
                                          "names": [],
                                          "nodeType": "FunctionCall",
                                          "src": "21298:95:46",
                                          "tryCall": false,
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_contract$_AggregatorV3Interface_$103",
                                            "typeString": "contract AggregatorV3Interface"
                                          }
                                        },
                                        "src": "21286:107:46",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_contract$_AggregatorV3Interface_$103",
                                          "typeString": "contract AggregatorV3Interface"
                                        }
                                      },
                                      "id": 8112,
                                      "nodeType": "ExpressionStatement",
                                      "src": "21286:107:46"
                                    },
                                    {
                                      "expression": {
                                        "id": 8117,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftHandSide": {
                                          "id": 8113,
                                          "name": "mainUSDagg",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 7971,
                                          "src": "21407:10:46",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_contract$_AggregatorV3Interface_$103",
                                            "typeString": "contract AggregatorV3Interface"
                                          }
                                        },
                                        "nodeType": "Assignment",
                                        "operator": "=",
                                        "rightHandSide": {
                                          "arguments": [
                                            {
                                              "hexValue": "307841423539343630303337364563396644393146386538383564414446304345303336383632644530",
                                              "id": 8115,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": true,
                                              "kind": "number",
                                              "lValueRequested": false,
                                              "nodeType": "Literal",
                                              "src": "21459:42:46",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                              },
                                              "value": "0xAB594600376Ec9fD91F8e885dADF0CE036862dE0"
                                            }
                                          ],
                                          "expression": {
                                            "argumentTypes": [
                                              {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                              }
                                            ],
                                            "id": 8114,
                                            "name": "AggregatorV3Interface",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 103,
                                            "src": "21420:21:46",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_type$_t_contract$_AggregatorV3Interface_$103_$",
                                              "typeString": "type(contract AggregatorV3Interface)"
                                            }
                                          },
                                          "id": 8116,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "kind": "typeConversion",
                                          "lValueRequested": false,
                                          "nameLocations": [],
                                          "names": [],
                                          "nodeType": "FunctionCall",
                                          "src": "21420:95:46",
                                          "tryCall": false,
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_contract$_AggregatorV3Interface_$103",
                                            "typeString": "contract AggregatorV3Interface"
                                          }
                                        },
                                        "src": "21407:108:46",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_contract$_AggregatorV3Interface_$103",
                                          "typeString": "contract AggregatorV3Interface"
                                        }
                                      },
                                      "id": 8118,
                                      "nodeType": "ExpressionStatement",
                                      "src": "21407:108:46"
                                    }
                                  ]
                                }
                              },
                              "id": 8307,
                              "nodeType": "IfStatement",
                              "src": "19755:17244:46",
                              "trueBody": {
                                "id": 8102,
                                "nodeType": "Block",
                                "src": "19783:284:46",
                                "statements": [
                                  {
                                    "expression": {
                                      "id": 8094,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftHandSide": {
                                        "id": 8090,
                                        "name": "ethUSDagg",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 7968,
                                        "src": "19827:9:46",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_contract$_AggregatorV3Interface_$103",
                                          "typeString": "contract AggregatorV3Interface"
                                        }
                                      },
                                      "nodeType": "Assignment",
                                      "operator": "=",
                                      "rightHandSide": {
                                        "arguments": [
                                          {
                                            "hexValue": "307830373135413737393461316463386534323631354630353964443665343036413635393436353141",
                                            "id": 8092,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "kind": "number",
                                            "lValueRequested": false,
                                            "nodeType": "Literal",
                                            "src": "19878:42:46",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_address",
                                              "typeString": "address"
                                            },
                                            "value": "0x0715A7794a1dc8e42615F059dD6e406A6594651A"
                                          }
                                        ],
                                        "expression": {
                                          "argumentTypes": [
                                            {
                                              "typeIdentifier": "t_address",
                                              "typeString": "address"
                                            }
                                          ],
                                          "id": 8091,
                                          "name": "AggregatorV3Interface",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 103,
                                          "src": "19839:21:46",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_type$_t_contract$_AggregatorV3Interface_$103_$",
                                            "typeString": "type(contract AggregatorV3Interface)"
                                          }
                                        },
                                        "id": 8093,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "typeConversion",
                                        "lValueRequested": false,
                                        "nameLocations": [],
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "19839:95:46",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_contract$_AggregatorV3Interface_$103",
                                          "typeString": "contract AggregatorV3Interface"
                                        }
                                      },
                                      "src": "19827:107:46",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_AggregatorV3Interface_$103",
                                        "typeString": "contract AggregatorV3Interface"
                                      }
                                    },
                                    "id": 8095,
                                    "nodeType": "ExpressionStatement",
                                    "src": "19827:107:46"
                                  },
                                  {
                                    "expression": {
                                      "id": 8100,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftHandSide": {
                                        "id": 8096,
                                        "name": "mainUSDagg",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 7971,
                                        "src": "19948:10:46",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_contract$_AggregatorV3Interface_$103",
                                          "typeString": "contract AggregatorV3Interface"
                                        }
                                      },
                                      "nodeType": "Assignment",
                                      "operator": "=",
                                      "rightHandSide": {
                                        "arguments": [
                                          {
                                            "hexValue": "307864304435653344423434444530354539463239344242306133624545614630333044453234416461",
                                            "id": 8098,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "kind": "number",
                                            "lValueRequested": false,
                                            "nodeType": "Literal",
                                            "src": "20000:42:46",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_address",
                                              "typeString": "address"
                                            },
                                            "value": "0xd0D5e3DB44DE05E9F294BB0a3bEEaF030DE24Ada"
                                          }
                                        ],
                                        "expression": {
                                          "argumentTypes": [
                                            {
                                              "typeIdentifier": "t_address",
                                              "typeString": "address"
                                            }
                                          ],
                                          "id": 8097,
                                          "name": "AggregatorV3Interface",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 103,
                                          "src": "19961:21:46",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_type$_t_contract$_AggregatorV3Interface_$103_$",
                                            "typeString": "type(contract AggregatorV3Interface)"
                                          }
                                        },
                                        "id": 8099,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "typeConversion",
                                        "lValueRequested": false,
                                        "nameLocations": [],
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "19961:95:46",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_contract$_AggregatorV3Interface_$103",
                                          "typeString": "contract AggregatorV3Interface"
                                        }
                                      },
                                      "src": "19948:108:46",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_AggregatorV3Interface_$103",
                                        "typeString": "contract AggregatorV3Interface"
                                      }
                                    },
                                    "id": 8101,
                                    "nodeType": "ExpressionStatement",
                                    "src": "19948:108:46"
                                  }
                                ]
                              }
                            },
                            "id": 8308,
                            "nodeType": "IfStatement",
                            "src": "18453:18546:46",
                            "trueBody": {
                              "id": 8085,
                              "nodeType": "Block",
                              "src": "18479:284:46",
                              "statements": [
                                {
                                  "expression": {
                                    "id": 8077,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftHandSide": {
                                      "id": 8073,
                                      "name": "ethUSDagg",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 7968,
                                      "src": "18523:9:46",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_AggregatorV3Interface_$103",
                                        "typeString": "contract AggregatorV3Interface"
                                      }
                                    },
                                    "nodeType": "Assignment",
                                    "operator": "=",
                                    "rightHandSide": {
                                      "arguments": [
                                        {
                                          "hexValue": "307831314464443364313437453562383344303163656537303730303237303932333937643633363538",
                                          "id": 8075,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "kind": "number",
                                          "lValueRequested": false,
                                          "nodeType": "Literal",
                                          "src": "18574:42:46",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          },
                                          "value": "0x11DdD3d147E5b83D01cee7070027092397d63658"
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        ],
                                        "id": 8074,
                                        "name": "AggregatorV3Interface",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 103,
                                        "src": "18535:21:46",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_type$_t_contract$_AggregatorV3Interface_$103_$",
                                          "typeString": "type(contract AggregatorV3Interface)"
                                        }
                                      },
                                      "id": 8076,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "typeConversion",
                                      "lValueRequested": false,
                                      "nameLocations": [],
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "18535:95:46",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_AggregatorV3Interface_$103",
                                        "typeString": "contract AggregatorV3Interface"
                                      }
                                    },
                                    "src": "18523:107:46",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_AggregatorV3Interface_$103",
                                      "typeString": "contract AggregatorV3Interface"
                                    }
                                  },
                                  "id": 8078,
                                  "nodeType": "ExpressionStatement",
                                  "src": "18523:107:46"
                                },
                                {
                                  "expression": {
                                    "id": 8083,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftHandSide": {
                                      "id": 8079,
                                      "name": "mainUSDagg",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 7971,
                                      "src": "18644:10:46",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_AggregatorV3Interface_$103",
                                        "typeString": "contract AggregatorV3Interface"
                                      }
                                    },
                                    "nodeType": "Assignment",
                                    "operator": "=",
                                    "rightHandSide": {
                                      "arguments": [
                                        {
                                          "hexValue": "307866343736363535324431354145346432353641643431423663663239333334383242303638306463",
                                          "id": 8081,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "kind": "number",
                                          "lValueRequested": false,
                                          "nodeType": "Literal",
                                          "src": "18696:42:46",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          },
                                          "value": "0xf4766552D15AE4d256Ad41B6cf2933482B0680dc"
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        ],
                                        "id": 8080,
                                        "name": "AggregatorV3Interface",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 103,
                                        "src": "18657:21:46",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_type$_t_contract$_AggregatorV3Interface_$103_$",
                                          "typeString": "type(contract AggregatorV3Interface)"
                                        }
                                      },
                                      "id": 8082,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "typeConversion",
                                      "lValueRequested": false,
                                      "nameLocations": [],
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "18657:95:46",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_AggregatorV3Interface_$103",
                                        "typeString": "contract AggregatorV3Interface"
                                      }
                                    },
                                    "src": "18644:108:46",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_AggregatorV3Interface_$103",
                                      "typeString": "contract AggregatorV3Interface"
                                    }
                                  },
                                  "id": 8084,
                                  "nodeType": "ExpressionStatement",
                                  "src": "18644:108:46"
                                }
                              ]
                            }
                          },
                          "id": 8309,
                          "nodeType": "IfStatement",
                          "src": "17102:19897:46",
                          "trueBody": {
                            "id": 8068,
                            "nodeType": "Block",
                            "src": "17129:284:46",
                            "statements": [
                              {
                                "expression": {
                                  "id": 8060,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftHandSide": {
                                    "id": 8056,
                                    "name": "ethUSDagg",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 7968,
                                    "src": "17173:9:46",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_AggregatorV3Interface_$103",
                                      "typeString": "contract AggregatorV3Interface"
                                    }
                                  },
                                  "nodeType": "Assignment",
                                  "operator": "=",
                                  "rightHandSide": {
                                    "arguments": [
                                      {
                                        "hexValue": "307842384334353843393537613665366361374363353365443935624541353438633532414661413234",
                                        "id": 8058,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "17224:42:46",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        },
                                        "value": "0xB8C458C957a6e6ca7Cc53eD95bEA548c52AFaA24"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      ],
                                      "id": 8057,
                                      "name": "AggregatorV3Interface",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 103,
                                      "src": "17185:21:46",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_contract$_AggregatorV3Interface_$103_$",
                                        "typeString": "type(contract AggregatorV3Interface)"
                                      }
                                    },
                                    "id": 8059,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "17185:95:46",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_AggregatorV3Interface_$103",
                                      "typeString": "contract AggregatorV3Interface"
                                    }
                                  },
                                  "src": "17173:107:46",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_AggregatorV3Interface_$103",
                                    "typeString": "contract AggregatorV3Interface"
                                  }
                                },
                                "id": 8061,
                                "nodeType": "ExpressionStatement",
                                "src": "17173:107:46"
                              },
                              {
                                "expression": {
                                  "id": 8066,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftHandSide": {
                                    "id": 8062,
                                    "name": "mainUSDagg",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 7971,
                                    "src": "17294:10:46",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_AggregatorV3Interface_$103",
                                      "typeString": "contract AggregatorV3Interface"
                                    }
                                  },
                                  "nodeType": "Assignment",
                                  "operator": "=",
                                  "rightHandSide": {
                                    "arguments": [
                                      {
                                        "hexValue": "307865303436373642394139413239373342436230443134373862354531453930393842424237663344",
                                        "id": 8064,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "17346:42:46",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        },
                                        "value": "0xe04676B9A9A2973BCb0D1478b5E1E9098BBB7f3D"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      ],
                                      "id": 8063,
                                      "name": "AggregatorV3Interface",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 103,
                                      "src": "17307:21:46",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_contract$_AggregatorV3Interface_$103_$",
                                        "typeString": "type(contract AggregatorV3Interface)"
                                      }
                                    },
                                    "id": 8065,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "17307:95:46",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_AggregatorV3Interface_$103",
                                      "typeString": "contract AggregatorV3Interface"
                                    }
                                  },
                                  "src": "17294:108:46",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_AggregatorV3Interface_$103",
                                    "typeString": "contract AggregatorV3Interface"
                                  }
                                },
                                "id": 8067,
                                "nodeType": "ExpressionStatement",
                                "src": "17294:108:46"
                              }
                            ]
                          }
                        },
                        "id": 8310,
                        "nodeType": "IfStatement",
                        "src": "15086:21913:46",
                        "trueBody": {
                          "id": 8051,
                          "nodeType": "Block",
                          "src": "15114:282:46",
                          "statements": [
                            {
                              "expression": {
                                "id": 8043,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 8039,
                                  "name": "ethUSDagg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 7968,
                                  "src": "15156:9:46",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_AggregatorV3Interface_$103",
                                    "typeString": "contract AggregatorV3Interface"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "arguments": [
                                    {
                                      "hexValue": "307839373642334430333445313632643862443732443662394339383964353435623833393030336230",
                                      "id": 8041,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "15207:42:46",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      },
                                      "value": "0x976B3D034E162d8bD72D6b9C989d545b839003b0"
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    ],
                                    "id": 8040,
                                    "name": "AggregatorV3Interface",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 103,
                                    "src": "15168:21:46",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_contract$_AggregatorV3Interface_$103_$",
                                      "typeString": "type(contract AggregatorV3Interface)"
                                    }
                                  },
                                  "id": 8042,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "nameLocations": [],
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "15168:95:46",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_AggregatorV3Interface_$103",
                                    "typeString": "contract AggregatorV3Interface"
                                  }
                                },
                                "src": "15156:107:46",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_AggregatorV3Interface_$103",
                                  "typeString": "contract AggregatorV3Interface"
                                }
                              },
                              "id": 8044,
                              "nodeType": "ExpressionStatement",
                              "src": "15156:107:46"
                            },
                            {
                              "expression": {
                                "id": 8049,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 8045,
                                  "name": "mainUSDagg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 7971,
                                  "src": "15277:10:46",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_AggregatorV3Interface_$103",
                                    "typeString": "contract AggregatorV3Interface"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "arguments": [
                                    {
                                      "hexValue": "307830413737323330643137333138303735393833393133624332313435444231364337333636313536",
                                      "id": 8047,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "15329:42:46",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      },
                                      "value": "0x0A77230d17318075983913bC2145DB16C7366156"
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    ],
                                    "id": 8046,
                                    "name": "AggregatorV3Interface",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 103,
                                    "src": "15290:21:46",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_contract$_AggregatorV3Interface_$103_$",
                                      "typeString": "type(contract AggregatorV3Interface)"
                                    }
                                  },
                                  "id": 8048,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "nameLocations": [],
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "15290:95:46",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_AggregatorV3Interface_$103",
                                    "typeString": "contract AggregatorV3Interface"
                                  }
                                },
                                "src": "15277:108:46",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_AggregatorV3Interface_$103",
                                  "typeString": "contract AggregatorV3Interface"
                                }
                              },
                              "id": 8050,
                              "nodeType": "ExpressionStatement",
                              "src": "15277:108:46"
                            }
                          ]
                        }
                      },
                      "id": 8311,
                      "nodeType": "IfStatement",
                      "src": "14099:22900:46",
                      "trueBody": {
                        "id": 8034,
                        "nodeType": "Block",
                        "src": "14127:279:46",
                        "statements": [
                          {
                            "expression": {
                              "id": 8026,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftHandSide": {
                                "id": 8022,
                                "name": "ethUSDagg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 7968,
                                "src": "14166:9:46",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_AggregatorV3Interface_$103",
                                  "typeString": "contract AggregatorV3Interface"
                                }
                              },
                              "nodeType": "Assignment",
                              "operator": "=",
                              "rightHandSide": {
                                "arguments": [
                                  {
                                    "hexValue": "307838366436376333443338443262436545373232453630313032354332356135373530323163364541",
                                    "id": 8024,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "14217:42:46",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    "value": "0x86d67c3D38D2bCeE722E601025C25a575021c6EA"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 8023,
                                  "name": "AggregatorV3Interface",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 103,
                                  "src": "14178:21:46",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_contract$_AggregatorV3Interface_$103_$",
                                    "typeString": "type(contract AggregatorV3Interface)"
                                  }
                                },
                                "id": 8025,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "14178:95:46",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_AggregatorV3Interface_$103",
                                  "typeString": "contract AggregatorV3Interface"
                                }
                              },
                              "src": "14166:107:46",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_AggregatorV3Interface_$103",
                                "typeString": "contract AggregatorV3Interface"
                              }
                            },
                            "id": 8027,
                            "nodeType": "ExpressionStatement",
                            "src": "14166:107:46"
                          },
                          {
                            "expression": {
                              "id": 8032,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftHandSide": {
                                "id": 8028,
                                "name": "mainUSDagg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 7971,
                                "src": "14287:10:46",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_AggregatorV3Interface_$103",
                                  "typeString": "contract AggregatorV3Interface"
                                }
                              },
                              "nodeType": "Assignment",
                              "operator": "=",
                              "rightHandSide": {
                                "arguments": [
                                  {
                                    "hexValue": "307835343938424238364243393334633844333446444130384538314434343431353364304430366144",
                                    "id": 8030,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "14339:42:46",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    "value": "0x5498BB86BC934c8D34FDA08E81D444153d0D06aD"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 8029,
                                  "name": "AggregatorV3Interface",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 103,
                                  "src": "14300:21:46",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_contract$_AggregatorV3Interface_$103_$",
                                    "typeString": "type(contract AggregatorV3Interface)"
                                  }
                                },
                                "id": 8031,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "14300:95:46",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_AggregatorV3Interface_$103",
                                  "typeString": "contract AggregatorV3Interface"
                                }
                              },
                              "src": "14287:108:46",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_AggregatorV3Interface_$103",
                                "typeString": "contract AggregatorV3Interface"
                              }
                            },
                            "id": 8033,
                            "nodeType": "ExpressionStatement",
                            "src": "14287:108:46"
                          }
                        ]
                      }
                    },
                    "id": 8312,
                    "nodeType": "IfStatement",
                    "src": "13209:23790:46",
                    "trueBody": {
                      "id": 8017,
                      "nodeType": "Block",
                      "src": "13233:276:46",
                      "statements": [
                        {
                          "expression": {
                            "id": 8009,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftHandSide": {
                              "id": 8005,
                              "name": "ethUSDagg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 7968,
                              "src": "13269:9:46",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_AggregatorV3Interface_$103",
                                "typeString": "contract AggregatorV3Interface"
                              }
                            },
                            "nodeType": "Assignment",
                            "operator": "=",
                            "rightHandSide": {
                              "arguments": [
                                {
                                  "hexValue": "307844346133333836303537384465363144424162446338424664623938464437343266413730323865",
                                  "id": 8007,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "13320:42:46",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  "value": "0xD4a33860578De61DBAbDc8BFdb98FD742fA7028e"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 8006,
                                "name": "AggregatorV3Interface",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 103,
                                "src": "13281:21:46",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_AggregatorV3Interface_$103_$",
                                  "typeString": "type(contract AggregatorV3Interface)"
                                }
                              },
                              "id": 8008,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "13281:95:46",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_AggregatorV3Interface_$103",
                                "typeString": "contract AggregatorV3Interface"
                              }
                            },
                            "src": "13269:107:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_AggregatorV3Interface_$103",
                              "typeString": "contract AggregatorV3Interface"
                            }
                          },
                          "id": 8010,
                          "nodeType": "ExpressionStatement",
                          "src": "13269:107:46"
                        },
                        {
                          "expression": {
                            "id": 8015,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftHandSide": {
                              "id": 8011,
                              "name": "mainUSDagg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 7971,
                              "src": "13390:10:46",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_AggregatorV3Interface_$103",
                                "typeString": "contract AggregatorV3Interface"
                              }
                            },
                            "nodeType": "Assignment",
                            "operator": "=",
                            "rightHandSide": {
                              "arguments": [
                                {
                                  "hexValue": "307844346133333836303537384465363144424162446338424664623938464437343266413730323865",
                                  "id": 8013,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "13442:42:46",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  "value": "0xD4a33860578De61DBAbDc8BFdb98FD742fA7028e"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 8012,
                                "name": "AggregatorV3Interface",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 103,
                                "src": "13403:21:46",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_AggregatorV3Interface_$103_$",
                                  "typeString": "type(contract AggregatorV3Interface)"
                                }
                              },
                              "id": 8014,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "13403:95:46",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_AggregatorV3Interface_$103",
                                "typeString": "contract AggregatorV3Interface"
                              }
                            },
                            "src": "13390:108:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_AggregatorV3Interface_$103",
                              "typeString": "contract AggregatorV3Interface"
                            }
                          },
                          "id": 8016,
                          "nodeType": "ExpressionStatement",
                          "src": "13390:108:46"
                        }
                      ]
                    }
                  },
                  "id": 8313,
                  "nodeType": "IfStatement",
                  "src": "12028:24971:46",
                  "trueBody": {
                    "id": 8000,
                    "nodeType": "Block",
                    "src": "12052:279:46",
                    "statements": [
                      {
                        "expression": {
                          "id": 7992,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 7988,
                            "name": "ethUSDagg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7968,
                            "src": "12091:9:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_AggregatorV3Interface_$103",
                              "typeString": "contract AggregatorV3Interface"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "hexValue": "307835663465433344663963626434333731344645323734306635453336313631353563356238343139",
                                "id": 7990,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "12142:42:46",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                "value": "0x5f4eC3Df9cbd43714FE2740f5E3616155c5b8419"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 7989,
                              "name": "AggregatorV3Interface",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 103,
                              "src": "12103:21:46",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_AggregatorV3Interface_$103_$",
                                "typeString": "type(contract AggregatorV3Interface)"
                              }
                            },
                            "id": 7991,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "12103:95:46",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_AggregatorV3Interface_$103",
                              "typeString": "contract AggregatorV3Interface"
                            }
                          },
                          "src": "12091:107:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_AggregatorV3Interface_$103",
                            "typeString": "contract AggregatorV3Interface"
                          }
                        },
                        "id": 7993,
                        "nodeType": "ExpressionStatement",
                        "src": "12091:107:46"
                      },
                      {
                        "expression": {
                          "id": 7998,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 7994,
                            "name": "mainUSDagg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7971,
                            "src": "12212:10:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_AggregatorV3Interface_$103",
                              "typeString": "contract AggregatorV3Interface"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "hexValue": "307835663465433344663963626434333731344645323734306635453336313631353563356238343139",
                                "id": 7996,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "12264:42:46",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                "value": "0x5f4eC3Df9cbd43714FE2740f5E3616155c5b8419"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 7995,
                              "name": "AggregatorV3Interface",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 103,
                              "src": "12225:21:46",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_AggregatorV3Interface_$103_$",
                                "typeString": "type(contract AggregatorV3Interface)"
                              }
                            },
                            "id": 7997,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "12225:95:46",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_AggregatorV3Interface_$103",
                              "typeString": "contract AggregatorV3Interface"
                            }
                          },
                          "src": "12212:108:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_AggregatorV3Interface_$103",
                            "typeString": "contract AggregatorV3Interface"
                          }
                        },
                        "id": 7999,
                        "nodeType": "ExpressionStatement",
                        "src": "12212:108:46"
                      }
                    ]
                  }
                }
              ]
            },
            "id": 8315,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7982,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10899:2:46"
            },
            "returnParameters": {
              "id": 7983,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10902:0:46"
            },
            "scope": 8506,
            "src": "10888:28326:46",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 8339,
              "nodeType": "Block",
              "src": "40985:107:46",
              "statements": [
                {
                  "expression": {
                    "id": 8329,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 8325,
                      "name": "xUSDagg",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7974,
                      "src": "40995:7:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_AggregatorV3Interface_$103",
                        "typeString": "contract AggregatorV3Interface"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 8327,
                          "name": "_oracle",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 8318,
                          "src": "41027:7:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 8326,
                        "name": "AggregatorV3Interface",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 103,
                        "src": "41005:21:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_AggregatorV3Interface_$103_$",
                          "typeString": "type(contract AggregatorV3Interface)"
                        }
                      },
                      "id": 8328,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "41005:30:46",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_AggregatorV3Interface_$103",
                        "typeString": "contract AggregatorV3Interface"
                      }
                    },
                    "src": "40995:40:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_AggregatorV3Interface_$103",
                      "typeString": "contract AggregatorV3Interface"
                    }
                  },
                  "id": 8330,
                  "nodeType": "ExpressionStatement",
                  "src": "40995:40:46"
                },
                {
                  "expression": {
                    "id": 8335,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 8331,
                      "name": "xDig",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7979,
                      "src": "41045:4:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 8334,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "hexValue": "3138",
                        "id": 8332,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "41052:2:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_18_by_1",
                          "typeString": "int_const 18"
                        },
                        "value": "18"
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "-",
                      "rightExpression": {
                        "id": 8333,
                        "name": "_digits",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8320,
                        "src": "41057:7:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "41052:12:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "41045:19:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 8336,
                  "nodeType": "ExpressionStatement",
                  "src": "41045:19:46"
                },
                {
                  "expression": {
                    "hexValue": "74727565",
                    "id": 8337,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "41081:4:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 8324,
                  "id": 8338,
                  "nodeType": "Return",
                  "src": "41074:11:46"
                }
              ]
            },
            "documentation": {
              "id": 8316,
              "nodeType": "StructuredDocumentation",
              "src": "40709:198:46",
              "text": " @dev sets custom token x new oracle address\n @param _oracle address of the oracle\n @param _digits number of decimals the oracle passes\n @return exit in bool true"
            },
            "id": 8340,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_setX",
            "nameLocation": "40921:5:46",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 8321,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8318,
                  "mutability": "mutable",
                  "name": "_oracle",
                  "nameLocation": "40935:7:46",
                  "nodeType": "VariableDeclaration",
                  "scope": 8340,
                  "src": "40927:15:46",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 8317,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "40927:7:46",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8320,
                  "mutability": "mutable",
                  "name": "_digits",
                  "nameLocation": "40952:7:46",
                  "nodeType": "VariableDeclaration",
                  "scope": 8340,
                  "src": "40944:15:46",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 8319,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "40944:7:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "40926:34:46"
            },
            "returnParameters": {
              "id": 8324,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8323,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 8340,
                  "src": "40979:4:46",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 8322,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "40979:4:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "40978:6:46"
            },
            "scope": 8506,
            "src": "40912:180:46",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 8364,
              "nodeType": "Block",
              "src": "41374:107:46",
              "statements": [
                {
                  "expression": {
                    "id": 8354,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 8350,
                      "name": "yUSDagg",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7977,
                      "src": "41384:7:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_AggregatorV3Interface_$103",
                        "typeString": "contract AggregatorV3Interface"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 8352,
                          "name": "_oracle",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 8343,
                          "src": "41416:7:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 8351,
                        "name": "AggregatorV3Interface",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 103,
                        "src": "41394:21:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_AggregatorV3Interface_$103_$",
                          "typeString": "type(contract AggregatorV3Interface)"
                        }
                      },
                      "id": 8353,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "41394:30:46",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_AggregatorV3Interface_$103",
                        "typeString": "contract AggregatorV3Interface"
                      }
                    },
                    "src": "41384:40:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_AggregatorV3Interface_$103",
                      "typeString": "contract AggregatorV3Interface"
                    }
                  },
                  "id": 8355,
                  "nodeType": "ExpressionStatement",
                  "src": "41384:40:46"
                },
                {
                  "expression": {
                    "id": 8360,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 8356,
                      "name": "yDig",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7981,
                      "src": "41434:4:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 8359,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "hexValue": "3138",
                        "id": 8357,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "41441:2:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_18_by_1",
                          "typeString": "int_const 18"
                        },
                        "value": "18"
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "-",
                      "rightExpression": {
                        "id": 8358,
                        "name": "_digits",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8345,
                        "src": "41446:7:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "41441:12:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "41434:19:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 8361,
                  "nodeType": "ExpressionStatement",
                  "src": "41434:19:46"
                },
                {
                  "expression": {
                    "hexValue": "74727565",
                    "id": 8362,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "41470:4:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 8349,
                  "id": 8363,
                  "nodeType": "Return",
                  "src": "41463:11:46"
                }
              ]
            },
            "documentation": {
              "id": 8341,
              "nodeType": "StructuredDocumentation",
              "src": "41098:198:46",
              "text": " @dev sets custom token y new oracle address\n @param _oracle address of the oracle\n @param _digits number of decimals the oracle passes\n @return exit in bool true"
            },
            "id": 8365,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_setY",
            "nameLocation": "41310:5:46",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 8346,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8343,
                  "mutability": "mutable",
                  "name": "_oracle",
                  "nameLocation": "41324:7:46",
                  "nodeType": "VariableDeclaration",
                  "scope": 8365,
                  "src": "41316:15:46",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 8342,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "41316:7:46",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8345,
                  "mutability": "mutable",
                  "name": "_digits",
                  "nameLocation": "41341:7:46",
                  "nodeType": "VariableDeclaration",
                  "scope": 8365,
                  "src": "41333:15:46",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 8344,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "41333:7:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "41315:34:46"
            },
            "returnParameters": {
              "id": 8349,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8348,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 8365,
                  "src": "41368:4:46",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 8347,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "41368:4:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "41367:6:46"
            },
            "scope": 8506,
            "src": "41301:180:46",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 8391,
              "nodeType": "Block",
              "src": "43020:122:46",
              "statements": [
                {
                  "assignments": [
                    null,
                    8372,
                    null,
                    null,
                    null
                  ],
                  "declarations": [
                    null,
                    {
                      "constant": false,
                      "id": 8372,
                      "mutability": "mutable",
                      "name": "price",
                      "nameLocation": "43040:5:46",
                      "nodeType": "VariableDeclaration",
                      "scope": 8391,
                      "src": "43033:12:46",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int256",
                        "typeString": "int256"
                      },
                      "typeName": {
                        "id": 8371,
                        "name": "int256",
                        "nodeType": "ElementaryTypeName",
                        "src": "43033:6:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        }
                      },
                      "visibility": "internal"
                    },
                    null,
                    null,
                    null
                  ],
                  "id": 8376,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 8373,
                        "name": "ethUSDagg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7968,
                        "src": "43055:9:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AggregatorV3Interface_$103",
                          "typeString": "contract AggregatorV3Interface"
                        }
                      },
                      "id": 8374,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "43065:15:46",
                      "memberName": "latestRoundData",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 102,
                      "src": "43055:25:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_uint80_$_t_int256_$_t_uint256_$_t_uint256_$_t_uint80_$",
                        "typeString": "function () view external returns (uint80,int256,uint256,uint256,uint80)"
                      }
                    },
                    "id": 8375,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "43055:27:46",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint80_$_t_int256_$_t_uint256_$_t_uint256_$_t_uint80_$",
                      "typeString": "tuple(uint80,int256,uint256,uint256,uint80)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "43030:52:46"
                },
                {
                  "expression": {
                    "id": 8389,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 8377,
                      "name": "priceFull",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8369,
                      "src": "43092:9:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int256",
                        "typeString": "int256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 8387,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "arguments": [
                              {
                                "id": 8382,
                                "name": "price",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 8372,
                                "src": "43119:5:46",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_int256",
                                  "typeString": "int256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_int256",
                                  "typeString": "int256"
                                }
                              ],
                              "id": 8381,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "43111:7:46",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_uint256_$",
                                "typeString": "type(uint256)"
                              },
                              "typeName": {
                                "id": 8380,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "43111:7:46",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 8383,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "43111:14:46",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "commonType": {
                              "typeIdentifier": "t_rational_10000000000_by_1",
                              "typeString": "int_const 10000000000"
                            },
                            "id": 8386,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "leftExpression": {
                              "hexValue": "3130",
                              "id": 8384,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "43128:2:46",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_10_by_1",
                                "typeString": "int_const 10"
                              },
                              "value": "10"
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "**",
                            "rightExpression": {
                              "hexValue": "3130",
                              "id": 8385,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "43132:2:46",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_10_by_1",
                                "typeString": "int_const 10"
                              },
                              "value": "10"
                            },
                            "src": "43128:6:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_10000000000_by_1",
                              "typeString": "int_const 10000000000"
                            }
                          },
                          "src": "43111:23:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 8379,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "43104:6:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_int256_$",
                          "typeString": "type(int256)"
                        },
                        "typeName": {
                          "id": 8378,
                          "name": "int256",
                          "nodeType": "ElementaryTypeName",
                          "src": "43104:6:46",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 8388,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "43104:31:46",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_int256",
                        "typeString": "int256"
                      }
                    },
                    "src": "43092:43:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "id": 8390,
                  "nodeType": "ExpressionStatement",
                  "src": "43092:43:46"
                }
              ]
            },
            "documentation": {
              "id": 8366,
              "nodeType": "StructuredDocumentation",
              "src": "42813:137:46",
              "text": " @dev Divides between two values substracting the remainder from the dividend\n @return priceFull eth price in usd"
            },
            "functionSelector": "9a18c795",
            "id": 8392,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "WethUsdPrice",
            "nameLocation": "42964:12:46",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 8367,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "42976:2:46"
            },
            "returnParameters": {
              "id": 8370,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8369,
                  "mutability": "mutable",
                  "name": "priceFull",
                  "nameLocation": "43009:9:46",
                  "nodeType": "VariableDeclaration",
                  "scope": 8392,
                  "src": "43002:16:46",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int256",
                    "typeString": "int256"
                  },
                  "typeName": {
                    "id": 8368,
                    "name": "int256",
                    "nodeType": "ElementaryTypeName",
                    "src": "43002:6:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "43001:18:46"
            },
            "scope": 8506,
            "src": "42955:187:46",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 8418,
              "nodeType": "Block",
              "src": "43359:123:46",
              "statements": [
                {
                  "assignments": [
                    null,
                    8399,
                    null,
                    null,
                    null
                  ],
                  "declarations": [
                    null,
                    {
                      "constant": false,
                      "id": 8399,
                      "mutability": "mutable",
                      "name": "price",
                      "nameLocation": "43379:5:46",
                      "nodeType": "VariableDeclaration",
                      "scope": 8418,
                      "src": "43372:12:46",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int256",
                        "typeString": "int256"
                      },
                      "typeName": {
                        "id": 8398,
                        "name": "int256",
                        "nodeType": "ElementaryTypeName",
                        "src": "43372:6:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        }
                      },
                      "visibility": "internal"
                    },
                    null,
                    null,
                    null
                  ],
                  "id": 8403,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 8400,
                        "name": "mainUSDagg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7971,
                        "src": "43394:10:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AggregatorV3Interface_$103",
                          "typeString": "contract AggregatorV3Interface"
                        }
                      },
                      "id": 8401,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "43405:15:46",
                      "memberName": "latestRoundData",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 102,
                      "src": "43394:26:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_uint80_$_t_int256_$_t_uint256_$_t_uint256_$_t_uint80_$",
                        "typeString": "function () view external returns (uint80,int256,uint256,uint256,uint80)"
                      }
                    },
                    "id": 8402,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "43394:28:46",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint80_$_t_int256_$_t_uint256_$_t_uint256_$_t_uint80_$",
                      "typeString": "tuple(uint80,int256,uint256,uint256,uint80)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "43369:53:46"
                },
                {
                  "expression": {
                    "id": 8416,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 8404,
                      "name": "priceFull",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8396,
                      "src": "43432:9:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int256",
                        "typeString": "int256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 8414,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "arguments": [
                              {
                                "id": 8409,
                                "name": "price",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 8399,
                                "src": "43459:5:46",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_int256",
                                  "typeString": "int256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_int256",
                                  "typeString": "int256"
                                }
                              ],
                              "id": 8408,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "43451:7:46",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_uint256_$",
                                "typeString": "type(uint256)"
                              },
                              "typeName": {
                                "id": 8407,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "43451:7:46",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 8410,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "43451:14:46",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "commonType": {
                              "typeIdentifier": "t_rational_10000000000_by_1",
                              "typeString": "int_const 10000000000"
                            },
                            "id": 8413,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "leftExpression": {
                              "hexValue": "3130",
                              "id": 8411,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "43468:2:46",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_10_by_1",
                                "typeString": "int_const 10"
                              },
                              "value": "10"
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "**",
                            "rightExpression": {
                              "hexValue": "3130",
                              "id": 8412,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "43472:2:46",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_10_by_1",
                                "typeString": "int_const 10"
                              },
                              "value": "10"
                            },
                            "src": "43468:6:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_10000000000_by_1",
                              "typeString": "int_const 10000000000"
                            }
                          },
                          "src": "43451:23:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 8406,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "43444:6:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_int256_$",
                          "typeString": "type(int256)"
                        },
                        "typeName": {
                          "id": 8405,
                          "name": "int256",
                          "nodeType": "ElementaryTypeName",
                          "src": "43444:6:46",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 8415,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "43444:31:46",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_int256",
                        "typeString": "int256"
                      }
                    },
                    "src": "43432:43:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "id": 8417,
                  "nodeType": "ExpressionStatement",
                  "src": "43432:43:46"
                }
              ]
            },
            "documentation": {
              "id": 8393,
              "nodeType": "StructuredDocumentation",
              "src": "43148:141:46",
              "text": " @dev Divides between two values substracting the remainder from the dividend\n @return priceFull gascoin price in usd"
            },
            "functionSelector": "f2e9bd7a",
            "id": 8419,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "CoinUsdPrice",
            "nameLocation": "43303:12:46",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 8394,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "43315:2:46"
            },
            "returnParameters": {
              "id": 8397,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8396,
                  "mutability": "mutable",
                  "name": "priceFull",
                  "nameLocation": "43348:9:46",
                  "nodeType": "VariableDeclaration",
                  "scope": 8419,
                  "src": "43341:16:46",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int256",
                    "typeString": "int256"
                  },
                  "typeName": {
                    "id": 8395,
                    "name": "int256",
                    "nodeType": "ElementaryTypeName",
                    "src": "43341:6:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "43340:18:46"
            },
            "scope": 8506,
            "src": "43294:188:46",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 8434,
              "nodeType": "Block",
              "src": "43763:47:46",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 8430,
                        "name": "_oracle",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8422,
                        "src": "43786:7:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 8431,
                        "name": "_digits",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8424,
                        "src": "43795:7:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 8429,
                      "name": "_setX",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8340,
                      "src": "43780:5:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) returns (bool)"
                      }
                    },
                    "id": 8432,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "43780:23:46",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 8428,
                  "id": 8433,
                  "nodeType": "Return",
                  "src": "43773:30:46"
                }
              ]
            },
            "documentation": {
              "id": 8420,
              "nodeType": "StructuredDocumentation",
              "src": "43488:198:46",
              "text": " @dev sets custom token x new oracle address\n @param _oracle address of the oracle\n @param _digits number of decimals the oracle passes\n @return exit in bool true"
            },
            "functionSelector": "4a2ad99f",
            "id": 8435,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setX",
            "nameLocation": "43700:4:46",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 8425,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8422,
                  "mutability": "mutable",
                  "name": "_oracle",
                  "nameLocation": "43713:7:46",
                  "nodeType": "VariableDeclaration",
                  "scope": 8435,
                  "src": "43705:15:46",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 8421,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "43705:7:46",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8424,
                  "mutability": "mutable",
                  "name": "_digits",
                  "nameLocation": "43730:7:46",
                  "nodeType": "VariableDeclaration",
                  "scope": 8435,
                  "src": "43722:15:46",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 8423,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "43722:7:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "43704:34:46"
            },
            "returnParameters": {
              "id": 8428,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8427,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 8435,
                  "src": "43757:4:46",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 8426,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "43757:4:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "43756:6:46"
            },
            "scope": 8506,
            "src": "43691:119:46",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 8461,
              "nodeType": "Block",
              "src": "44031:122:46",
              "statements": [
                {
                  "assignments": [
                    null,
                    8442,
                    null,
                    null,
                    null
                  ],
                  "declarations": [
                    null,
                    {
                      "constant": false,
                      "id": 8442,
                      "mutability": "mutable",
                      "name": "price",
                      "nameLocation": "44051:5:46",
                      "nodeType": "VariableDeclaration",
                      "scope": 8461,
                      "src": "44044:12:46",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int256",
                        "typeString": "int256"
                      },
                      "typeName": {
                        "id": 8441,
                        "name": "int256",
                        "nodeType": "ElementaryTypeName",
                        "src": "44044:6:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        }
                      },
                      "visibility": "internal"
                    },
                    null,
                    null,
                    null
                  ],
                  "id": 8446,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 8443,
                        "name": "xUSDagg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7974,
                        "src": "44066:7:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AggregatorV3Interface_$103",
                          "typeString": "contract AggregatorV3Interface"
                        }
                      },
                      "id": 8444,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "44074:15:46",
                      "memberName": "latestRoundData",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 102,
                      "src": "44066:23:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_uint80_$_t_int256_$_t_uint256_$_t_uint256_$_t_uint80_$",
                        "typeString": "function () view external returns (uint80,int256,uint256,uint256,uint80)"
                      }
                    },
                    "id": 8445,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "44066:25:46",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint80_$_t_int256_$_t_uint256_$_t_uint256_$_t_uint80_$",
                      "typeString": "tuple(uint80,int256,uint256,uint256,uint80)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "44041:50:46"
                },
                {
                  "expression": {
                    "id": 8459,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 8447,
                      "name": "priceFull",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8439,
                      "src": "44101:9:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int256",
                        "typeString": "int256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 8457,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "arguments": [
                              {
                                "id": 8452,
                                "name": "price",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 8442,
                                "src": "44128:5:46",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_int256",
                                  "typeString": "int256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_int256",
                                  "typeString": "int256"
                                }
                              ],
                              "id": 8451,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "44120:7:46",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_uint256_$",
                                "typeString": "type(uint256)"
                              },
                              "typeName": {
                                "id": 8450,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "44120:7:46",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 8453,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "44120:14:46",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 8456,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "hexValue": "3130",
                              "id": 8454,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "44137:2:46",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_10_by_1",
                                "typeString": "int_const 10"
                              },
                              "value": "10"
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "**",
                            "rightExpression": {
                              "id": 8455,
                              "name": "xDig",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 7979,
                              "src": "44141:4:46",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "44137:8:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "44120:25:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 8449,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "44113:6:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_int256_$",
                          "typeString": "type(int256)"
                        },
                        "typeName": {
                          "id": 8448,
                          "name": "int256",
                          "nodeType": "ElementaryTypeName",
                          "src": "44113:6:46",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 8458,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "44113:33:46",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_int256",
                        "typeString": "int256"
                      }
                    },
                    "src": "44101:45:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "id": 8460,
                  "nodeType": "ExpressionStatement",
                  "src": "44101:45:46"
                }
              ]
            },
            "documentation": {
              "id": 8436,
              "nodeType": "StructuredDocumentation",
              "src": "43816:148:46",
              "text": " @dev Divides between two values substracting the remainder from the dividend\n @return priceFull custom token x price in usd"
            },
            "functionSelector": "414641df",
            "id": 8462,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "XUsdPrice",
            "nameLocation": "43978:9:46",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 8437,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "43987:2:46"
            },
            "returnParameters": {
              "id": 8440,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8439,
                  "mutability": "mutable",
                  "name": "priceFull",
                  "nameLocation": "44020:9:46",
                  "nodeType": "VariableDeclaration",
                  "scope": 8462,
                  "src": "44013:16:46",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int256",
                    "typeString": "int256"
                  },
                  "typeName": {
                    "id": 8438,
                    "name": "int256",
                    "nodeType": "ElementaryTypeName",
                    "src": "44013:6:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "44012:18:46"
            },
            "scope": 8506,
            "src": "43969:184:46",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 8477,
              "nodeType": "Block",
              "src": "44434:47:46",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 8473,
                        "name": "_oracle",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8465,
                        "src": "44457:7:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 8474,
                        "name": "_digits",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8467,
                        "src": "44466:7:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 8472,
                      "name": "_setY",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8365,
                      "src": "44451:5:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) returns (bool)"
                      }
                    },
                    "id": 8475,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "44451:23:46",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 8471,
                  "id": 8476,
                  "nodeType": "Return",
                  "src": "44444:30:46"
                }
              ]
            },
            "documentation": {
              "id": 8463,
              "nodeType": "StructuredDocumentation",
              "src": "44159:198:46",
              "text": " @dev sets custom token y new oracle address\n @param _oracle address of the oracle\n @param _digits number of decimals the oracle passes\n @return exit in bool true"
            },
            "functionSelector": "e9f38fc5",
            "id": 8478,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setY",
            "nameLocation": "44371:4:46",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 8468,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8465,
                  "mutability": "mutable",
                  "name": "_oracle",
                  "nameLocation": "44384:7:46",
                  "nodeType": "VariableDeclaration",
                  "scope": 8478,
                  "src": "44376:15:46",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 8464,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "44376:7:46",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8467,
                  "mutability": "mutable",
                  "name": "_digits",
                  "nameLocation": "44401:7:46",
                  "nodeType": "VariableDeclaration",
                  "scope": 8478,
                  "src": "44393:15:46",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 8466,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "44393:7:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "44375:34:46"
            },
            "returnParameters": {
              "id": 8471,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8470,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 8478,
                  "src": "44428:4:46",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 8469,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "44428:4:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "44427:6:46"
            },
            "scope": 8506,
            "src": "44362:119:46",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 8504,
              "nodeType": "Block",
              "src": "44752:122:46",
              "statements": [
                {
                  "assignments": [
                    null,
                    8485,
                    null,
                    null,
                    null
                  ],
                  "declarations": [
                    null,
                    {
                      "constant": false,
                      "id": 8485,
                      "mutability": "mutable",
                      "name": "price",
                      "nameLocation": "44772:5:46",
                      "nodeType": "VariableDeclaration",
                      "scope": 8504,
                      "src": "44765:12:46",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int256",
                        "typeString": "int256"
                      },
                      "typeName": {
                        "id": 8484,
                        "name": "int256",
                        "nodeType": "ElementaryTypeName",
                        "src": "44765:6:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        }
                      },
                      "visibility": "internal"
                    },
                    null,
                    null,
                    null
                  ],
                  "id": 8489,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 8486,
                        "name": "yUSDagg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7977,
                        "src": "44787:7:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AggregatorV3Interface_$103",
                          "typeString": "contract AggregatorV3Interface"
                        }
                      },
                      "id": 8487,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "44795:15:46",
                      "memberName": "latestRoundData",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 102,
                      "src": "44787:23:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_uint80_$_t_int256_$_t_uint256_$_t_uint256_$_t_uint80_$",
                        "typeString": "function () view external returns (uint80,int256,uint256,uint256,uint80)"
                      }
                    },
                    "id": 8488,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "44787:25:46",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint80_$_t_int256_$_t_uint256_$_t_uint256_$_t_uint80_$",
                      "typeString": "tuple(uint80,int256,uint256,uint256,uint80)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "44762:50:46"
                },
                {
                  "expression": {
                    "id": 8502,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 8490,
                      "name": "priceFull",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8482,
                      "src": "44822:9:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int256",
                        "typeString": "int256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 8500,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "arguments": [
                              {
                                "id": 8495,
                                "name": "price",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 8485,
                                "src": "44849:5:46",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_int256",
                                  "typeString": "int256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_int256",
                                  "typeString": "int256"
                                }
                              ],
                              "id": 8494,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "44841:7:46",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_uint256_$",
                                "typeString": "type(uint256)"
                              },
                              "typeName": {
                                "id": 8493,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "44841:7:46",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 8496,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "44841:14:46",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 8499,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "hexValue": "3130",
                              "id": 8497,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "44858:2:46",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_10_by_1",
                                "typeString": "int_const 10"
                              },
                              "value": "10"
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "**",
                            "rightExpression": {
                              "id": 8498,
                              "name": "yDig",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 7981,
                              "src": "44862:4:46",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "44858:8:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "44841:25:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 8492,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "44834:6:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_int256_$",
                          "typeString": "type(int256)"
                        },
                        "typeName": {
                          "id": 8491,
                          "name": "int256",
                          "nodeType": "ElementaryTypeName",
                          "src": "44834:6:46",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 8501,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "44834:33:46",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_int256",
                        "typeString": "int256"
                      }
                    },
                    "src": "44822:45:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "id": 8503,
                  "nodeType": "ExpressionStatement",
                  "src": "44822:45:46"
                }
              ]
            },
            "documentation": {
              "id": 8479,
              "nodeType": "StructuredDocumentation",
              "src": "44487:148:46",
              "text": " @dev Divides between two values substracting the remainder from the dividend\n @return priceFull custom token x price in usd"
            },
            "functionSelector": "96722fe5",
            "id": 8505,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "YUsdPrice",
            "nameLocation": "44699:9:46",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 8480,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "44708:2:46"
            },
            "returnParameters": {
              "id": 8483,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8482,
                  "mutability": "mutable",
                  "name": "priceFull",
                  "nameLocation": "44741:9:46",
                  "nodeType": "VariableDeclaration",
                  "scope": 8505,
                  "src": "44734:16:46",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int256",
                    "typeString": "int256"
                  },
                  "typeName": {
                    "id": 8481,
                    "name": "int256",
                    "nodeType": "ElementaryTypeName",
                    "src": "44734:6:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "44733:18:46"
            },
            "scope": 8506,
            "src": "44690:184:46",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 8507,
        "src": "8842:36034:46",
        "usedErrors": []
      }
    ],
    "src": "8665:38928:46"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.17+commit.8df45f5f.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.4.8",
  "updatedAt": "2023-04-02T20:30:54.884Z",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "CoinUsdPrice()": {
        "details": "Divides between two values substracting the remainder from the dividend",
        "returns": {
          "priceFull": "gascoin price in usd"
        }
      },
      "WethUsdPrice()": {
        "details": "Divides between two values substracting the remainder from the dividend",
        "returns": {
          "priceFull": "eth price in usd"
        }
      },
      "XUsdPrice()": {
        "details": "Divides between two values substracting the remainder from the dividend",
        "returns": {
          "priceFull": "custom token x price in usd"
        }
      },
      "YUsdPrice()": {
        "details": "Divides between two values substracting the remainder from the dividend",
        "returns": {
          "priceFull": "custom token x price in usd"
        }
      },
      "setX(address,uint256)": {
        "details": "sets custom token x new oracle address",
        "params": {
          "_digits": "number of decimals the oracle passes",
          "_oracle": "address of the oracle"
        },
        "returns": {
          "_0": "exit in bool true"
        }
      },
      "setY(address,uint256)": {
        "details": "sets custom token y new oracle address",
        "params": {
          "_digits": "number of decimals the oracle passes",
          "_oracle": "address of the oracle"
        },
        "returns": {
          "_0": "exit in bool true"
        }
      }
    },
    "stateVariables": {
      "ethUSDagg": {
        "details": "this contract is a price consumer contract with all possible networks integrated"
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}